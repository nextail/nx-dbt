[project]
name = "nx_dbt"
dynamic = ["version"]
description = ""
license = { text = "Nextail private use" }
authors = [
    {name = "nextail"},
]
dependencies = [
    "dagster==1.10.14",
    "dagster-cloud==1.10.14",
    "dagster-aws==0.26.14",
    "dagster-docker==0.26.14",
    "dagster-dbt==0.26.14",
    "dagster-k8s==0.26.14",
    "dagster-snowflake==0.26.14",
    "dbt-core==1.9.8",
    "dbt-snowflake==1.9.4",
]
requires-python = ">=3.11, <3.12"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.3.5",
]
dev = [
    "dagster-webserver==1.10.14",
    "dagster-postgres==0.26.14",
    "debugpy==1.8.13",
    # linter and formatter
    "pre-commit==4.2.0",
    "black==25.1.0",                   # python formatter
    "ruff==v0.11.10",                   # python linter (flake8 compatible)
    "yamllint==1.37.1",                # yaml linter
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --ignore-glob=__pypackages__/**"

[tool.pyright]
pythonVersion = "3.11"
exclude = ["**/__pycache__", "**/__pypackages__"]
ignore = ["**/__pypackages__"]
reportGeneralTypeIssues = false                                      # to allow working with dagster resources retrieved from context

[tool.black]
line-length = 120
target-version = ["py311"]
preview = true

[tool.isort]
profile = "black"
py_version = "311"
line_length = 120

[tool.ruff]
extend-exclude = ["__pypackages__"]
line-length = 120
target-version = "py311"
select = [
    "A",   # flake8-builtins
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "Q",   # flake8-quotes
    "N",   # pep8-naming
    "E",   # Pycodestyle
    "W",   # Pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "RUF", # Ruff-specific rules
]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
