{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v12.json", "dbt_version": "1.10.4", "generated_at": "2025-08-04T06:08:41.807858Z", "invocation_id": "19eced12-5cf4-4dd6-bafc-c94677209a33", "invocation_started_at": "2025-08-04T06:03:39.386000+00:00", "env": {}, "project_name": "nextail", "project_id": "a6b81d205b53d55106243f3735ed701d", "user_id": null, "send_anonymous_usage_stats": false, "adapter_type": "snowflake", "quoting": {"database": false, "schema": false, "identifier": false, "column": null}}, "nodes": {"model.nextail.k8s_grouped_labels_per_date": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_silver", "name": "k8s_grouped_labels_per_date", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_silver/k8s_grouped_labels_per_date.sql", "original_file_path": "models/costs/costs_silver/k8s_grouped_labels_per_date.sql", "unique_id": "model.nextail.k8s_grouped_labels_per_date", "fqn": ["nextail", "costs", "costs_silver", "k8s_grouped_labels_per_date"], "alias": "k8s_grouped_labels_per_date", "checksum": {"name": "sha256", "checksum": "5a53d0a3e8d9f03c7041d49da5904fded6656eccb50c1dd4a5dbda3882104821"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["k8s_environment", "start_date", "service", "module", "submodule", "operation", "tenant", "environment", "correlation_id", "execution_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "ToDo", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_silver/_k8s_grouped_labels_per_date_tests.yml", "build_path": "target/run/nextail/models/costs/costs_silver/k8s_grouped_labels_per_date.sql", "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["k8s_environment", "start_date", "service", "module", "submodule", "operation", "tenant", "environment", "correlation_id", "execution_id"]}, "created_at": 1754287421.889312, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.k8s_grouped_labels_per_date", "raw_code": "{{\n    config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n        \n        unique_key=[\"k8s_environment\", \"start_date\", \"service\", \"module\", \"submodule\", \"operation\", \"tenant\", \"environment\", \"correlation_id\", \"execution_id\"],\n    )\n}}\n\nselect\n    k8s_environment,\n    start_date,\n    \n    sum(SUM_TOTAL_COST) as total_cost,\n\n    -- official labels\n    coalesce(label_service, 'NA') as service,\n    coalesce(label_module, 'NA') as module,\n    coalesce(label_submodule, 'NA') as submodule,\n    coalesce(label_operation, 'NA') as operation,\n    coalesce(label_tenant, 'NA') as tenant,\n    coalesce(label_environment, 'NA') as environment,\n    coalesce(label_correlation_id, 'NA') as correlation_id,\n    coalesce(label_execution_id, 'NA') as execution_id,\n\n    -- others\n    count(pod_id) as no_pod_ids,\n    count(distinct image) as no_unique_images,\n    sum(pod_duration_seconds) as total_pods_duration_seconds,\n    count_if(termination_reason = 'Completed') as no_completed_pods,\n    count_if(termination_reason = 'Error') as no_error_pods,\n    count_if(termination_reason = 'OOMKilled') as no_killed_pods,\n    \nfrom {{ ref('stg_k8s_costs') }}\ngroup by k8s_environment, start_date, service, module, submodule, operation, tenant, environment, correlation_id, execution_id", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_silver/k8s_grouped_labels_per_date.sql", "compiled": true, "compiled_code": "\n\nselect\n    k8s_environment,\n    start_date,\n    \n    sum(SUM_TOTAL_COST) as total_cost,\n\n    -- official labels\n    coalesce(label_service, 'NA') as service,\n    coalesce(label_module, 'NA') as module,\n    coalesce(label_submodule, 'NA') as submodule,\n    coalesce(label_operation, 'NA') as operation,\n    coalesce(label_tenant, 'NA') as tenant,\n    coalesce(label_environment, 'NA') as environment,\n    coalesce(label_correlation_id, 'NA') as correlation_id,\n    coalesce(label_execution_id, 'NA') as execution_id,\n\n    -- others\n    count(pod_id) as no_pod_ids,\n    count(distinct image) as no_unique_images,\n    sum(pod_duration_seconds) as total_pods_duration_seconds,\n    count_if(termination_reason = 'Completed') as no_completed_pods,\n    count_if(termination_reason = 'Error') as no_error_pods,\n    count_if(termination_reason = 'OOMKilled') as no_killed_pods,\n    \nfrom NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.stg_k8s_costs\ngroup by k8s_environment, start_date, service, module, submodule, operation, tenant, environment, correlation_id, execution_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_snowflake_costs": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_silver", "name": "stg_snowflake_costs", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_silver/stg_snowflake_costs.sql", "original_file_path": "models/costs/costs_silver/stg_snowflake_costs.sql", "unique_id": "model.nextail.stg_snowflake_costs", "fqn": ["nextail", "costs", "costs_silver", "stg_snowflake_costs"], "alias": "stg_snowflake_costs", "checksum": {"name": "sha256", "checksum": "9686c7f0d93d8d3964e3e150d3ea55849d52394b42d4f11556c54ad49cecf5f0"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["query_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "ToDo", "columns": {"query_id": {"name": "query_id", "description": "Query ID from Snowflake", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "warehouse_name": {"name": "warehouse_name", "description": "Warehouse Name used to compute the query", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "user_name": {"name": "user_name", "description": "User Name who executed the query", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_date": {"name": "start_date", "description": "Start Date of the query", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_time": {"name": "start_time", "description": "Start timestamp of the query", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "end_time": {"name": "end_time", "description": "End timestamp of the query", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "query_duration_ms": {"name": "query_duration_ms", "description": "Duration of the query", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "credits_attributed_compute": {"name": "credits_attributed_compute", "description": "Credits attributed to compute", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "credits_used_query_acceleration": {"name": "credits_used_query_acceleration", "description": "Credits used for query acceleration", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "build_path": "target/run/nextail/models/costs/costs_silver/stg_snowflake_costs.sql", "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["query_id"]}, "created_at": 1754287421.9838872, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.stg_snowflake_costs", "raw_code": "{{ config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=['query_id'],\n\n    )\n}}\n\nwith\n    base as (\n        select\n            query_id,\n            try_parse_json(query_tag) as parsed_query_tag,\n\n            -- Replace hyphens with underscores and lowercase the text.\n            -- If the label is string 'null', we want to return sql null.\n            nullif(replace(replace(lower(parsed_query_tag:service::TEXT), ' ', '_'), '-', '_'), 'null') as service,\n            nullif(replace(replace(lower(parsed_query_tag:module::TEXT), ' ', '_'), '-', '_'), 'null') as module,\n            nullif(replace(replace(lower(parsed_query_tag:submodule::TEXT), ' ', '_'), '-', '_'), 'null') as submodule,\n            nullif(replace(replace(lower(parsed_query_tag:operation::TEXT), ' ', '_'), '-', '_'), 'null') as operation,\n            nullif(replace(replace(lower(parsed_query_tag:tenant::TEXT), ' ', '_'), '-', '_'), 'null') as tenant,\n            nullif(\n                case\n                    when parsed_query_tag:environment::TEXT ilike 'prod' then 'production'\n                    else lower(parsed_query_tag:environment::TEXT)\n                    end, 'null')\n                as environment,\n            -- clean the correlation_id and execution_id\n            -- if the label is string 'null', we want to return sql null.\n            -- if the label is string 'none', we want to return sql null.\n            -- any other values are allowed\n            nullif(nullif(lower(parsed_query_tag:correlation_id::TEXT), 'null'), 'none') as correlation_id,\n            nullif(nullif(lower(parsed_query_tag:execution_id::TEXT), 'null'), 'none') as execution_id,\n\n            /** the dbt_specific key is, for now, only used in this dbt project,\n            and it's not analyzed in metabase, but it might be interesting to have it\n            in order to analyze the models in this dbt project in the future.\n\n            For example, the following sql query:\n\n            select\n                parse_json(dbt_specific) as parsed_dbt,\n                parsed_dbt:invocation_id::text as invocation_id,\n                parsed_dbt:model_database::text as model_database,\n                parsed_dbt:model_alias::text as model_alias,\n                parsed_dbt:model_config:materialized::text as model_config_materialized,    \n            from nextail_internals_prod_db.dbt_nx_costs_silver.stg_snowflake_costs\n            where dbt_specific is not null;\n\n            will return a list of dbt invocations and the models involved, as well as\n            the type of dbt execution (build, run, test, etc.) and the database used.\n\n            Just for future reference.\n\n            **/\n            nullif(lower(parse_json(parsed_query_tag:dbt_specific)), 'null') as dbt_specific,\n\n            warehouse_name,\n            user_name,\n            start_time::DATE as start_date,\n            start_time,\n            end_time,\n            datediff('millisecond', start_time, end_time) as query_duration_ms,\n            credits_attributed_compute,\n            credits_used_query_acceleration,\n        from {{ ref('stg_query_attribution_history') }} sf\n    )\n\nselect\n    * exclude parsed_query_tag\nfrom base", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.stg_query_attribution_history"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_silver/stg_snowflake_costs.sql", "compiled": true, "compiled_code": "\n\nwith\n    base as (\n        select\n            query_id,\n            try_parse_json(query_tag) as parsed_query_tag,\n\n            -- Replace hyphens with underscores and lowercase the text.\n            -- If the label is string 'null', we want to return sql null.\n            nullif(replace(replace(lower(parsed_query_tag:service::TEXT), ' ', '_'), '-', '_'), 'null') as service,\n            nullif(replace(replace(lower(parsed_query_tag:module::TEXT), ' ', '_'), '-', '_'), 'null') as module,\n            nullif(replace(replace(lower(parsed_query_tag:submodule::TEXT), ' ', '_'), '-', '_'), 'null') as submodule,\n            nullif(replace(replace(lower(parsed_query_tag:operation::TEXT), ' ', '_'), '-', '_'), 'null') as operation,\n            nullif(replace(replace(lower(parsed_query_tag:tenant::TEXT), ' ', '_'), '-', '_'), 'null') as tenant,\n            nullif(\n                case\n                    when parsed_query_tag:environment::TEXT ilike 'prod' then 'production'\n                    else lower(parsed_query_tag:environment::TEXT)\n                    end, 'null')\n                as environment,\n            -- clean the correlation_id and execution_id\n            -- if the label is string 'null', we want to return sql null.\n            -- if the label is string 'none', we want to return sql null.\n            -- any other values are allowed\n            nullif(nullif(lower(parsed_query_tag:correlation_id::TEXT), 'null'), 'none') as correlation_id,\n            nullif(nullif(lower(parsed_query_tag:execution_id::TEXT), 'null'), 'none') as execution_id,\n\n            /** the dbt_specific key is, for now, only used in this dbt project,\n            and it's not analyzed in metabase, but it might be interesting to have it\n            in order to analyze the models in this dbt project in the future.\n\n            For example, the following sql query:\n\n            select\n                parse_json(dbt_specific) as parsed_dbt,\n                parsed_dbt:invocation_id::text as invocation_id,\n                parsed_dbt:model_database::text as model_database,\n                parsed_dbt:model_alias::text as model_alias,\n                parsed_dbt:model_config:materialized::text as model_config_materialized,    \n            from nextail_internals_prod_db.dbt_nx_costs_silver.stg_snowflake_costs\n            where dbt_specific is not null;\n\n            will return a list of dbt invocations and the models involved, as well as\n            the type of dbt execution (build, run, test, etc.) and the database used.\n\n            Just for future reference.\n\n            **/\n            nullif(lower(parse_json(parsed_query_tag:dbt_specific)), 'null') as dbt_specific,\n\n            warehouse_name,\n            user_name,\n            start_time::DATE as start_date,\n            start_time,\n            end_time,\n            datediff('millisecond', start_time, end_time) as query_duration_ms,\n            credits_attributed_compute,\n            credits_used_query_acceleration,\n        from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_query_attribution_history sf\n    )\n\nselect\n    * exclude parsed_query_tag\nfrom base", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": ["query_id"], "time_spine": null}, "model.nextail.stg_k8s_costs": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_silver", "name": "stg_k8s_costs", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_silver/stg_k8s_costs.sql", "original_file_path": "models/costs/costs_silver/stg_k8s_costs.sql", "unique_id": "model.nextail.stg_k8s_costs", "fqn": ["nextail", "costs", "costs_silver", "stg_k8s_costs"], "alias": "stg_k8s_costs", "checksum": {"name": "sha256", "checksum": "e9f941afc49c49bd09dcbd1278b1b728fad619fbff3d6f9506d1cd8f92dcd699"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "pod_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "Kubernetes costs per pod", "columns": {"pod_id": {"name": "pod_id", "description": "Pod ID", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "k8s_environment": {"name": "k8s_environment", "description": "K8s Environment", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_date": {"name": "start_date", "description": "Start Date of the pod", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_time_utc": {"name": "start_time_utc", "description": "Start timestamp of the pod", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "end_time_utc": {"name": "end_time_utc", "description": "End timestamp of the pod", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "end_date": {"name": "end_date", "description": "End Date of the pod according to the kubecost table", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pod_duration_seconds": {"name": "pod_duration_seconds", "description": "Duration of the pod", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "image": {"name": "image", "description": "Image used for the pod", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sum_total_cost": {"name": "sum_total_cost", "description": "Total cost of the execution", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_silver/_stg_k8s_costs_tests.yml", "build_path": "target/run/nextail/models/costs/costs_silver/stg_k8s_costs.sql", "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": "pod_id"}, "created_at": 1754287421.9960709, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.stg_k8s_costs", "raw_code": "{{ config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key = 'pod_id'\n    )\n}}\n\nselect\n    *\nfrom {{ ref('stg_k8s_completed_jobs_all') }} cjs\nleft join {{ ref('stg_k8s_kubecost_all') }} ka\n    using (pod_id, k8s_environment, start_date)", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}, {"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.stg_k8s_completed_jobs_all", "model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_silver/stg_k8s_costs.sql", "compiled": true, "compiled_code": "\n\nselect\n    *\nfrom NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_all cjs\nleft join NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_all ka\n    using (pod_id, k8s_environment, start_date)", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.snowflake_grouped_labels_per_date": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_silver", "name": "snowflake_grouped_labels_per_date", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_silver/snowflake_grouped_labels_per_date.sql", "original_file_path": "models/costs/costs_silver/snowflake_grouped_labels_per_date.sql", "unique_id": "model.nextail.snowflake_grouped_labels_per_date", "fqn": ["nextail", "costs", "costs_silver", "snowflake_grouped_labels_per_date"], "alias": "snowflake_grouped_labels_per_date", "checksum": {"name": "sha256", "checksum": "0fa65d437443df6163d04498dc2b87a22d8fc47e93e4ce220f80e677c33c0b39"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["start_date", "service", "module", "submodule", "operation", "tenant", "environment", "correlation_id", "execution_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "ToDo", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_silver/_snowflake_grouped_labels_per_date_tests.yml", "build_path": "target/run/nextail/models/costs/costs_silver/snowflake_grouped_labels_per_date.sql", "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["start_date", "service", "module", "submodule", "operation", "tenant", "environment", "correlation_id", "execution_id"]}, "created_at": 1754287421.889792, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.snowflake_grouped_labels_per_date", "raw_code": "{{\n    config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=['start_date', 'service', 'module', 'submodule', 'operation', 'tenant', 'environment', 'correlation_id', 'execution_id'],\n    )\n}}\n\n\nselect\n    start_date,\n    min(start_time) as min_start_time,\n    coalesce(service, 'NA') as service,\n    coalesce(module, 'NA') as module,\n    coalesce(submodule, 'NA') as submodule,\n    coalesce(operation, 'NA') as operation,\n    coalesce(tenant, 'NA') as tenant,\n    coalesce(environment, 'NA') as environment,\n    coalesce(correlation_id, 'NA') as correlation_id,\n    coalesce(execution_id, 'NA') as execution_id,\n    \n    count(distinct query_id) as no_queries,\n    sum(query_duration_ms) as sum_query_duration_ms,\n    sum(credits_attributed_compute) as sum_credits_attributed_compute,\n    sum(credits_used_query_acceleration) as sum_credits_used_query_acceleration\n\nfrom {{ ref('stg_snowflake_costs') }}\ngroup by start_date, service, module, submodule, operation, tenant, environment, correlation_id, execution_id", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_silver/snowflake_grouped_labels_per_date.sql", "compiled": true, "compiled_code": "\n\n\nselect\n    start_date,\n    min(start_time) as min_start_time,\n    coalesce(service, 'NA') as service,\n    coalesce(module, 'NA') as module,\n    coalesce(submodule, 'NA') as submodule,\n    coalesce(operation, 'NA') as operation,\n    coalesce(tenant, 'NA') as tenant,\n    coalesce(environment, 'NA') as environment,\n    coalesce(correlation_id, 'NA') as correlation_id,\n    coalesce(execution_id, 'NA') as execution_id,\n    \n    count(distinct query_id) as no_queries,\n    sum(query_duration_ms) as sum_query_duration_ms,\n    sum(credits_attributed_compute) as sum_credits_attributed_compute,\n    sum(credits_used_query_acceleration) as sum_credits_used_query_acceleration\n\nfrom NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.stg_snowflake_costs\ngroup by start_date, service, module, submodule, operation, tenant, environment, correlation_id, execution_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_k8s_completed_jobs_all": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_k8s_completed_jobs_all", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/k8s/stg_k8s_completed_jobs_all.sql", "original_file_path": "models/costs/costs_staging/k8s/stg_k8s_completed_jobs_all.sql", "unique_id": "model.nextail.stg_k8s_completed_jobs_all", "fqn": ["nextail", "costs", "costs_staging", "k8s", "stg_k8s_completed_jobs_all"], "alias": "stg_k8s_completed_jobs_all", "checksum": {"name": "sha256", "checksum": "5a9ca1a83e3519f64cd91eaab733405dd4aec46a4bf1e2feec2a8bd02c799d0f"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["pod_id", "date", "k8s_environment"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "Staging table for completed Kubernetes jobs in the sandbox environment.", "columns": {"pod_id": {"name": "pod_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "k8s_environment": {"name": "k8s_environment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_date": {"name": "start_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_time_utc": {"name": "start_time_utc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "end_time_utc": {"name": "end_time_utc", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pod_duration_seconds": {"name": "pod_duration_seconds", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "image": {"name": "image", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "max_memory_usage_bytes": {"name": "max_memory_usage_bytes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "max_cpu_usage": {"name": "max_cpu_usage", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "configured_memory_limit_bytes": {"name": "configured_memory_limit_bytes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "configured_cpu_limit": {"name": "configured_cpu_limit", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "configured_memory_request_bytes": {"name": "configured_memory_request_bytes", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "configured_cpu_request": {"name": "configured_cpu_request", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "termination_reason": {"name": "termination_reason", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "duration_seconds": {"name": "duration_seconds", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_service": {"name": "label_service", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_module": {"name": "label_module", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_submodule": {"name": "label_submodule", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_operation": {"name": "label_operation", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_tenant": {"name": "label_tenant", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_environment": {"name": "label_environment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_correlation_id": {"name": "label_correlation_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_execution_id": {"name": "label_execution_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_controller_uid": {"name": "label_controller_uid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_batch_kubernetes_io_job_name": {"name": "label_batch_kubernetes_io_job_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_job_name": {"name": "label_job_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_batch_kubernetes_io_controller_uid": {"name": "label_batch_kubernetes_io_controller_uid", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_client": {"name": "label_client", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_scheduled_by_phoenix": {"name": "label_scheduled_by_phoenix", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_phoenix_queue": {"name": "label_phoenix_queue", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_phoenix_id": {"name": "label_phoenix_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app_kubernetes_io_instance": {"name": "label_app_kubernetes_io_instance", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app_kubernetes_io_name": {"name": "label_app_kubernetes_io_name", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app_kubernetes_io_version": {"name": "label_app_kubernetes_io_version", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_dagster_job": {"name": "label_dagster_job", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app_kubernetes_io_component": {"name": "label_app_kubernetes_io_component", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app_kubernetes_io_part_of": {"name": "label_app_kubernetes_io_part_of", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_dagster_run_id": {"name": "label_dagster_run_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_dagster_code_location": {"name": "label_dagster_code_location", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_cron": {"name": "label_cron", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app": {"name": "label_app", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_dagster_op": {"name": "label_dagster_op", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_kind": {"name": "label_kind", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_release": {"name": "label_release", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_app_kubernetes_io_managed_by": {"name": "label_app_kubernetes_io_managed_by", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "label_helm_sh_chart": {"name": "label_helm_sh_chart", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "build_path": "target/run/nextail/models/costs/costs_staging/k8s/stg_k8s_completed_jobs_all.sql", "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["pod_id", "date", "k8s_environment"]}, "created_at": 1754287422.074406, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_all", "raw_code": "{{ config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=[\"pod_id\", \"date\", \"k8s_environment\"],\n    )\n}}\n\nwith\n    completed_jobs_prod as (\n        select * from {{ ref('stg_k8s_completed_jobs_prod') }}\n    ),\n    completed_jobs_sandbox as (\n        select * from {{ ref('stg_k8s_completed_jobs_sandbox') }}\n    )\n\nselect * from completed_jobs_prod\nunion all\nselect * from completed_jobs_sandbox", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_prod", "package": null, "version": null}, {"name": "stg_k8s_completed_jobs_sandbox", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.stg_k8s_completed_jobs_prod", "model.nextail.stg_k8s_completed_jobs_sandbox"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/k8s/stg_k8s_completed_jobs_all.sql", "compiled": true, "compiled_code": "\n\nwith\n    completed_jobs_prod as (\n        select * from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_prod\n    ),\n    completed_jobs_sandbox as (\n        select * from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_sandbox\n    )\n\nselect * from completed_jobs_prod\nunion all\nselect * from completed_jobs_sandbox", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_k8s_kubecost_all": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_k8s_kubecost_all", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/k8s/stg_k8s_kubecost_all.sql", "original_file_path": "models/costs/costs_staging/k8s/stg_k8s_kubecost_all.sql", "unique_id": "model.nextail.stg_k8s_kubecost_all", "fqn": ["nextail", "costs", "costs_staging", "k8s", "stg_k8s_kubecost_all"], "alias": "stg_k8s_kubecost_all", "checksum": {"name": "sha256", "checksum": "1554db3594990583975111e01dcff348a9f08b34fa3db4f0775561cc9d546d69"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["pod_id", "date", "k8s_environment"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "Staging table for Kubernetes cost data in the sandbox environment.", "columns": {"k8s_environment": {"name": "k8s_environment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "pod_id": {"name": "pod_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_cpu": {"name": "avg_cpu", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_gpu": {"name": "avg_gpu", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_ram": {"name": "avg_ram", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_pv": {"name": "avg_pv", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_network": {"name": "avg_network", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_loadbalancer": {"name": "avg_loadbalancer", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_external": {"name": "avg_external", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_shared": {"name": "avg_shared", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "avg_efficiency": {"name": "avg_efficiency", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "sum_total_cost": {"name": "sum_total_cost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_date": {"name": "start_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "end_date": {"name": "end_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "build_path": "target/run/nextail/models/costs/costs_staging/k8s/stg_k8s_kubecost_all.sql", "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["pod_id", "date", "k8s_environment"]}, "created_at": 1754287422.056202, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_all", "raw_code": "{{ config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=[\"pod_id\", \"date\", \"k8s_environment\"],\n    )\n}}\n\nwith\n    completed_jobs_prod as (\n        select * from {{ ref('stg_k8s_kubecost_prod') }}\n    ),\n    completed_jobs_sandbox as (\n        select * from {{ ref('stg_k8s_kubecost_sandbox') }}\n    )\n\nselect * from completed_jobs_prod\nunion all\nselect * from completed_jobs_sandbox", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_prod", "package": null, "version": null}, {"name": "stg_k8s_kubecost_sandbox", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.stg_k8s_kubecost_prod", "model.nextail.stg_k8s_kubecost_sandbox"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/k8s/stg_k8s_kubecost_all.sql", "compiled": true, "compiled_code": "\n\nwith\n    completed_jobs_prod as (\n        select * from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_prod\n    ),\n    completed_jobs_sandbox as (\n        select * from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_sandbox\n    )\n\nselect * from completed_jobs_prod\nunion all\nselect * from completed_jobs_sandbox", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_k8s_kubecost_sandbox": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_k8s_kubecost_sandbox", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/k8s/k8s_sandbox/stg_k8s_kubecost_sandbox.sql", "original_file_path": "models/costs/costs_staging/k8s/k8s_sandbox/stg_k8s_kubecost_sandbox.sql", "unique_id": "model.nextail.stg_k8s_kubecost_sandbox", "fqn": ["nextail", "costs", "costs_staging", "k8s", "k8s_sandbox", "stg_k8s_kubecost_sandbox"], "alias": "stg_k8s_kubecost_sandbox", "checksum": {"name": "sha256", "checksum": "7b37e19d1b146a9db8062d8d4d8f315f790ef66cee3b74284cd01f0f0f64415d"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [{"sql": "alter table {{ this }} set change_tracking = true", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["pod_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": "target/run/nextail/models/costs/costs_staging/k8s/k8s_sandbox/stg_k8s_kubecost_sandbox.sql", "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "unique_key": ["pod_id"], "post-hook": "alter table {{ this }} set change_tracking = true"}, "created_at": 1754287421.61266, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_sandbox", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key=['pod_id'],\n\n        post_hook=\"alter table {{ this }} set change_tracking = true\",\n    )\n}}\n\nselect\n    'SANDBOX' as k8s_environment,\n    name as pod_id,\n    avg(cpu) as avg_cpu,\n    avg(gpu) as avg_gpu,\n    avg(ram) as avg_ram,\n    avg(pv) as avg_pv,\n    avg(network) as avg_network,\n    avg(loadbalancer) as avg_loadbalancer,\n    avg(external) as avg_external,\n    avg(shared) as avg_shared,\n    avg(efficiency) as avg_efficiency,\n    sum(total) as sum_total_cost,\n    min(date) as start_date,\n    max(date) as end_date,\nfrom {{ source('kubecost', 'kubecost_cumulative_cost_by_pod_sandbox')}}\n\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n{% if is_incremental() %}\n    where date > (select max(start_date) from {{ this }})\n{% endif %}\n-- uncomment this to limit the full refresh to a certain date\n-- {% if should_full_refresh() %}\n--     where date >= '{{ var(\"full_refresh_start_date\") }}'\n-- {% endif %}\n\ngroup by k8s_environment, pod_id", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["kubecost", "kubecost_cumulative_cost_by_pod_sandbox"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": ["source.nextail.kubecost.kubecost_cumulative_cost_by_pod_sandbox"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/k8s/k8s_sandbox/stg_k8s_kubecost_sandbox.sql", "compiled": true, "compiled_code": "\n\nselect\n    'SANDBOX' as k8s_environment,\n    name as pod_id,\n    avg(cpu) as avg_cpu,\n    avg(gpu) as avg_gpu,\n    avg(ram) as avg_ram,\n    avg(pv) as avg_pv,\n    avg(network) as avg_network,\n    avg(loadbalancer) as avg_loadbalancer,\n    avg(external) as avg_external,\n    avg(shared) as avg_shared,\n    avg(efficiency) as avg_efficiency,\n    sum(total) as sum_total_cost,\n    min(date) as start_date,\n    max(date) as end_date,\nfrom alltenants_costmonitor_allenvs_db.public.kubecost_cumulative_cost_by_pod_sandbox\n\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n\n    where date > (select max(start_date) from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_sandbox)\n\n-- uncomment this to limit the full refresh to a certain date\n-- \n\ngroup by k8s_environment, pod_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_k8s_completed_jobs_sandbox": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_k8s_completed_jobs_sandbox", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/k8s/k8s_sandbox/stg_k8s_completed_jobs_sandbox.sql", "original_file_path": "models/costs/costs_staging/k8s/k8s_sandbox/stg_k8s_completed_jobs_sandbox.sql", "unique_id": "model.nextail.stg_k8s_completed_jobs_sandbox", "fqn": ["nextail", "costs", "costs_staging", "k8s", "k8s_sandbox", "stg_k8s_completed_jobs_sandbox"], "alias": "stg_k8s_completed_jobs_sandbox", "checksum": {"name": "sha256", "checksum": "380a68cf7182a1badddb51378c99b85956b8408d3e012b2eefef59d859da21d9"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [{"sql": "alter table {{ this }} set change_tracking = true", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["pod_id", "start_date"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": "target/run/nextail/models/costs/costs_staging/k8s/k8s_sandbox/stg_k8s_completed_jobs_sandbox.sql", "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "unique_key": ["pod_id", "start_date"], "post-hook": "alter table {{ this }} set change_tracking = true"}, "created_at": 1754287421.617557, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_sandbox", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key=[\"pod_id\", \"start_date\"],\n\n        post_hook=\"alter table {{ this }} set change_tracking = true\",\n    )\n}}\n\nselect\n    pod as pod_id,\n    \n    'SANDBOX' as k8s_environment,\n    \n    start_time_utc::DATE as start_date,\n    start_time_utc,\n    end_time_utc,\n    datediff('seconds', start_time_utc, end_time_utc) as pod_duration_seconds,\n    \n    image,\n    max_memory_usage_bytes,\n    max_cpu_usage,\n    configured_memory_limit_bytes,\n    configured_cpu_limit,\n    configured_memory_request_bytes,\n    configured_cpu_request,\n    termination_reason,\n    duration_seconds,\n\n    -- official labels.\n    -- Replace hyphens with underscores and lowercase the text.\n    -- If the label is string 'null', we want to return sql null.\n    nullif(replace(lower(pod_labels_json:service::TEXT), '-', '_'), 'null') as label_service,\n    nullif(replace(lower(pod_labels_json:module::TEXT), '-', '_'), 'null') as label_module,\n    nullif(replace(lower(pod_labels_json:submodule::TEXT), '-', '_'), 'null') as label_submodule,\n    nullif(replace(lower(pod_labels_json:operation::TEXT), '-', '_'), 'null') as label_operation,\n    nullif(replace(lower(pod_labels_json:tenant::TEXT), '-', '_'), 'null') as label_tenant,\n    nullif(replace(lower(pod_labels_json:environment::TEXT), '-', '_'), 'null') as label_environment,\n    nullif(lower(pod_labels_json:correlation_id::TEXT), 'null') as label_correlation_id,\n    nullif(lower(pod_labels_json:execution_id::TEXT), 'null') as label_execution_id,\n    \n    -- deprecated labels\n    nullif(pod_labels_json:controller_uid::TEXT, 'null') as label_controller_uid,\n    nullif(pod_labels_json:batch_kubernetes_io_job_name::TEXT, 'null') as label_batch_kubernetes_io_job_name,\n    nullif(pod_labels_json:job_name::TEXT, 'null') as label_job_name,\n    nullif(pod_labels_json:batch_kubernetes_io_controller_uid::TEXT, 'null') as label_batch_kubernetes_io_controller_uid,\n    nullif(pod_labels_json:client::TEXT, 'null') as label_client,\n    nullif(pod_labels_json:scheduled_by_phoenix::TEXT, 'null') as label_scheduled_by_phoenix,\n    nullif(pod_labels_json:phoenix_queue::TEXT, 'null') as label_phoenix_queue,\n    nullif(pod_labels_json:phoenix_id::TEXT, 'null') as label_phoenix_id,\n    nullif(pod_labels_json:app_kubernetes_io_instance::TEXT, 'null') as label_app_kubernetes_io_instance,\n    nullif(pod_labels_json:app_kubernetes_io_name::TEXT, 'null') as label_app_kubernetes_io_name,\n    nullif(pod_labels_json:app_kubernetes_io_version::TEXT, 'null') as label_app_kubernetes_io_version,\n    nullif(pod_labels_json:dagster_job::TEXT, 'null') as label_dagster_job,\n    nullif(pod_labels_json:app_kubernetes_io_component::TEXT, 'null') as label_app_kubernetes_io_component,\n    nullif(pod_labels_json:app_kubernetes_io_part_of::TEXT, 'null') as label_app_kubernetes_io_part_of,\n    nullif(pod_labels_json:dagster_run_id::TEXT, 'null') as label_dagster_run_id,\n    nullif(pod_labels_json:dagster_code_location::TEXT, 'null') as label_dagster_code_location,\n    nullif(pod_labels_json:cron::TEXT, 'null') as label_cron,\n    nullif(pod_labels_json:\"app\"::TEXT, 'null') as label_app,\n    nullif(pod_labels_json:dagster_op::TEXT, 'null') as label_dagster_op,\n    nullif(pod_labels_json:kind::TEXT, 'null') as label_kind,\n    nullif(pod_labels_json:release::TEXT, 'null') as label_release,\n    nullif(pod_labels_json:app_kubernetes_io_managed_by::TEXT, 'null') as label_app_kubernetes_io_managed_by,\n    nullif(pod_labels_json:helm_sh_chart::TEXT, 'null') as label_helm_sh_chart,\nfrom {{ source('completed_jobs', 'completed_jobs_sandbox')}}\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n{% if is_incremental() %}\n    where start_time_utc > (select max(start_time_utc) from {{ this }})\n{% endif %}\n-- uncomment this to limit the full refresh to a certain date\n-- {% if should_full_refresh() %}\n--     where start_time_utc >= '{{ var(\"full_refresh_start_date\") }}'\n-- {% endif %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["completed_jobs", "completed_jobs_sandbox"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": ["source.nextail.completed_jobs.completed_jobs_sandbox"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/k8s/k8s_sandbox/stg_k8s_completed_jobs_sandbox.sql", "compiled": true, "compiled_code": "\n\nselect\n    pod as pod_id,\n    \n    'SANDBOX' as k8s_environment,\n    \n    start_time_utc::DATE as start_date,\n    start_time_utc,\n    end_time_utc,\n    datediff('seconds', start_time_utc, end_time_utc) as pod_duration_seconds,\n    \n    image,\n    max_memory_usage_bytes,\n    max_cpu_usage,\n    configured_memory_limit_bytes,\n    configured_cpu_limit,\n    configured_memory_request_bytes,\n    configured_cpu_request,\n    termination_reason,\n    duration_seconds,\n\n    -- official labels.\n    -- Replace hyphens with underscores and lowercase the text.\n    -- If the label is string 'null', we want to return sql null.\n    nullif(replace(lower(pod_labels_json:service::TEXT), '-', '_'), 'null') as label_service,\n    nullif(replace(lower(pod_labels_json:module::TEXT), '-', '_'), 'null') as label_module,\n    nullif(replace(lower(pod_labels_json:submodule::TEXT), '-', '_'), 'null') as label_submodule,\n    nullif(replace(lower(pod_labels_json:operation::TEXT), '-', '_'), 'null') as label_operation,\n    nullif(replace(lower(pod_labels_json:tenant::TEXT), '-', '_'), 'null') as label_tenant,\n    nullif(replace(lower(pod_labels_json:environment::TEXT), '-', '_'), 'null') as label_environment,\n    nullif(lower(pod_labels_json:correlation_id::TEXT), 'null') as label_correlation_id,\n    nullif(lower(pod_labels_json:execution_id::TEXT), 'null') as label_execution_id,\n    \n    -- deprecated labels\n    nullif(pod_labels_json:controller_uid::TEXT, 'null') as label_controller_uid,\n    nullif(pod_labels_json:batch_kubernetes_io_job_name::TEXT, 'null') as label_batch_kubernetes_io_job_name,\n    nullif(pod_labels_json:job_name::TEXT, 'null') as label_job_name,\n    nullif(pod_labels_json:batch_kubernetes_io_controller_uid::TEXT, 'null') as label_batch_kubernetes_io_controller_uid,\n    nullif(pod_labels_json:client::TEXT, 'null') as label_client,\n    nullif(pod_labels_json:scheduled_by_phoenix::TEXT, 'null') as label_scheduled_by_phoenix,\n    nullif(pod_labels_json:phoenix_queue::TEXT, 'null') as label_phoenix_queue,\n    nullif(pod_labels_json:phoenix_id::TEXT, 'null') as label_phoenix_id,\n    nullif(pod_labels_json:app_kubernetes_io_instance::TEXT, 'null') as label_app_kubernetes_io_instance,\n    nullif(pod_labels_json:app_kubernetes_io_name::TEXT, 'null') as label_app_kubernetes_io_name,\n    nullif(pod_labels_json:app_kubernetes_io_version::TEXT, 'null') as label_app_kubernetes_io_version,\n    nullif(pod_labels_json:dagster_job::TEXT, 'null') as label_dagster_job,\n    nullif(pod_labels_json:app_kubernetes_io_component::TEXT, 'null') as label_app_kubernetes_io_component,\n    nullif(pod_labels_json:app_kubernetes_io_part_of::TEXT, 'null') as label_app_kubernetes_io_part_of,\n    nullif(pod_labels_json:dagster_run_id::TEXT, 'null') as label_dagster_run_id,\n    nullif(pod_labels_json:dagster_code_location::TEXT, 'null') as label_dagster_code_location,\n    nullif(pod_labels_json:cron::TEXT, 'null') as label_cron,\n    nullif(pod_labels_json:\"app\"::TEXT, 'null') as label_app,\n    nullif(pod_labels_json:dagster_op::TEXT, 'null') as label_dagster_op,\n    nullif(pod_labels_json:kind::TEXT, 'null') as label_kind,\n    nullif(pod_labels_json:release::TEXT, 'null') as label_release,\n    nullif(pod_labels_json:app_kubernetes_io_managed_by::TEXT, 'null') as label_app_kubernetes_io_managed_by,\n    nullif(pod_labels_json:helm_sh_chart::TEXT, 'null') as label_helm_sh_chart,\nfrom alltenants_costmonitor_allenvs_db.k8s_private.completed_jobs_sandbox\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n\n    where start_time_utc > (select max(start_time_utc) from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_sandbox)\n\n-- uncomment this to limit the full refresh to a certain date\n-- ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_k8s_completed_jobs_prod": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_k8s_completed_jobs_prod", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/k8s/k8s_prod/stg_k8s_completed_jobs_prod.sql", "original_file_path": "models/costs/costs_staging/k8s/k8s_prod/stg_k8s_completed_jobs_prod.sql", "unique_id": "model.nextail.stg_k8s_completed_jobs_prod", "fqn": ["nextail", "costs", "costs_staging", "k8s", "k8s_prod", "stg_k8s_completed_jobs_prod"], "alias": "stg_k8s_completed_jobs_prod", "checksum": {"name": "sha256", "checksum": "c261e040a55e7100f42a31eb26d21ed84be6aa0538dcaf1ef6f5d18ba0b2c47f"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [{"sql": "alter table {{ this }} set change_tracking = true", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": "target/run/nextail/models/costs/costs_staging/k8s/k8s_prod/stg_k8s_completed_jobs_prod.sql", "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "post-hook": "alter table {{ this }} set change_tracking = true"}, "created_at": 1754287421.6222131, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_prod", "raw_code": "{{\n    config(\n        materialized='incremental',\n        \n\n        post_hook=\"alter table {{ this }} set change_tracking = true\",\n    )\n}}\n\n-- post-hook for enabling change_tracking, which is a requirement for the source dynamic tables\n\nselect\n    pod as pod_id,\n    \n    'PROD' as k8s_environment,\n    \n    start_time_utc::DATE as start_date,\n    start_time_utc,\n    end_time_utc,\n    datediff('seconds', start_time_utc, end_time_utc) as pod_duration_seconds,\n    \n    image,\n    max_memory_usage_bytes,\n    max_cpu_usage,\n    configured_memory_limit_bytes,\n    configured_cpu_limit,\n    configured_memory_request_bytes,\n    configured_cpu_request,\n    termination_reason,\n    duration_seconds,\n\n    -- official labels\n    -- Replace hyphens with underscores and lowercase the text.\n    -- If the label is string 'null', we want to return sql null.\n    nullif(replace(lower(pod_labels_json:service::TEXT), '-', '_'), 'null') as label_service,\n    nullif(replace(lower(pod_labels_json:module::TEXT), '-', '_'), 'null') as label_module,\n    nullif(replace(lower(pod_labels_json:submodule::TEXT), '-', '_'), 'null') as label_submodule,\n    nullif(replace(lower(pod_labels_json:operation::TEXT), '-', '_'), 'null') as label_operation,\n    nullif(replace(lower(pod_labels_json:tenant::TEXT), '-', '_'), 'null') as label_tenant,\n    nullif(replace(lower(pod_labels_json:environment::TEXT), '-', '_'), 'null') as label_environment,\n    nullif(lower(pod_labels_json:correlation_id::TEXT), 'null') as label_correlation_id,\n    nullif(lower(pod_labels_json:execution_id::TEXT), 'null') as label_execution_id,\n    \n    -- deprecated labels\n    nullif(pod_labels_json:controller_uid::TEXT, 'null') as label_controller_uid,\n    nullif(pod_labels_json:batch_kubernetes_io_job_name::TEXT, 'null') as label_batch_kubernetes_io_job_name,\n    nullif(pod_labels_json:job_name::TEXT, 'null') as label_job_name,\n    nullif(pod_labels_json:batch_kubernetes_io_controller_uid::TEXT, 'null') as label_batch_kubernetes_io_controller_uid,\n    nullif(pod_labels_json:client::TEXT, 'null') as label_client,\n    nullif(pod_labels_json:scheduled_by_phoenix::TEXT, 'null') as label_scheduled_by_phoenix,\n    nullif(pod_labels_json:phoenix_queue::TEXT, 'null') as label_phoenix_queue,\n    nullif(pod_labels_json:phoenix_id::TEXT, 'null') as label_phoenix_id,\n    nullif(pod_labels_json:app_kubernetes_io_instance::TEXT, 'null') as label_app_kubernetes_io_instance,\n    nullif(pod_labels_json:app_kubernetes_io_name::TEXT, 'null') as label_app_kubernetes_io_name,\n    nullif(pod_labels_json:app_kubernetes_io_version::TEXT, 'null') as label_app_kubernetes_io_version,\n    nullif(pod_labels_json:dagster_job::TEXT, 'null') as label_dagster_job,\n    nullif(pod_labels_json:app_kubernetes_io_component::TEXT, 'null') as label_app_kubernetes_io_component,\n    nullif(pod_labels_json:app_kubernetes_io_part_of::TEXT, 'null') as label_app_kubernetes_io_part_of,\n    nullif(pod_labels_json:dagster_run_id::TEXT, 'null') as label_dagster_run_id,\n    nullif(pod_labels_json:dagster_code_location::TEXT, 'null') as label_dagster_code_location,\n    nullif(pod_labels_json:cron::TEXT, 'null') as label_cron,\n    nullif(pod_labels_json:\"app\"::TEXT, 'null') as label_app,\n    nullif(pod_labels_json:dagster_op::TEXT, 'null') as label_dagster_op,\n    nullif(pod_labels_json:kind::TEXT, 'null') as label_kind,\n    nullif(pod_labels_json:release::TEXT, 'null') as label_release,\n    nullif(pod_labels_json:app_kubernetes_io_managed_by::TEXT, 'null') as label_app_kubernetes_io_managed_by,\n    nullif(pod_labels_json:helm_sh_chart::TEXT, 'null') as label_helm_sh_chart,\nfrom {{ source('completed_jobs', 'completed_jobs_prod')}}\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n{% if is_incremental() %}\n    where start_time_utc > (select max(start_time_utc) from {{ this }})\n{% endif %}\n-- uncomment this to limit the full refresh to a certain date\n-- {% if should_full_refresh() %}\n--     where start_time_utc >= '{{ var(\"full_refresh_start_date\") }}'\n-- {% endif %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["completed_jobs", "completed_jobs_prod"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": ["source.nextail.completed_jobs.completed_jobs_prod"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/k8s/k8s_prod/stg_k8s_completed_jobs_prod.sql", "compiled": true, "compiled_code": "\n\n-- post-hook for enabling change_tracking, which is a requirement for the source dynamic tables\n\nselect\n    pod as pod_id,\n    \n    'PROD' as k8s_environment,\n    \n    start_time_utc::DATE as start_date,\n    start_time_utc,\n    end_time_utc,\n    datediff('seconds', start_time_utc, end_time_utc) as pod_duration_seconds,\n    \n    image,\n    max_memory_usage_bytes,\n    max_cpu_usage,\n    configured_memory_limit_bytes,\n    configured_cpu_limit,\n    configured_memory_request_bytes,\n    configured_cpu_request,\n    termination_reason,\n    duration_seconds,\n\n    -- official labels\n    -- Replace hyphens with underscores and lowercase the text.\n    -- If the label is string 'null', we want to return sql null.\n    nullif(replace(lower(pod_labels_json:service::TEXT), '-', '_'), 'null') as label_service,\n    nullif(replace(lower(pod_labels_json:module::TEXT), '-', '_'), 'null') as label_module,\n    nullif(replace(lower(pod_labels_json:submodule::TEXT), '-', '_'), 'null') as label_submodule,\n    nullif(replace(lower(pod_labels_json:operation::TEXT), '-', '_'), 'null') as label_operation,\n    nullif(replace(lower(pod_labels_json:tenant::TEXT), '-', '_'), 'null') as label_tenant,\n    nullif(replace(lower(pod_labels_json:environment::TEXT), '-', '_'), 'null') as label_environment,\n    nullif(lower(pod_labels_json:correlation_id::TEXT), 'null') as label_correlation_id,\n    nullif(lower(pod_labels_json:execution_id::TEXT), 'null') as label_execution_id,\n    \n    -- deprecated labels\n    nullif(pod_labels_json:controller_uid::TEXT, 'null') as label_controller_uid,\n    nullif(pod_labels_json:batch_kubernetes_io_job_name::TEXT, 'null') as label_batch_kubernetes_io_job_name,\n    nullif(pod_labels_json:job_name::TEXT, 'null') as label_job_name,\n    nullif(pod_labels_json:batch_kubernetes_io_controller_uid::TEXT, 'null') as label_batch_kubernetes_io_controller_uid,\n    nullif(pod_labels_json:client::TEXT, 'null') as label_client,\n    nullif(pod_labels_json:scheduled_by_phoenix::TEXT, 'null') as label_scheduled_by_phoenix,\n    nullif(pod_labels_json:phoenix_queue::TEXT, 'null') as label_phoenix_queue,\n    nullif(pod_labels_json:phoenix_id::TEXT, 'null') as label_phoenix_id,\n    nullif(pod_labels_json:app_kubernetes_io_instance::TEXT, 'null') as label_app_kubernetes_io_instance,\n    nullif(pod_labels_json:app_kubernetes_io_name::TEXT, 'null') as label_app_kubernetes_io_name,\n    nullif(pod_labels_json:app_kubernetes_io_version::TEXT, 'null') as label_app_kubernetes_io_version,\n    nullif(pod_labels_json:dagster_job::TEXT, 'null') as label_dagster_job,\n    nullif(pod_labels_json:app_kubernetes_io_component::TEXT, 'null') as label_app_kubernetes_io_component,\n    nullif(pod_labels_json:app_kubernetes_io_part_of::TEXT, 'null') as label_app_kubernetes_io_part_of,\n    nullif(pod_labels_json:dagster_run_id::TEXT, 'null') as label_dagster_run_id,\n    nullif(pod_labels_json:dagster_code_location::TEXT, 'null') as label_dagster_code_location,\n    nullif(pod_labels_json:cron::TEXT, 'null') as label_cron,\n    nullif(pod_labels_json:\"app\"::TEXT, 'null') as label_app,\n    nullif(pod_labels_json:dagster_op::TEXT, 'null') as label_dagster_op,\n    nullif(pod_labels_json:kind::TEXT, 'null') as label_kind,\n    nullif(pod_labels_json:release::TEXT, 'null') as label_release,\n    nullif(pod_labels_json:app_kubernetes_io_managed_by::TEXT, 'null') as label_app_kubernetes_io_managed_by,\n    nullif(pod_labels_json:helm_sh_chart::TEXT, 'null') as label_helm_sh_chart,\nfrom alltenants_costmonitor_allenvs_db.k8s_private.completed_jobs_prod\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n\n    where start_time_utc > (select max(start_time_utc) from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_completed_jobs_prod)\n\n-- uncomment this to limit the full refresh to a certain date\n-- ", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_k8s_kubecost_prod": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_k8s_kubecost_prod", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/k8s/k8s_prod/stg_k8s_kubecost_prod.sql", "original_file_path": "models/costs/costs_staging/k8s/k8s_prod/stg_k8s_kubecost_prod.sql", "unique_id": "model.nextail.stg_k8s_kubecost_prod", "fqn": ["nextail", "costs", "costs_staging", "k8s", "k8s_prod", "stg_k8s_kubecost_prod"], "alias": "stg_k8s_kubecost_prod", "checksum": {"name": "sha256", "checksum": "06a658ed51dbf0692b64b988dc2ce50516ad358486c0ec35d4c45bad957b3f8d"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [{"sql": "alter table {{ this }} set change_tracking = true", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["pod_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": "target/run/nextail/models/costs/costs_staging/k8s/k8s_prod/stg_k8s_kubecost_prod.sql", "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "unique_key": ["pod_id"], "post-hook": "alter table {{ this }} set change_tracking = true"}, "created_at": 1754287421.626486, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_prod", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key=['pod_id'],\n\n        post_hook=\"alter table {{ this }} set change_tracking = true\",\n    )\n}}\n\nselect\n    'PROD' as k8s_environment,\n    name as pod_id,\n    avg(cpu) as avg_cpu,\n    avg(gpu) as avg_gpu,\n    avg(ram) as avg_ram,\n    avg(pv) as avg_pv,\n    avg(network) as avg_network,\n    avg(loadbalancer) as avg_loadbalancer,\n    avg(external) as avg_external,\n    avg(shared) as avg_shared,\n    avg(efficiency) as avg_efficiency,\n    sum(total) as sum_total_cost,\n    min(date) as start_date,\n    max(date) as end_date,\nfrom {{ source('kubecost', 'kubecost_cumulative_cost_by_pod_pro')}}\n\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n{% if is_incremental() %}\n    where date > (select max(start_date) from {{ this }})\n{% endif %}\n-- uncomment this to limit the full refresh to a certain date\n-- {% if should_full_refresh() %}\n--     where date >= '{{ var(\"full_refresh_start_date\") }}'\n-- {% endif %}\n\ngroup by k8s_environment, pod_id", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["kubecost", "kubecost_cumulative_cost_by_pod_pro"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": ["source.nextail.kubecost.kubecost_cumulative_cost_by_pod_pro"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/k8s/k8s_prod/stg_k8s_kubecost_prod.sql", "compiled": true, "compiled_code": "\n\nselect\n    'PROD' as k8s_environment,\n    name as pod_id,\n    avg(cpu) as avg_cpu,\n    avg(gpu) as avg_gpu,\n    avg(ram) as avg_ram,\n    avg(pv) as avg_pv,\n    avg(network) as avg_network,\n    avg(loadbalancer) as avg_loadbalancer,\n    avg(external) as avg_external,\n    avg(shared) as avg_shared,\n    avg(efficiency) as avg_efficiency,\n    sum(total) as sum_total_cost,\n    min(date) as start_date,\n    max(date) as end_date,\nfrom alltenants_costmonitor_allenvs_db.public.kubecost_cumulative_cost_by_pod_pro\n\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n\n    where date > (select max(start_date) from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_k8s_kubecost_prod)\n\n-- uncomment this to limit the full refresh to a certain date\n-- \n\ngroup by k8s_environment, pod_id", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "model.nextail.stg_query_attribution_history": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_query_attribution_history", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/snowflake/stg_query_attribution_history.sql", "original_file_path": "models/costs/costs_staging/snowflake/stg_query_attribution_history.sql", "unique_id": "model.nextail.stg_query_attribution_history", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "stg_query_attribution_history"], "alias": "stg_query_attribution_history", "checksum": {"name": "sha256", "checksum": "5bb956cb857208b65a8584e298ef70f9f4643815c90798ca3edb4918fabed763"}, "config": {"enabled": true, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [{"sql": "alter table {{ this }} set change_tracking = true", "transaction": true, "index": null}], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["query_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "Mirror of the account_usage.query_attribution_history table in the Snowflake database.", "columns": {"query_id": {"name": "query_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_time": {"name": "start_time", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "credits_attributed_compute": {"name": "credits_attributed_compute", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_staging/snowflake/_stg_query_attribution_history_tests.yml", "build_path": "target/run/nextail/models/costs/costs_staging/snowflake/stg_query_attribution_history.sql", "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "unique_key": ["query_id"], "post-hook": "alter table {{ this }} set change_tracking = true"}, "created_at": 1754287422.1129699, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_query_attribution_history", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key=['query_id'],\n\n        post_hook=\"alter table {{ this }} set change_tracking = true\",\n\n    )\n}}\n\nwith\n    source as (\n        select\n            * exclude credits_attributed_compute,\n            -- Since 2025-06-30, Snowflake is reporting null credits_attributed_compute values for short-running queries (< 100ms)\n            -- https://docs.snowflake.com/en/sql-reference/account-usage/query_attribution_history#usage-notes\n            -- we can use the workaround of calculating the number of credits used based on the query duration\n            -- This approach does not use the warehouse size and (incorrectly) assumes all queries are\n            -- executed in xsmall warehouses\n            -- to improve this, we may need to join the warehouse size and use it to calculate the real credits usage\n            case\n                when credits_attributed_compute is not null then credits_attributed_compute\n                when credits_attributed_compute is null then datediff('milliseconds', end_time, start_time) / 3600000\n            end as credits_attributed_compute,\n            \n            -- for the old tags, extract the tenant value\n            -- old queries have a structure like \"app=mso-app;env=production;tenant=forevernew\"\n            SPLIT_PART(SPLIT_PART(query_tag, 'tenant=', 2), ';', 1) as tenant,\n            SPLIT_PART(SPLIT_PART(query_tag, 'operation=', 2), ';', 1) as operation,\n            split(warehouse_name, '_')[0] as tenant_wh_name,\n            -- Ok, this is dirty.\n            -- There are some services that are not going to be updated to the new tag format.\n            -- This is a workaround: we are setting the tag according to the warehouse name.\n            -- Yes, this is a workaround. Yes, this is dirty. Don't do this at home.\n            -- In case the query_tag is a json, we don't want to override it; we only want to override it if it's a string.\n            -- Thus, this should maintain the new json tags while it should override the old ones. Win-win.\n            case\n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_MSOAPPJOBS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"msoapp-jobs\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_MSOAPPJOBS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"msoapp-jobs\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_MSOAPPJOBS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"msoapp-jobs\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_MSOAPPJOBS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"msoapp-jobs\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_DATAPIPELINES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"data-pipelines\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_DATAPIPELINES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"data-pipelines\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n                \n\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPMOBILE_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"app\", \"module\": \"backend\", \"submodule\": \"msoapp\", \"operation\": \"mobile\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_MSOAPPJOBS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"msoapp-jobs\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_MSOAPPJOBS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"msoapp-jobs\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPWEB_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"app\", \"module\": \"backend\", \"submodule\": \"msoapp\", \"operation\": \"desktop\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPWEB_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"app\", \"module\": \"backend\", \"submodule\": \"msoapp\", \"operation\": \"desktop\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPEVENTLISTENER_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"kafka-listener\", \"submodule\": \"msoapp-events-listener\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPEVENTLISTENER_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"kafka-listener\", \"submodule\": \"msoapp-events-listener\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_ADVANCEDANALYTICS_DIPAPAPI_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"dipap-api\", \"submodule\": \"desktop\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_ADVANCEDANALYTICS_DIPAPAPIMOBILE_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"dipap-api\", \"submodule\": \"mobile\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                \n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_DATAPIPELINES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"data-pipelines\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_DATAPIPELINES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"data-pipelines\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'BASE_ANYAPP_CICD_TEST_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"testing\", \"submodule\": \"cicd\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_DATAPIPELINES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"data-pipelines\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_DATAPIPELINES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"data-pipelines\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_MASTERS_DATASERVICES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"masters\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_MASTERS_DATASERVICES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"masters\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%GLOBALDOMAIN_TEXTILSFMIGRATION_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"textil\", \"module\": \"textil\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%GLOBALDOMAIN_TEXTILSFMIGRATION_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"textil\", \"module\": \"textil\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_REPLENISHMENTS_TEXTILMAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_REPLENISHMENTS_TEXTILMAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_FIRSTALLOCATION_TEXTILMAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_FIRSTALLOCATION_TEXTILMAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_STORETRANSFERS_TEXTILMAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_STORETRANSFERS_TEXTILMAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_ADVANCEDANALYTICS_BITABLESREFRESH_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"bi\", \"submodule\": \"internal_tables_refresh\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_ADVANCEDANALYTICS_BITABLESREFRESH_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"bi\", \"submodule\": \"internal_tables_refresh\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INTEGRATIONS_MAIN_OPERATOR_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"old_integration\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_MAIN_OPERATOR_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"old_integration\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INSIGHTS_WORKLOAD_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"insights\", \"submodule\": \"workload\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INSIGHTS_WORKLOAD_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"insights\", \"submodule\": \"workload\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INTEGRATIONS_DATATRANSFORMATION_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-transformation\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_DATATRANSFORMATION_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-transformation\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INTEGRATIONS_DATAINGESTION_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-ingestion\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_DATAINGESTION_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-ingestion\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_GLOBALDOMAIN_PYLARMS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"backend\", \"submodule\": \"pylarms\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_GLOBALDOMAIN_PYLARMS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"backend\", \"submodule\": \"pylarms\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_SIZECURVES_MAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"size-curves\", \"submodule\": \"size-curves\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_SIZECURVES_MAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"size-curves\", \"submodule\": \"size-curves\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_GLOBALDOMAIN_DATALLSERVICES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"globaldomain\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_GLOBALDOMAIN_DATALLSERVICES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"globaldomain\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_XSMALL_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"xsmall\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_XSMALL_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"xsmall\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_MEDIUM_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"medium\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_MEDIUM_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"medium\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n                \n                when warehouse_name ilike 'ALLTENANTS_INSIGHTS_DATASERVICES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"data-api\", \"submodule\": \"data-api\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_INSIGHTS_DATASERVICES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"data-api\", \"submodule\": \"data-api\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                \n                -- dev warehouses for the different teams\n                when warehouse_name ilike '%_TESELA_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"tesela\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"integrations\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_FRONTEND_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"frontend\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_STAFF_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"staff\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_BI_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"bi\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_OPTIMUS_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"optimus\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_DATAPLATFORM_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"dataplatform\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_CUSTOMEREXPERIENCE_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"customerexperience\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_DATAOPS_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"dataops\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'COMPUTE_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-platform\", \"module\": \"dev\", \"submodule\": \"dev_tasks\", \"operation\": \"compute_wh_usage\", \"hardcoded\": \"true\"}')\n\n                else query_tag\n            end as cleaned_query_tag,\n\n        from {{ source('snowflake', 'query_attribution_history') }}\n    )\n\nselect\n    -- remove temp columns that we used to clean the query_tag\n    * exclude (tenant, operation, query_tag, tenant_wh_name),\n    cleaned_query_tag as query_tag\nfrom source\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n{% if is_incremental() %}\n    where start_time > (select max(start_time) from {{ this }})\n{% endif %}\n-- If it's a full refresh, we want to pull all the data from a certain date.\n{% if should_full_refresh() %}\n    where start_time >= '{{ var(\"full_refresh_start_date\") }}'\n{% endif %}\n\n-- if the dbt target is nx_internal_sandbox, then limit the results to 1000\n-- otherwise (i.e.: production), don't limit the results\n-- this limitation is useful to avoid running the whole pipeline in sandbox,\n-- where it's not needed.\n{% if target.name|lower == 'nx_internal_sandbox' %}\n    limit 1000\n{% endif %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["snowflake", "query_attribution_history"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": ["source.nextail.snowflake.query_attribution_history"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_staging/snowflake/stg_query_attribution_history.sql", "compiled": true, "compiled_code": "\n\nwith\n    source as (\n        select\n            * exclude credits_attributed_compute,\n            -- Since 2025-06-30, Snowflake is reporting null credits_attributed_compute values for short-running queries (< 100ms)\n            -- https://docs.snowflake.com/en/sql-reference/account-usage/query_attribution_history#usage-notes\n            -- we can use the workaround of calculating the number of credits used based on the query duration\n            -- This approach does not use the warehouse size and (incorrectly) assumes all queries are\n            -- executed in xsmall warehouses\n            -- to improve this, we may need to join the warehouse size and use it to calculate the real credits usage\n            case\n                when credits_attributed_compute is not null then credits_attributed_compute\n                when credits_attributed_compute is null then datediff('milliseconds', end_time, start_time) / 3600000\n            end as credits_attributed_compute,\n            \n            -- for the old tags, extract the tenant value\n            -- old queries have a structure like \"app=mso-app;env=production;tenant=forevernew\"\n            SPLIT_PART(SPLIT_PART(query_tag, 'tenant=', 2), ';', 1) as tenant,\n            SPLIT_PART(SPLIT_PART(query_tag, 'operation=', 2), ';', 1) as operation,\n            split(warehouse_name, '_')[0] as tenant_wh_name,\n            -- Ok, this is dirty.\n            -- There are some services that are not going to be updated to the new tag format.\n            -- This is a workaround: we are setting the tag according to the warehouse name.\n            -- Yes, this is a workaround. Yes, this is dirty. Don't do this at home.\n            -- In case the query_tag is a json, we don't want to override it; we only want to override it if it's a string.\n            -- Thus, this should maintain the new json tags while it should override the old ones. Win-win.\n            case\n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_MSOAPPJOBS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"msoapp-jobs\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_MSOAPPJOBS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"msoapp-jobs\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_MSOAPPJOBS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"msoapp-jobs\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_MSOAPPJOBS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"msoapp-jobs\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_DATAPIPELINES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"data-pipelines\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_STORETRANSFERS_DATAPIPELINES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"data-pipelines\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n                \n\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPMOBILE_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"app\", \"module\": \"backend\", \"submodule\": \"msoapp\", \"operation\": \"mobile\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_MSOAPPJOBS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"msoapp-jobs\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_MSOAPPJOBS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"msoapp-jobs\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPWEB_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"app\", \"module\": \"backend\", \"submodule\": \"msoapp\", \"operation\": \"desktop\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPWEB_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"app\", \"module\": \"backend\", \"submodule\": \"msoapp\", \"operation\": \"desktop\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPEVENTLISTENER_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"kafka-listener\", \"submodule\": \"msoapp-events-listener\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_GLOBALDOMAIN_MSOAPPEVENTLISTENER_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"kafka-listener\", \"submodule\": \"msoapp-events-listener\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_ADVANCEDANALYTICS_DIPAPAPI_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"dipap-api\", \"submodule\": \"desktop\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_ADVANCEDANALYTICS_DIPAPAPIMOBILE_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"dipap-api\", \"submodule\": \"mobile\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                \n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_DATAPIPELINES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"data-pipelines\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_FIRSTALLOCATION_DATAPIPELINES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"data-pipelines\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'BASE_ANYAPP_CICD_TEST_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"testing\", \"submodule\": \"cicd\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_DATAPIPELINES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"data-pipelines\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_REPLENISHMENTS_DATAPIPELINES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"data-pipelines\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name = 'ALLTENANTS_MASTERS_DATASERVICES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"masters\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name = 'ALLTENANTS_MASTERS_DATASERVICES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"masters\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%GLOBALDOMAIN_TEXTILSFMIGRATION_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"textil\", \"module\": \"textil\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%GLOBALDOMAIN_TEXTILSFMIGRATION_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"textil\", \"module\": \"textil\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_REPLENISHMENTS_TEXTILMAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_REPLENISHMENTS_TEXTILMAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"replenishments\", \"module\": \"replenishments\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_FIRSTALLOCATION_TEXTILMAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_FIRSTALLOCATION_TEXTILMAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"first-allocation\", \"module\": \"first-allocation\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_STORETRANSFERS_TEXTILMAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_STORETRANSFERS_TEXTILMAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"storetransfers\", \"module\": \"storetransfers\", \"submodule\": \"textil\", \"operation\": \"', operation, '\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_ADVANCEDANALYTICS_BITABLESREFRESH_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"bi\", \"submodule\": \"internal_tables_refresh\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_ADVANCEDANALYTICS_BITABLESREFRESH_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"bi\", \"submodule\": \"internal_tables_refresh\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INTEGRATIONS_MAIN_OPERATOR_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"old_integration\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_MAIN_OPERATOR_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"old_integration\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INSIGHTS_WORKLOAD_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"insights\", \"submodule\": \"workload\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INSIGHTS_WORKLOAD_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"insights\", \"submodule\": \"workload\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INTEGRATIONS_DATATRANSFORMATION_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-transformation\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_DATATRANSFORMATION_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-transformation\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_INTEGRATIONS_DATAINGESTION_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-ingestion\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_DATAINGESTION_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-integration\", \"module\": \"integrations\", \"submodule\": \"dio-daily\", \"operation\": \"data-ingestion\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike '%_GLOBALDOMAIN_PYLARMS_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"backend\", \"submodule\": \"pylarms\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_GLOBALDOMAIN_PYLARMS_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"monitoring\", \"module\": \"backend\", \"submodule\": \"pylarms\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_SIZECURVES_MAIN_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"size-curves\", \"submodule\": \"size-curves\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_SIZECURVES_MAIN_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"size-curves\", \"submodule\": \"size-curves\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_GLOBALDOMAIN_DATALLSERVICES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"globaldomain\", \"environment\": \"prod\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_GLOBALDOMAIN_DATALLSERVICES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-services\", \"module\": \"data-api\", \"submodule\": \"globaldomain\", \"environment\": \"sandbox\", \"tenant\": \"', tenant_wh_name, '\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_XSMALL_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"xsmall\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_XSMALL_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"xsmall\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_MEDIUM_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"medium\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_FORECAST_MEDIUM_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"forecast\", \"module\": \"not_tagged\", \"submodule\": \"medium\", \"environment\": \"sandbox\", \"hardcoded\": \"true\"}')\n                \n                when warehouse_name ilike 'ALLTENANTS_INSIGHTS_DATASERVICES_PROD_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"data-api\", \"submodule\": \"data-api\", \"environment\": \"prod\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike 'ALLTENANTS_INSIGHTS_DATASERVICES_SANDBOX_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"advanced-analytics\", \"module\": \"data-api\", \"submodule\": \"data-api\", \"environment\": \"sandbox\", \"tenant\": \"', tenant, '\", \"hardcoded\": \"true\"}')\n                \n                -- dev warehouses for the different teams\n                when warehouse_name ilike '%_TESELA_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"tesela\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_INTEGRATIONS_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"integrations\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_FRONTEND_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"frontend\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_STAFF_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"staff\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_BI_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"bi\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_OPTIMUS_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"optimus\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_DATAPLATFORM_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"dataplatform\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_CUSTOMEREXPERIENCE_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"customerexperience\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n                when warehouse_name ilike '%_DATAOPS_%_DEV_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"internal\", \"module\": \"dev\", \"submodule\": \"dataops\", \"environment\": \"prod\", \"hardcoded\": \"true\"}')\n\n                when warehouse_name ilike 'COMPUTE_WH' and try_parse_json(query_tag) is null then concat('{\"service\": \"data-platform\", \"module\": \"dev\", \"submodule\": \"dev_tasks\", \"operation\": \"compute_wh_usage\", \"hardcoded\": \"true\"}')\n\n                else query_tag\n            end as cleaned_query_tag,\n\n        from snowflake.account_usage.query_attribution_history\n    )\n\nselect\n    -- remove temp columns that we used to clean the query_tag\n    * exclude (tenant, operation, query_tag, tenant_wh_name),\n    cleaned_query_tag as query_tag\nfrom source\n-- configure the incremental model.\n-- If it's a regular execution, we only want to pull the data that has been updated since the last run.\n\n    where start_time > (select max(start_time) from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_query_attribution_history)\n\n-- If it's a full refresh, we want to pull all the data from a certain date.\n\n\n-- if the dbt target is nx_internal_sandbox, then limit the results to 1000\n-- otherwise (i.e.: production), don't limit the results\n-- this limitation is useful to avoid running the whole pipeline in sandbox,\n-- where it's not needed.\n\n    limit 1000\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": ["query_id"], "time_spine": null}, "model.nextail.k8s_snowflake_costs_by_date_label": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_gold", "name": "k8s_snowflake_costs_by_date_label", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_gold/k8s_snowflake_costs_by_date_label.sql", "original_file_path": "models/costs/costs_gold/k8s_snowflake_costs_by_date_label.sql", "unique_id": "model.nextail.k8s_snowflake_costs_by_date_label", "fqn": ["nextail", "costs", "costs_gold", "k8s_snowflake_costs_by_date_label"], "alias": "k8s_snowflake_costs_by_date_label", "checksum": {"name": "sha256", "checksum": "0cea0e89e756a0d989675a4a31be5f4815d36baa550f826b762c0f9cb5e334c7"}, "config": {"enabled": true, "alias": null, "schema": "nx_gold", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["start_date", "service", "module", "submodule", "operation", "tenant", "environment", "correlation_id", "execution_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "8 hours", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {"start_date": {"name": "start_date", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "service": {"name": "service", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "module": {"name": "module", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "submodule": {"name": "submodule", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "operation": {"name": "operation", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "tenant": {"name": "tenant", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "environment": {"name": "environment", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "correlation_id": {"name": "correlation_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "execution_id": {"name": "execution_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "snowflake_no_queries": {"name": "snowflake_no_queries", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "snowflake_total_query_duration_ms": {"name": "snowflake_total_query_duration_ms", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "snowflake_total_credits": {"name": "snowflake_total_credits", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "k8s_no_pod_ids": {"name": "k8s_no_pod_ids", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "k8s_total_pods_duration_s": {"name": "k8s_total_pods_duration_s", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "k8s_total_cost": {"name": "k8s_total_cost", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_gold", "on_configuration_change": "apply", "target_lag": "8 hours", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["start_date", "service", "module", "submodule", "operation", "tenant", "environment", "correlation_id", "execution_id"]}, "created_at": 1754287422.120691, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_gold.k8s_snowflake_costs_by_date_label", "raw_code": "{{\n    config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='8 hours',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=['start_date', 'service', 'module', 'submodule', 'operation', 'tenant', 'environment', 'correlation_id', 'execution_id'],\n    )\n}}\n\nwith\n    sf_costs as (\n        select\n            start_date,\n            service,\n            module,\n            submodule,\n            operation,\n            tenant,\n            environment,\n            correlation_id,\n            execution_id,\n            no_queries as snowflake_no_queries,\n            sum_query_duration_ms as snowflake_total_query_duration_ms,\n            sum_credits_attributed_compute as snowflake_total_credits,\n        from {{\u00a0ref('snowflake_grouped_labels_per_date') }} snowflake\n    ),\n    k8s_costs as (\n        select\n            start_date,\n            service,\n            module,\n            submodule,\n            operation,\n            tenant,\n            environment,\n            correlation_id,\n            execution_id,\n            no_pod_ids as k8s_no_pod_ids,\n            total_pods_duration_seconds as k8s_total_pods_duration_s,\n            total_cost as k8s_total_cost,\n        from {{ ref('k8s_grouped_labels_per_date')}}\n    ),\n    j as (\n        select\n            *\n        from sf_costs\n        full outer join k8s_costs\n            using (start_date, service, module, submodule, operation, tenant, environment, correlation_id, execution_id)\n        \n    ),\n    coalesce_nulls as (\n        select\n            start_date,\n            service,\n            module,\n            submodule,\n            operation,\n            tenant,\n            environment,\n            correlation_id,\n            execution_id,\n            coalesce(snowflake_no_queries, 0) as snowflake_no_queries,\n            coalesce(snowflake_total_query_duration_ms, 0) as snowflake_total_query_duration_ms,\n            coalesce(snowflake_total_credits, 0) as snowflake_total_credits,\n            coalesce(k8s_no_pod_ids, 0) as k8s_no_pod_ids,\n            coalesce(k8s_total_pods_duration_s, 0) as k8s_total_pods_duration_s,\n            coalesce(k8s_total_cost, 0) as k8s_total_cost,\n        from j\n    )\n\nselect\n    start_date,\n    service,\n    module,\n    submodule,\n    operation,\n    tenant,\n    environment,\n    correlation_id,\n    execution_id,\n    snowflake_no_queries,\n    snowflake_total_query_duration_ms,\n    snowflake_total_credits,\n    k8s_no_pod_ids,\n    k8s_total_pods_duration_s,\n    k8s_total_cost,\n    snowflake_total_credits * 3.3 + k8s_total_cost as total_cost_usd,\n    -- true if service AND module AND submodule are not \"NA\"; otherwise false\n    case\n        when service <> 'NA' and module <> 'NA' and submodule <> 'NA' then true\n        else false\n    end as is_service_module_submodule_valid,\n\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module)\n        else 'NA'\n    end as service_module,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule)\n        else 'NA'\n    end as service_module_submodule,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule, operation)\n        else 'NA'\n    end as service_module_submodule_operation,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule, operation, tenant)\n        else 'NA'\n    end as service_module_submodule_operation_tenant,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule, operation, tenant, environment)\n        else 'NA'\n    end as service_module_submodule_operation_tenant_environment\nfrom coalesce_nulls", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_grouped_labels_per_date", "package": null, "version": null}, {"name": "k8s_grouped_labels_per_date", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.nextail.snowflake_grouped_labels_per_date", "model.nextail.k8s_grouped_labels_per_date"]}, "compiled_path": "target/compiled/nextail/models/costs/costs_gold/k8s_snowflake_costs_by_date_label.sql", "compiled": true, "compiled_code": "\n\nwith\n    sf_costs as (\n        select\n            start_date,\n            service,\n            module,\n            submodule,\n            operation,\n            tenant,\n            environment,\n            correlation_id,\n            execution_id,\n            no_queries as snowflake_no_queries,\n            sum_query_duration_ms as snowflake_total_query_duration_ms,\n            sum_credits_attributed_compute as snowflake_total_credits,\n        from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.snowflake_grouped_labels_per_date snowflake\n    ),\n    k8s_costs as (\n        select\n            start_date,\n            service,\n            module,\n            submodule,\n            operation,\n            tenant,\n            environment,\n            correlation_id,\n            execution_id,\n            no_pod_ids as k8s_no_pod_ids,\n            total_pods_duration_seconds as k8s_total_pods_duration_s,\n            total_cost as k8s_total_cost,\n        from NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.k8s_grouped_labels_per_date\n    ),\n    j as (\n        select\n            *\n        from sf_costs\n        full outer join k8s_costs\n            using (start_date, service, module, submodule, operation, tenant, environment, correlation_id, execution_id)\n        \n    ),\n    coalesce_nulls as (\n        select\n            start_date,\n            service,\n            module,\n            submodule,\n            operation,\n            tenant,\n            environment,\n            correlation_id,\n            execution_id,\n            coalesce(snowflake_no_queries, 0) as snowflake_no_queries,\n            coalesce(snowflake_total_query_duration_ms, 0) as snowflake_total_query_duration_ms,\n            coalesce(snowflake_total_credits, 0) as snowflake_total_credits,\n            coalesce(k8s_no_pod_ids, 0) as k8s_no_pod_ids,\n            coalesce(k8s_total_pods_duration_s, 0) as k8s_total_pods_duration_s,\n            coalesce(k8s_total_cost, 0) as k8s_total_cost,\n        from j\n    )\n\nselect\n    start_date,\n    service,\n    module,\n    submodule,\n    operation,\n    tenant,\n    environment,\n    correlation_id,\n    execution_id,\n    snowflake_no_queries,\n    snowflake_total_query_duration_ms,\n    snowflake_total_credits,\n    k8s_no_pod_ids,\n    k8s_total_pods_duration_s,\n    k8s_total_cost,\n    snowflake_total_credits * 3.3 + k8s_total_cost as total_cost_usd,\n    -- true if service AND module AND submodule are not \"NA\"; otherwise false\n    case\n        when service <> 'NA' and module <> 'NA' and submodule <> 'NA' then true\n        else false\n    end as is_service_module_submodule_valid,\n\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module)\n        else 'NA'\n    end as service_module,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule)\n        else 'NA'\n    end as service_module_submodule,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule, operation)\n        else 'NA'\n    end as service_module_submodule_operation,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule, operation, tenant)\n        else 'NA'\n    end as service_module_submodule_operation_tenant,\n    case\n        when is_service_module_submodule_valid then concat_ws('-', service, module, submodule, operation, tenant, environment)\n        else 'NA'\n    end as service_module_submodule_operation_tenant_environment\nfrom coalesce_nulls", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}, "test.nextail.not_null_snowflake_warehouse_idle_costs_warehouse_name.6ae96ac80c": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_warehouse_name", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_warehouse_name.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_warehouse_name.6ae96ac80c", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_warehouse_name"], "alias": "not_null_snowflake_warehouse_idle_costs_warehouse_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.937212, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "warehouse_name", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "warehouse_name", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.unique_snowflake_warehouse_idle_costs_warehouse_name.8eedb62dca": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "unique_snowflake_warehouse_idle_costs_warehouse_name", "resource_type": "test", "package_name": "nextail", "path": "unique_snowflake_warehouse_idle_costs_warehouse_name.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.unique_snowflake_warehouse_idle_costs_warehouse_name.8eedb62dca", "fqn": ["nextail", "costs", "costs_silver", "unique_snowflake_warehouse_idle_costs_warehouse_name"], "alias": "unique_snowflake_warehouse_idle_costs_warehouse_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": "query_date = current_date()", "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "where": "query_date = current_date()"}, "created_at": 1754287421.938477, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",where=\"query_date = current_date()\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "warehouse_name", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "unique", "kwargs": {"column_name": "warehouse_name", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_query_date.7c912a9dd6": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_query_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_query_date.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_query_date.7c912a9dd6", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_query_date"], "alias": "not_null_snowflake_warehouse_idle_costs_query_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.939189, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_date", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "query_date", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_is_timestamp_snowflake_warehouse_idle_costs_query_date.e7daf3c65d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_is_timestamp_snowflake_warehouse_idle_costs_query_date", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_is_timestamp_snowfla_8c3af3707b287a80e20a776680555e8f.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_is_timestamp_snowflake_warehouse_idle_costs_query_date.e7daf3c65d", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_is_timestamp_snowflake_warehouse_idle_costs_query_date"], "alias": "dbt_utils_is_timestamp_snowfla_8c3af3707b287a80e20a776680555e8f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_is_timestamp_snowfla_8c3af3707b287a80e20a776680555e8f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_is_timestamp_snowfla_8c3af3707b287a80e20a776680555e8f"}, "created_at": 1754287421.939865, "relation_name": null, "raw_code": "{{ dbt_utils.test_is_timestamp(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_is_timestamp_snowfla_8c3af3707b287a80e20a776680555e8f\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [null, "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_date", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "is_timestamp", "kwargs": {"column_name": "query_date", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_running_seconds.e5fa89892e": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_running_seconds", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_running_seconds.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_running_seconds.e5fa89892e", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_running_seconds"], "alias": "not_null_snowflake_warehouse_idle_costs_running_seconds", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.947691, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "running_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "running_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_running_seconds.d0f262baf3": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_positive_value_snowflake_warehouse_idle_costs_running_seconds", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_positive_value_snowf_0e2391f81c64c80a72edfd4e450f71e0.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_running_seconds.d0f262baf3", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_positive_value_snowflake_warehouse_idle_costs_running_seconds"], "alias": "dbt_utils_positive_value_snowf_0e2391f81c64c80a72edfd4e450f71e0", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_positive_value_snowf_0e2391f81c64c80a72edfd4e450f71e0", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_positive_value_snowf_0e2391f81c64c80a72edfd4e450f71e0"}, "created_at": 1754287421.948448, "relation_name": null, "raw_code": "{{ dbt_utils.test_positive_value(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_positive_value_snowf_0e2391f81c64c80a72edfd4e450f71e0\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [null, "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "running_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "positive_value", "kwargs": {"column_name": "running_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_idle_seconds.02f129c450": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_idle_seconds", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_idle_seconds.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_idle_seconds.02f129c450", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_idle_seconds"], "alias": "not_null_snowflake_warehouse_idle_costs_idle_seconds", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.9505658, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "idle_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "idle_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_idle_seconds.8927ae522a": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_positive_value_snowflake_warehouse_idle_costs_idle_seconds", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_positive_value_snowf_37ea48d126f85147223025c8e0a79dc6.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_idle_seconds.8927ae522a", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_positive_value_snowflake_warehouse_idle_costs_idle_seconds"], "alias": "dbt_utils_positive_value_snowf_37ea48d126f85147223025c8e0a79dc6", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_positive_value_snowf_37ea48d126f85147223025c8e0a79dc6", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_positive_value_snowf_37ea48d126f85147223025c8e0a79dc6"}, "created_at": 1754287421.9512498, "relation_name": null, "raw_code": "{{ dbt_utils.test_positive_value(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_positive_value_snowf_37ea48d126f85147223025c8e0a79dc6\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [null, "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "idle_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "positive_value", "kwargs": {"column_name": "idle_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_on_seconds.9ed34125ec": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_turned_on_seconds", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_turned_on_seconds.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_on_seconds.9ed34125ec", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_turned_on_seconds"], "alias": "not_null_snowflake_warehouse_idle_costs_turned_on_seconds", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.953214, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "turned_on_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "turned_on_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_on_seconds.2b39e8530d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_on_seconds", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_positive_value_snowf_c4460c9b5c0e8e1c939c79d59f27ea0c.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_on_seconds.2b39e8530d", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_on_seconds"], "alias": "dbt_utils_positive_value_snowf_c4460c9b5c0e8e1c939c79d59f27ea0c", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_positive_value_snowf_c4460c9b5c0e8e1c939c79d59f27ea0c", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_positive_value_snowf_c4460c9b5c0e8e1c939c79d59f27ea0c"}, "created_at": 1754287421.953887, "relation_name": null, "raw_code": "{{ dbt_utils.test_positive_value(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_positive_value_snowf_c4460c9b5c0e8e1c939c79d59f27ea0c\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [null, "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "turned_on_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "positive_value", "kwargs": {"column_name": "turned_on_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_off_seconds.93a8f6ebae": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_turned_off_seconds", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_turned_off_seconds.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_off_seconds.93a8f6ebae", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_turned_off_seconds"], "alias": "not_null_snowflake_warehouse_idle_costs_turned_off_seconds", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.9556859, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "turned_off_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "turned_off_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_off_seconds.250a8266ee": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_off_seconds", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_positive_value_snowf_859391d5b6b1a6455b66cd99a2537cdb.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_off_seconds.250a8266ee", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_off_seconds"], "alias": "dbt_utils_positive_value_snowf_859391d5b6b1a6455b66cd99a2537cdb", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_positive_value_snowf_859391d5b6b1a6455b66cd99a2537cdb", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_positive_value_snowf_859391d5b6b1a6455b66cd99a2537cdb"}, "created_at": 1754287421.9563541, "relation_name": null, "raw_code": "{{ dbt_utils.test_positive_value(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_positive_value_snowf_859391d5b6b1a6455b66cd99a2537cdb\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [null, "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "turned_off_seconds", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "positive_value", "kwargs": {"column_name": "turned_off_seconds", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_total_time_hours.05fde74cb2": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_total_time_hours", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_total_time_hours.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_total_time_hours.05fde74cb2", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_total_time_hours"], "alias": "not_null_snowflake_warehouse_idle_costs_total_time_hours", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.958406, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "total_time_hours", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "total_time_hours", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_total_time_hours.4e0c3c7013": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_positive_value_snowflake_warehouse_idle_costs_total_time_hours", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_positive_value_snowf_06faa28f4ca9092b010072832a50b9d7.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_total_time_hours.4e0c3c7013", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_positive_value_snowflake_warehouse_idle_costs_total_time_hours"], "alias": "dbt_utils_positive_value_snowf_06faa28f4ca9092b010072832a50b9d7", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_positive_value_snowf_06faa28f4ca9092b010072832a50b9d7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_positive_value_snowf_06faa28f4ca9092b010072832a50b9d7"}, "created_at": 1754287421.9590771, "relation_name": null, "raw_code": "{{ dbt_utils.test_positive_value(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_positive_value_snowf_06faa28f4ca9092b010072832a50b9d7\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [null, "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "total_time_hours", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "positive_value", "kwargs": {"column_name": "total_time_hours", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_total_time_hours__24_1__23_9.57bc3c67b6": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_accepted_range_snowflake_warehouse_idle_costs_total_time_hours__24_1__23_9", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_accepted_range_snowf_ca469f63fab239b966a6f07659fd3188.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_total_time_hours__24_1__23_9.57bc3c67b6", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_accepted_range_snowflake_warehouse_idle_costs_total_time_hours__24_1__23_9"], "alias": "dbt_utils_accepted_range_snowf_ca469f63fab239b966a6f07659fd3188", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_accepted_range_snowf_ca469f63fab239b966a6f07659fd3188", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_accepted_range_snowf_ca469f63fab239b966a6f07659fd3188"}, "created_at": 1754287421.96125, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_snowf_ca469f63fab239b966a6f07659fd3188\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "total_time_hours", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 23.9, "max_value": 24.1, "column_name": "total_time_hours", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_snowflake_warehouse_idle_costs_running_ratio.c9c1163b9d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_snowflake_warehouse_idle_costs_running_ratio", "resource_type": "test", "package_name": "nextail", "path": "not_null_snowflake_warehouse_idle_costs_running_ratio.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.not_null_snowflake_warehouse_idle_costs_running_ratio.c9c1163b9d", "fqn": ["nextail", "costs", "costs_silver", "not_null_snowflake_warehouse_idle_costs_running_ratio"], "alias": "not_null_snowflake_warehouse_idle_costs_running_ratio", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.965508, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "running_ratio", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "running_ratio", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_running_ratio__100__0.a4d09babed": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_accepted_range_snowflake_warehouse_idle_costs_running_ratio__100__0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_accepted_range_snowf_d9857735d3db7995b8bd507118d81f67.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_running_ratio__100__0.a4d09babed", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_accepted_range_snowflake_warehouse_idle_costs_running_ratio__100__0"], "alias": "dbt_utils_accepted_range_snowf_d9857735d3db7995b8bd507118d81f67", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_accepted_range_snowf_d9857735d3db7995b8bd507118d81f67", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_accepted_range_snowf_d9857735d3db7995b8bd507118d81f67"}, "created_at": 1754287421.966231, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_snowf_d9857735d3db7995b8bd507118d81f67\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "running_ratio", "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "max_value": 100, "column_name": "running_ratio", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_equal_rowcount_snowflake_warehouse_idle_costs_ref_snowflake_warehouse_idle_costs_.7e751a4c5a": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_equal_rowcount_snowflake_warehouse_idle_costs_ref_snowflake_warehouse_idle_costs_", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_equal_rowcount_snowf_1851ee85bacbecd52d62741a8620ba58.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_equal_rowcount_snowflake_warehouse_idle_costs_ref_snowflake_warehouse_idle_costs_.7e751a4c5a", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_equal_rowcount_snowflake_warehouse_idle_costs_ref_snowflake_warehouse_idle_costs_"], "alias": "dbt_utils_equal_rowcount_snowf_1851ee85bacbecd52d62741a8620ba58", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_equal_rowcount_snowf_1851ee85bacbecd52d62741a8620ba58", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": "query_date = current_date()", "limit": null, "fail_calc": "sum(coalesce(diff_count, 0))", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "where": "query_date = current_date()", "alias": "dbt_utils_equal_rowcount_snowf_1851ee85bacbecd52d62741a8620ba58", "fail_calc": "sum(coalesce(diff_count, 0))"}, "created_at": 1754287421.9681869, "relation_name": null, "raw_code": "{{ dbt_utils.test_equal_rowcount(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",where=\"query_date = current_date()\",alias=\"dbt_utils_equal_rowcount_snowf_1851ee85bacbecd52d62741a8620ba58\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}, {"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_equal_rowcount", "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "equal_rowcount", "kwargs": {"compare_model": "ref('snowflake_warehouse_idle_costs')", "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_recency_snowflake_warehouse_idle_costs_day__query_date__2.1cb89f0209": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_recency_snowflake_warehouse_idle_costs_day__query_date__2", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_recency_snowflake_wa_273ad58bff4a7ae97b8eb5571fc3c448.sql", "original_file_path": "models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_recency_snowflake_warehouse_idle_costs_day__query_date__2.1cb89f0209", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_recency_snowflake_warehouse_idle_costs_day__query_date__2"], "alias": "dbt_utils_recency_snowflake_wa_273ad58bff4a7ae97b8eb5571fc3c448", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": "dbt_utils_recency_snowflake_wa_273ad58bff4a7ae97b8eb5571fc3c448", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_recency_snowflake_wa_273ad58bff4a7ae97b8eb5571fc3c448"}, "created_at": 1754287421.974145, "relation_name": null, "raw_code": "{{ dbt_utils.test_recency(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_recency_snowflake_wa_273ad58bff4a7ae97b8eb5571fc3c448\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "snowflake_warehouse_idle_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_recency", "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.snowflake_warehouse_idle_costs", "attached_node": "model.nextail.snowflake_warehouse_idle_costs", "test_metadata": {"name": "recency", "kwargs": {"field": "query_date", "datepart": "day", "interval": 2, "model": "{{ get_where_subquery(ref('snowflake_warehouse_idle_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.unique_stg_snowflake_costs_query_id.3018f27853": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "unique_stg_snowflake_costs_query_id", "resource_type": "test", "package_name": "nextail", "path": "unique_stg_snowflake_costs_query_id.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.unique_stg_snowflake_costs_query_id.3018f27853", "fqn": ["nextail", "costs", "costs_silver", "unique_stg_snowflake_costs_query_id"], "alias": "unique_stg_snowflake_costs_query_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.9843662, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "unique", "kwargs": {"column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_query_id.77194f6ad3": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_query_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_query_id.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_query_id.77194f6ad3", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_query_id"], "alias": "not_null_stg_snowflake_costs_query_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.985079, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_.189502f054": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_", "resource_type": "test", "package_name": "nextail", "path": "relationships_stg_snowflake_co_41362406645f958c618a4acf0b8e200b.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_.189502f054", "fqn": ["nextail", "costs", "costs_silver", "relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_"], "alias": "relationships_stg_snowflake_co_41362406645f958c618a4acf0b8e200b", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "relationships_stg_snowflake_co_41362406645f958c618a4acf0b8e200b", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "relationships_stg_snowflake_co_41362406645f958c618a4acf0b8e200b"}, "created_at": 1754287421.985763, "relation_name": null, "raw_code": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_snowflake_co_41362406645f958c618a4acf0b8e200b\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}, {"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_query_attribution_history", "model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_query_attribution_history')", "field": "query_id", "column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_warehouse_name.97229effc9": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_warehouse_name", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_warehouse_name.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_warehouse_name.97229effc9", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_warehouse_name"], "alias": "not_null_stg_snowflake_costs_warehouse_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.989724, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "warehouse_name", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "warehouse_name", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_user_name.7953967e57": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_user_name", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_user_name.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_user_name.7953967e57", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_user_name"], "alias": "not_null_stg_snowflake_costs_user_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.990428, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "user_name", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "user_name", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_start_date.762083caad": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_start_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_start_date.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_start_date.762083caad", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_start_date"], "alias": "not_null_stg_snowflake_costs_start_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.9911098, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_date", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_date", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_start_time.869f616796": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_start_time", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_start_time.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_start_time.869f616796", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_start_time"], "alias": "not_null_stg_snowflake_costs_start_time", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.991796, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_time", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_time", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_end_time.b0c218e633": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_end_time", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_end_time.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_end_time.b0c218e633", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_end_time"], "alias": "not_null_stg_snowflake_costs_end_time", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.99247, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "end_time", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "end_time", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_query_duration_ms.1985b89106": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_query_duration_ms", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_query_duration_ms.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_query_duration_ms.1985b89106", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_query_duration_ms"], "alias": "not_null_stg_snowflake_costs_query_duration_ms", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.993149, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_duration_ms", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "query_duration_ms", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_snowflake_costs_credits_attributed_compute.8980094661": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_snowflake_costs_credits_attributed_compute", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_snowflake_costs_credits_attributed_compute.sql", "original_file_path": "models/costs/costs_silver/_stg_snowflake_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_snowflake_costs_credits_attributed_compute.8980094661", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_snowflake_costs_credits_attributed_compute"], "alias": "not_null_stg_snowflake_costs_credits_attributed_compute", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.993831, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_snowflake_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_snowflake_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "credits_attributed_compute", "file_key_name": "models.stg_snowflake_costs", "attached_node": "model.nextail.stg_snowflake_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "credits_attributed_compute", "model": "{{ get_where_subquery(ref('stg_snowflake_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_costs_pod_id.23ee443c94": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_costs_pod_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_costs_pod_id.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_costs_pod_id.23ee443c94", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_k8s_costs_pod_id"], "alias": "not_null_stg_k8s_costs_pod_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.9965498, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "pod_id", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pod_id", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX.0ad4ada3b1": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX.0ad4ada3b1", "fqn": ["nextail", "costs", "costs_silver", "accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX"], "alias": "accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287421.997288, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_environment", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["PROD", "SANDBOX"], "column_name": "k8s_environment", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_costs_start_date.32232e0ea0": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_costs_start_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_costs_start_date.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_costs_start_date.32232e0ea0", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_k8s_costs_start_date"], "alias": "not_null_stg_k8s_costs_start_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0037131, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_date", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_date", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_costs_start_time_utc.cbedd77659": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_costs_start_time_utc", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_costs_start_time_utc.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_costs_start_time_utc.cbedd77659", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_k8s_costs_start_time_utc"], "alias": "not_null_stg_k8s_costs_start_time_utc", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.004398, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_time_utc", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_time_utc", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_costs_end_time_utc.e1e0a722a6": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_costs_end_time_utc", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_costs_end_time_utc.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_costs_end_time_utc.e1e0a722a6", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_k8s_costs_end_time_utc"], "alias": "not_null_stg_k8s_costs_end_time_utc", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": ">10"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "error_if": ">10"}, "created_at": 1754287422.00527, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",error_if=\">10\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "end_time_utc", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "end_time_utc", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_costs_pod_duration_seconds.e36234c5d7": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_costs_pod_duration_seconds", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_costs_pod_duration_seconds.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_costs_pod_duration_seconds.e36234c5d7", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_k8s_costs_pod_duration_seconds"], "alias": "not_null_stg_k8s_costs_pod_duration_seconds", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": ">10"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "error_if": ">10"}, "created_at": 1754287422.0059562, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",error_if=\">10\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "pod_duration_seconds", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pod_duration_seconds", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_costs_image.30b0e5159e": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_costs_image", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_costs_image.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_costs_image.30b0e5159e", "fqn": ["nextail", "costs", "costs_silver", "not_null_stg_k8s_costs_image"], "alias": "not_null_stg_k8s_costs_image", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.006616, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "image", "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "image", "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_recency_stg_k8s_costs_days__start_date__2.56a3c6e1b9": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_recency_stg_k8s_costs_days__start_date__2", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_recency_stg_k8s_costs_days__start_date__2.sql", "original_file_path": "models/costs/costs_silver/_stg_k8s_costs_tests.yml", "unique_id": "test.nextail.dbt_utils_recency_stg_k8s_costs_days__start_date__2.56a3c6e1b9", "fqn": ["nextail", "costs", "costs_silver", "dbt_utils_recency_stg_k8s_costs_days__start_date__2"], "alias": "dbt_utils_recency_stg_k8s_costs_days__start_date__2", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": ">10"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "error_if": ">10"}, "created_at": 1754287422.007297, "relation_name": null, "raw_code": "{{ dbt_utils.test_recency(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",error_if=\">10\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_costs", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_recency", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_costs"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.stg_k8s_costs", "attached_node": "model.nextail.stg_k8s_costs", "test_metadata": {"name": "recency", "kwargs": {"datepart": "days", "field": "start_date", "interval": 2, "model": "{{ get_where_subquery(ref('stg_k8s_costs')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD.30f6edce27": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_kubeco_ab8ef6b621c4a74d52e17259c23b17a1.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD.30f6edce27", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD"], "alias": "accepted_values_stg_k8s_kubeco_ab8ef6b621c4a74d52e17259c23b17a1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_kubeco_ab8ef6b621c4a74d52e17259c23b17a1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_kubeco_ab8ef6b621c4a74d52e17259c23b17a1"}, "created_at": 1754287422.056751, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_kubeco_ab8ef6b621c4a74d52e17259c23b17a1\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_environment", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["SANDBOX", "PROD"], "column_name": "k8s_environment", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_pod_id.16a61b502b": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_pod_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_pod_id.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_pod_id.16a61b502b", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_pod_id"], "alias": "not_null_stg_k8s_kubecost_all_pod_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0592582, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "pod_id", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pod_id", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_cpu.c3043fcd61": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_cpu", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_cpu.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_cpu.c3043fcd61", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_cpu"], "alias": "not_null_stg_k8s_kubecost_all_avg_cpu", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.059944, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_cpu", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_cpu", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_gpu.36e416435d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_gpu", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_gpu.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_gpu.36e416435d", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_gpu"], "alias": "not_null_stg_k8s_kubecost_all_avg_gpu", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.06061, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_gpu", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_gpu", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_ram.cc81d75d71": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_ram", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_ram.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_ram.cc81d75d71", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_ram"], "alias": "not_null_stg_k8s_kubecost_all_avg_ram", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.061261, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_ram", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_ram", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_pv.6b1217a9c5": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_pv", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_pv.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_pv.6b1217a9c5", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_pv"], "alias": "not_null_stg_k8s_kubecost_all_avg_pv", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.061907, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_pv", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_pv", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_network.43e8c50f41": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_network", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_network.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_network.43e8c50f41", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_network"], "alias": "not_null_stg_k8s_kubecost_all_avg_network", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0625558, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_network", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_network", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_loadbalancer.4533ab992b": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_loadbalancer", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_loadbalancer.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_loadbalancer.4533ab992b", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_loadbalancer"], "alias": "not_null_stg_k8s_kubecost_all_avg_loadbalancer", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0631979, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_loadbalancer", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_loadbalancer", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_external.7314091066": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_external", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_external.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_external.7314091066", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_external"], "alias": "not_null_stg_k8s_kubecost_all_avg_external", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.063923, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_external", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_external", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_shared.e96ff4a37e": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_shared", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_shared.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_shared.e96ff4a37e", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_shared"], "alias": "not_null_stg_k8s_kubecost_all_avg_shared", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0645819, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_shared", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_shared", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_avg_efficiency.cb2ef16bb6": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_avg_efficiency", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_avg_efficiency.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_avg_efficiency.cb2ef16bb6", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_avg_efficiency"], "alias": "not_null_stg_k8s_kubecost_all_avg_efficiency", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.065238, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "avg_efficiency", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "avg_efficiency", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_sum_total_cost.8ba4c0f777": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_sum_total_cost", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_sum_total_cost.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_sum_total_cost.8ba4c0f777", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_sum_total_cost"], "alias": "not_null_stg_k8s_kubecost_all_sum_total_cost", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.065909, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "sum_total_cost", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sum_total_cost", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_start_date.9131e81ce8": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_start_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_start_date.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_start_date.9131e81ce8", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_start_date"], "alias": "not_null_stg_k8s_kubecost_all_start_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.066627, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_date", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_date", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_kubecost_all_end_date.d4810f4f50": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_kubecost_all_end_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_kubecost_all_end_date.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_kubecost_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_kubecost_all_end_date.d4810f4f50", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_kubecost_all_end_date"], "alias": "not_null_stg_k8s_kubecost_all_end_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.067339, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_kubecost_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_kubecost_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "end_date", "file_key_name": "models.stg_k8s_kubecost_all", "attached_node": "model.nextail.stg_k8s_kubecost_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "end_date", "model": "{{ get_where_subquery(ref('stg_k8s_kubecost_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_id.73b68f6b77": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_pod_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_pod_id.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_id.73b68f6b77", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_pod_id"], "alias": "not_null_stg_k8s_completed_jobs_all_pod_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0749571, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "pod_id", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pod_id", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD.f729a774f0": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_comple_b4bec200deb5758d086811552f799ed5.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD.f729a774f0", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD"], "alias": "accepted_values_stg_k8s_comple_b4bec200deb5758d086811552f799ed5", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_comple_b4bec200deb5758d086811552f799ed5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_comple_b4bec200deb5758d086811552f799ed5"}, "created_at": 1754287422.075933, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_comple_b4bec200deb5758d086811552f799ed5\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_environment", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["SANDBOX", "PROD"], "column_name": "k8s_environment", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_start_date.10d25e196c": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_start_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_start_date.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_start_date.10d25e196c", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_start_date"], "alias": "not_null_stg_k8s_completed_jobs_all_start_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.07824, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_date", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_date", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_start_time_utc.aceaead16f": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_start_time_utc", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_start_time_utc.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_start_time_utc.aceaead16f", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_start_time_utc"], "alias": "not_null_stg_k8s_completed_jobs_all_start_time_utc", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.078944, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_time_utc", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_time_utc", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_end_time_utc.67e3186403": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_end_time_utc", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_end_time_utc.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_end_time_utc.67e3186403", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_end_time_utc"], "alias": "not_null_stg_k8s_completed_jobs_all_end_time_utc", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": ">10"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "error_if": ">10"}, "created_at": 1754287422.079606, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",error_if=\">10\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "end_time_utc", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "end_time_utc", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_duration_seconds.ef0b5f7d6d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_pod_duration_seconds", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_pod_duration_seconds.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_duration_seconds.ef0b5f7d6d", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_pod_duration_seconds"], "alias": "not_null_stg_k8s_completed_jobs_all_pod_duration_seconds", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "warn", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": ">10"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"severity": "warn", "error_if": ">10"}, "created_at": 1754287422.0803142, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity=\"warn\",error_if=\">10\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "pod_duration_seconds", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "pod_duration_seconds", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_image.c80796fb5c": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_image", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_image.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_image.c80796fb5c", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_image"], "alias": "not_null_stg_k8s_completed_jobs_all_image", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.0811362, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "image", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "image", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_termination_reason.341ceebe4b": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_termination_reason", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_termination_reason.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_termination_reason.341ceebe4b", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_termination_reason"], "alias": "not_null_stg_k8s_completed_jobs_all_termination_reason", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.082092, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "termination_reason", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "termination_reason", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError.6cc01b057e": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_comple_cb3fe587b1a6d33b92ac8030c37551a9.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError.6cc01b057e", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError"], "alias": "accepted_values_stg_k8s_comple_cb3fe587b1a6d33b92ac8030c37551a9", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_comple_cb3fe587b1a6d33b92ac8030c37551a9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_comple_cb3fe587b1a6d33b92ac8030c37551a9"}, "created_at": 1754287422.082942, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_comple_cb3fe587b1a6d33b92ac8030c37551a9\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "termination_reason", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Completed", "OOMKilled", "Error", "StartError"], "column_name": "termination_reason", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation.a29772cf7e": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_comple_ded1a8fa4fffbf35d1ddbe8b2c957685.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation.a29772cf7e", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation"], "alias": "accepted_values_stg_k8s_comple_ded1a8fa4fffbf35d1ddbe8b2c957685", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_comple_ded1a8fa4fffbf35d1ddbe8b2c957685", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_comple_ded1a8fa4fffbf35d1ddbe8b2c957685"}, "created_at": 1754287422.085686, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_comple_ded1a8fa4fffbf35d1ddbe8b2c957685\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_service", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["NA", "advanced_analytics", "dagster_poc_default", "data_integration", "data_platform", "first_allocation", "internal", "optimization", "platform", "replenishment", "store_transfers", "storetransfer", "storetransfers", "forecast", "monitoring", "size_curves", "explainability", "firstallocation"], "column_name": "label_service", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting.b62849f9df": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_comple_4eb221e930f3d29eef19357b65c9939f.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting.b62849f9df", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting"], "alias": "accepted_values_stg_k8s_comple_4eb221e930f3d29eef19357b65c9939f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_comple_4eb221e930f3d29eef19357b65c9939f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_comple_4eb221e930f3d29eef19357b65c9939f"}, "created_at": 1754287422.091073, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_comple_4eb221e930f3d29eef19357b65c9939f\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_module", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["storetransfer", "optimization", "integrations", "replenishment", "my_module", "storetransfers", "forecast_store_product", "okta", "module_name", "nxops", "k8s_usage_reports", "kron", "engineering_portal", "size_curves", "internal_tools", "forecast_validation", "forecast", "backend", "firstallocation", "internal_reporting"], "column_name": "label_module", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp.0bd9bada41": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_comple_0b2006b5028daff9b310d0afa69094c7.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp.0bd9bada41", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp"], "alias": "accepted_values_stg_k8s_comple_0b2006b5028daff9b310d0afa69094c7", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_comple_0b2006b5028daff9b310d0afa69094c7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_comple_0b2006b5028daff9b310d0afa69094c7"}, "created_at": 1754287422.09532, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_comple_0b2006b5028daff9b310d0afa69094c7\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_submodule", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["my_submodule", "replenishment", "engine", "dio_daily", "optimization_pipelines", "scheduled_tools", "replenishment_data_pieplines", "storetransfers_data_pipelines", "kron", "reports", "replenishment_data_pipelines", "auth_updater", "docusaurus", "export_job", "customization", "backtests", "model_train", "store_product_inference", "training", "traning", "pylarms", "features", "others", "fact_table", "inferece", "validation", "size_curves", "nx_job_orchestraptor", "nx_job_orchestrator", "inference", "firstallocation_data_pipelines", "firstallocation", "dbt_execution", "msoapp"], "column_name": "label_submodule", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production.4573fdfa76": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_stg_k8s_comple_1acccce94fad4ccba0d999c4bdd72ae9.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production.4573fdfa76", "fqn": ["nextail", "costs", "costs_staging", "k8s", "accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production"], "alias": "accepted_values_stg_k8s_comple_1acccce94fad4ccba0d999c4bdd72ae9", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_stg_k8s_comple_1acccce94fad4ccba0d999c4bdd72ae9", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_stg_k8s_comple_1acccce94fad4ccba0d999c4bdd72ae9"}, "created_at": 1754287422.102108, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_stg_k8s_comple_1acccce94fad4ccba0d999c4bdd72ae9\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_environment", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["env.sbx", "sandbox", "production"], "column_name": "label_environment", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_label_controller_uid.cbf0680a73": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_label_controller_uid", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_label_controller_uid.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_label_controller_uid.cbf0680a73", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_label_controller_uid"], "alias": "not_null_stg_k8s_completed_jobs_all_label_controller_uid", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.104819, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_controller_uid", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "label_controller_uid", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name.cac80ce68a": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_job_996ab35959184803cec62e1d9dbe6571.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name.cac80ce68a", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name"], "alias": "not_null_stg_k8s_completed_job_996ab35959184803cec62e1d9dbe6571", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_k8s_completed_job_996ab35959184803cec62e1d9dbe6571", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_stg_k8s_completed_job_996ab35959184803cec62e1d9dbe6571"}, "created_at": 1754287422.105521, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_k8s_completed_job_996ab35959184803cec62e1d9dbe6571\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_batch_kubernetes_io_job_name", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "label_batch_kubernetes_io_job_name", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_label_job_name.bbad8c6ee0": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_label_job_name", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_jobs_all_label_job_name.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_label_job_name.bbad8c6ee0", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_label_job_name"], "alias": "not_null_stg_k8s_completed_jobs_all_label_job_name", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.106186, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_job_name", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "label_job_name", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid.1c19f8fc25": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_k8s_completed_job_00792c361332d0f0bef99a69d6882ff7.sql", "original_file_path": "models/costs/costs_staging/k8s/_stg_k8s_completed_jobs_all_tests.yml", "unique_id": "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid.1c19f8fc25", "fqn": ["nextail", "costs", "costs_staging", "k8s", "not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid"], "alias": "not_null_stg_k8s_completed_job_00792c361332d0f0bef99a69d6882ff7", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_k8s_completed_job_00792c361332d0f0bef99a69d6882ff7", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_stg_k8s_completed_job_00792c361332d0f0bef99a69d6882ff7"}, "created_at": 1754287422.1068559, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_k8s_completed_job_00792c361332d0f0bef99a69d6882ff7\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_k8s_completed_jobs_all", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_k8s_completed_jobs_all"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "label_batch_kubernetes_io_controller_uid", "file_key_name": "models.stg_k8s_completed_jobs_all", "attached_node": "model.nextail.stg_k8s_completed_jobs_all", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "label_batch_kubernetes_io_controller_uid", "model": "{{ get_where_subquery(ref('stg_k8s_completed_jobs_all')) }}"}, "namespace": null}}, "test.nextail.unique_stg_query_history_query_id.74ccf61b82": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "unique_stg_query_history_query_id", "resource_type": "test", "package_name": "nextail", "path": "unique_stg_query_history_query_id.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_history_tests.yml", "unique_id": "test.nextail.unique_stg_query_history_query_id.74ccf61b82", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "unique_stg_query_history_query_id"], "alias": "unique_stg_query_history_query_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.108119, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_query_history", "attached_node": "model.nextail.stg_query_history", "test_metadata": {"name": "unique", "kwargs": {"column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_query_history')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_query_history_query_id.a5f2833a4b": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_query_history_query_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_query_history_query_id.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_history_tests.yml", "unique_id": "test.nextail.not_null_stg_query_history_query_id.a5f2833a4b", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "not_null_stg_query_history_query_id"], "alias": "not_null_stg_query_history_query_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.108843, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_query_history", "attached_node": "model.nextail.stg_query_history", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_query_history')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_query_history_start_time.4a08e6a4d1": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_query_history_start_time", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_query_history_start_time.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_history_tests.yml", "unique_id": "test.nextail.not_null_stg_query_history_start_time.4a08e6a4d1", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "not_null_stg_query_history_start_time"], "alias": "not_null_stg_query_history_start_time", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.109511, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_time", "file_key_name": "models.stg_query_history", "attached_node": "model.nextail.stg_query_history", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_time", "model": "{{ get_where_subquery(ref('stg_query_history')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_query_history_credits_attributed_compute.c359bf819d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_query_history_credits_attributed_compute", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_query_history_credits_attributed_compute.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_history_tests.yml", "unique_id": "test.nextail.not_null_stg_query_history_credits_attributed_compute.c359bf819d", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "not_null_stg_query_history_credits_attributed_compute"], "alias": "not_null_stg_query_history_credits_attributed_compute", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.1101692, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "credits_attributed_compute", "file_key_name": "models.stg_query_history", "attached_node": "model.nextail.stg_query_history", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "credits_attributed_compute", "model": "{{ get_where_subquery(ref('stg_query_history')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_recency_stg_query_history_minutes__start_time__30.1e16695958": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_recency_stg_query_history_minutes__start_time__30", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_recency_stg_query_history_minutes__start_time__30.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_history_tests.yml", "unique_id": "test.nextail.dbt_utils_recency_stg_query_history_minutes__start_time__30.1e16695958", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "dbt_utils_recency_stg_query_history_minutes__start_time__30"], "alias": "dbt_utils_recency_stg_query_history_minutes__start_time__30", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": false, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.110843, "relation_name": null, "raw_code": "{{ dbt_utils.test_recency(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_recency", "macro.dbt.get_where_subquery"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.stg_query_history", "attached_node": "model.nextail.stg_query_history", "test_metadata": {"name": "recency", "kwargs": {"datepart": "minutes", "field": "start_time", "interval": 30, "model": "{{ get_where_subquery(ref('stg_query_history')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.unique_stg_query_attribution_history_query_id.f3327a751a": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "unique_stg_query_attribution_history_query_id", "resource_type": "test", "package_name": "nextail", "path": "unique_stg_query_attribution_history_query_id.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_attribution_history_tests.yml", "unique_id": "test.nextail.unique_stg_query_attribution_history_query_id.f3327a751a", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "unique_stg_query_attribution_history_query_id"], "alias": "unique_stg_query_attribution_history_query_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.113388, "relation_name": null, "raw_code": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_unique"], "nodes": ["model.nextail.stg_query_attribution_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_query_attribution_history", "attached_node": "model.nextail.stg_query_attribution_history", "test_metadata": {"name": "unique", "kwargs": {"column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_query_attribution_history')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_query_attribution_history_query_id.be90035352": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_query_attribution_history_query_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_query_attribution_history_query_id.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_attribution_history_tests.yml", "unique_id": "test.nextail.not_null_stg_query_attribution_history_query_id.be90035352", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "not_null_stg_query_attribution_history_query_id"], "alias": "not_null_stg_query_attribution_history_query_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.114054, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_query_attribution_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "query_id", "file_key_name": "models.stg_query_attribution_history", "attached_node": "model.nextail.stg_query_attribution_history", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "query_id", "model": "{{ get_where_subquery(ref('stg_query_attribution_history')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_query_attribution_history_start_time.a470d62126": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_query_attribution_history_start_time", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_query_attribution_history_start_time.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_attribution_history_tests.yml", "unique_id": "test.nextail.not_null_stg_query_attribution_history_start_time.a470d62126", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "not_null_stg_query_attribution_history_start_time"], "alias": "not_null_stg_query_attribution_history_start_time", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.114697, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_query_attribution_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_time", "file_key_name": "models.stg_query_attribution_history", "attached_node": "model.nextail.stg_query_attribution_history", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_time", "model": "{{ get_where_subquery(ref('stg_query_attribution_history')) }}"}, "namespace": null}}, "test.nextail.not_null_stg_query_attribution_history_credits_attributed_compute.b22075fe48": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_stg_query_attribution_history_credits_attributed_compute", "resource_type": "test", "package_name": "nextail", "path": "not_null_stg_query_attribution_0dd3e8699c8821b9c69b796ac501c72d.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_attribution_history_tests.yml", "unique_id": "test.nextail.not_null_stg_query_attribution_history_credits_attributed_compute.b22075fe48", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "not_null_stg_query_attribution_history_credits_attributed_compute"], "alias": "not_null_stg_query_attribution_0dd3e8699c8821b9c69b796ac501c72d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "not_null_stg_query_attribution_0dd3e8699c8821b9c69b796ac501c72d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "not_null_stg_query_attribution_0dd3e8699c8821b9c69b796ac501c72d"}, "created_at": 1754287422.115343, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(alias=\"not_null_stg_query_attribution_0dd3e8699c8821b9c69b796ac501c72d\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.stg_query_attribution_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "credits_attributed_compute", "file_key_name": "models.stg_query_attribution_history", "attached_node": "model.nextail.stg_query_attribution_history", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "credits_attributed_compute", "model": "{{ get_where_subquery(ref('stg_query_attribution_history')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_recency_stg_query_attribution_history_hour__start_time__36.6dfcb209e4": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_recency_stg_query_attribution_history_hour__start_time__36", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_recency_stg_query_at_8777dba615959428e19513e00e6bba3d.sql", "original_file_path": "models/costs/costs_staging/snowflake/_stg_query_attribution_history_tests.yml", "unique_id": "test.nextail.dbt_utils_recency_stg_query_attribution_history_hour__start_time__36.6dfcb209e4", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "dbt_utils_recency_stg_query_attribution_history_hour__start_time__36"], "alias": "dbt_utils_recency_stg_query_at_8777dba615959428e19513e00e6bba3d", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_recency_stg_query_at_8777dba615959428e19513e00e6bba3d", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_recency_stg_query_at_8777dba615959428e19513e00e6bba3d"}, "created_at": 1754287422.116271, "relation_name": null, "raw_code": "{{ dbt_utils.test_recency(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_recency_stg_query_at_8777dba615959428e19513e00e6bba3d\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_query_attribution_history", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_recency", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.stg_query_attribution_history"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": null, "file_key_name": "models.stg_query_attribution_history", "attached_node": "model.nextail.stg_query_attribution_history", "test_metadata": {"name": "recency", "kwargs": {"datepart": "hour", "field": "start_time", "interval": 36, "model": "{{ get_where_subquery(ref('stg_query_attribution_history')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_start_date.44a7a0c588": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_start_date", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_start_date.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_start_date.44a7a0c588", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_start_date"], "alias": "not_null_k8s_snowflake_costs_by_date_label_start_date", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.121141, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "start_date", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "start_date", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_service.6e2f9c90b2": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_service", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_service.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_service.6e2f9c90b2", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_service"], "alias": "not_null_k8s_snowflake_costs_by_date_label_service", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.121842, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "service", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "service", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1.cdac12762d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_k8s_snowflake__b7ebc53609116e7ee7c37c45ebfac7b2.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1.cdac12762d", "fqn": ["nextail", "costs", "costs_gold", "accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1"], "alias": "accepted_values_k8s_snowflake__b7ebc53609116e7ee7c37c45ebfac7b2", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_k8s_snowflake__b7ebc53609116e7ee7c37c45ebfac7b2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_k8s_snowflake__b7ebc53609116e7ee7c37c45ebfac7b2"}, "created_at": 1754287422.122547, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_k8s_snowflake__b7ebc53609116e7ee7c37c45ebfac7b2\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "service", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["advanced_analytics", "advance_analytics", "dagster_poc_default", "data_integration", "data_platform", "first_allocation", "internal", "NA", "optimization", "platform", "replenishment", "store_transfers", "storetransfer", "storetransfers", "forecast", "monitoring", "size_curves", "mobileapp", "replenishments", "desktopapp", "app", "data_services", "textil", "explainability", "dbt", "firstallocation", "service1"], "column_name": "service", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_module.579a56c03a": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_module", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_module.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_module.579a56c03a", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_module"], "alias": "not_null_k8s_snowflake_costs_by_date_label_module", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.1262069, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "module", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "module", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_submodule.a7e8baa0ca": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_submodule", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_submodule.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_submodule.a7e8baa0ca", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_submodule"], "alias": "not_null_k8s_snowflake_costs_by_date_label_submodule", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.126889, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "submodule", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "submodule", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_operation.e59575f31a": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_operation", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_operation.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_operation.e59575f31a", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_operation"], "alias": "not_null_k8s_snowflake_costs_by_date_label_operation", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.1276438, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "operation", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "operation", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_tenant.bd227e2e47": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_tenant", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_tenant.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_tenant.bd227e2e47", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_tenant"], "alias": "not_null_k8s_snowflake_costs_by_date_label_tenant", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.128463, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "tenant", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "tenant", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_environment.bdaa6b6090": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_environment", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_environment.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_environment.bdaa6b6090", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_environment"], "alias": "not_null_k8s_snowflake_costs_by_date_label_environment", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.1291468, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "environment", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "environment", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development.8448bb726d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development", "resource_type": "test", "package_name": "nextail", "path": "accepted_values_k8s_snowflake__6caa4118c7d829ab7ceb4d4cfa056e62.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development.8448bb726d", "fqn": ["nextail", "costs", "costs_gold", "accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development"], "alias": "accepted_values_k8s_snowflake__6caa4118c7d829ab7ceb4d4cfa056e62", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "accepted_values_k8s_snowflake__6caa4118c7d829ab7ceb4d4cfa056e62", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "accepted_values_k8s_snowflake__6caa4118c7d829ab7ceb4d4cfa056e62"}, "created_at": 1754287422.12983, "relation_name": null, "raw_code": "{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias=\"accepted_values_k8s_snowflake__6caa4118c7d829ab7ceb4d4cfa056e62\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "environment", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["sandbox", "NA", "production", "test", "env.sbx", "dev", "development"], "column_name": "environment", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.not_null_k8s_snowflake_costs_by_date_label_correlation_id.0a0887e973": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "not_null_k8s_snowflake_costs_by_date_label_correlation_id", "resource_type": "test", "package_name": "nextail", "path": "not_null_k8s_snowflake_costs_by_date_label_correlation_id.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.not_null_k8s_snowflake_costs_by_date_label_correlation_id.0a0887e973", "fqn": ["nextail", "costs", "costs_gold", "not_null_k8s_snowflake_costs_by_date_label_correlation_id"], "alias": "not_null_k8s_snowflake_costs_by_date_label_correlation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {}, "created_at": 1754287422.132351, "relation_name": null, "raw_code": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.test_not_null"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "correlation_id", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "correlation_id", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": null}}, "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0.1119874e61": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_expression_is_true_k_ac224cf8a344e0f3708360c5f7eed218.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0.1119874e61", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0"], "alias": "dbt_utils_expression_is_true_k_ac224cf8a344e0f3708360c5f7eed218", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_k_ac224cf8a344e0f3708360c5f7eed218", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_expression_is_true_k_ac224cf8a344e0f3708360c5f7eed218"}, "created_at": 1754287422.133017, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_k_ac224cf8a344e0f3708360c5f7eed218\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "snowflake_no_queries", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "expression_is_true", "kwargs": {"expression": ">= 0", "column_name": "snowflake_no_queries", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0.b9fa177dd4": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_expression_is_true_k_87e4b49cac077dbf66413045468e50a3.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0.b9fa177dd4", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0"], "alias": "dbt_utils_expression_is_true_k_87e4b49cac077dbf66413045468e50a3", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_k_87e4b49cac077dbf66413045468e50a3", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_expression_is_true_k_87e4b49cac077dbf66413045468e50a3"}, "created_at": 1754287422.1354141, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_k_87e4b49cac077dbf66413045468e50a3\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "snowflake_total_query_duration_ms", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "expression_is_true", "kwargs": {"expression": ">= 0", "column_name": "snowflake_total_query_duration_ms", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0.0966e3543f": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_expression_is_true_k_56190f085364640d34ebe1cbb4461627.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0.0966e3543f", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0"], "alias": "dbt_utils_expression_is_true_k_56190f085364640d34ebe1cbb4461627", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_k_56190f085364640d34ebe1cbb4461627", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_expression_is_true_k_56190f085364640d34ebe1cbb4461627"}, "created_at": 1754287422.137755, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_k_56190f085364640d34ebe1cbb4461627\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "snowflake_total_credits", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "expression_is_true", "kwargs": {"expression": ">= 0", "column_name": "snowflake_total_credits", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0.df81e301fb": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_accepted_range_k8s_s_2d22b90a2febcf01c9074f609f4ede2a.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0.df81e301fb", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0"], "alias": "dbt_utils_accepted_range_k8s_s_2d22b90a2febcf01c9074f609f4ede2a", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_accepted_range_k8s_s_2d22b90a2febcf01c9074f609f4ede2a", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_accepted_range_k8s_s_2d22b90a2febcf01c9074f609f4ede2a"}, "created_at": 1754287422.139835, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_k8s_s_2d22b90a2febcf01c9074f609f4ede2a\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "snowflake_total_credits", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "max_value": 1000, "column_name": "snowflake_total_credits", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0.1dc32dd315": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_expression_is_true_k_b03afd3441973261ea85cb6af58d735f.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0.1dc32dd315", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0"], "alias": "dbt_utils_expression_is_true_k_b03afd3441973261ea85cb6af58d735f", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_k_b03afd3441973261ea85cb6af58d735f", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_expression_is_true_k_b03afd3441973261ea85cb6af58d735f"}, "created_at": 1754287422.14169, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_k_b03afd3441973261ea85cb6af58d735f\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_no_pod_ids", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "expression_is_true", "kwargs": {"expression": ">= 0", "column_name": "k8s_no_pod_ids", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0.ffbc7c7b6d": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_expression_is_true_k_6635299a0c544e963ae6c9d6bc460315.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0.ffbc7c7b6d", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0"], "alias": "dbt_utils_expression_is_true_k_6635299a0c544e963ae6c9d6bc460315", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_k_6635299a0c544e963ae6c9d6bc460315", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_expression_is_true_k_6635299a0c544e963ae6c9d6bc460315"}, "created_at": 1754287422.143444, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_k_6635299a0c544e963ae6c9d6bc460315\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_total_pods_duration_s", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "expression_is_true", "kwargs": {"expression": ">= 0", "column_name": "k8s_total_pods_duration_s", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0.abf569b70e": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_expression_is_true_k_3d073cd3c8dd3f325cf26018c83299f1.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0.abf569b70e", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0"], "alias": "dbt_utils_expression_is_true_k_3d073cd3c8dd3f325cf26018c83299f1", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_expression_is_true_k_3d073cd3c8dd3f325cf26018c83299f1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_expression_is_true_k_3d073cd3c8dd3f325cf26018c83299f1"}, "created_at": 1754287422.146241, "relation_name": null, "raw_code": "{{ dbt_utils.test_expression_is_true(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_expression_is_true_k_3d073cd3c8dd3f325cf26018c83299f1\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_expectations.test_expression_is_true", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_total_cost", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "expression_is_true", "kwargs": {"expression": ">= 0", "column_name": "k8s_total_cost", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}, "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0.d5f5dad5d0": {"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_dbt_test__audit", "name": "dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0", "resource_type": "test", "package_name": "nextail", "path": "dbt_utils_accepted_range_k8s_s_0708654984ef46e31bead7370914d788.sql", "original_file_path": "models/costs/costs_gold/_k8s_snowflake_costs_by_date_label_tests.yml", "unique_id": "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0.d5f5dad5d0", "fqn": ["nextail", "costs", "costs_gold", "dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0"], "alias": "dbt_utils_accepted_range_k8s_s_0708654984ef46e31bead7370914d788", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": "dbt_utils_accepted_range_k8s_s_0708654984ef46e31bead7370914d788", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "store_failures_as": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"alias": "dbt_utils_accepted_range_k8s_s_0708654984ef46e31bead7370914d788"}, "created_at": 1754287422.148221, "relation_name": null, "raw_code": "{{ dbt_utils.test_accepted_range(**_dbt_generic_test_kwargs) }}{{ config(alias=\"dbt_utils_accepted_range_k8s_s_0708654984ef46e31bead7370914d788\") }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "k8s_snowflake_costs_by_date_label", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt_utils.test_accepted_range", "macro.dbt.get_where_subquery"], "nodes": ["model.nextail.k8s_snowflake_costs_by_date_label"]}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "column_name": "k8s_total_cost", "file_key_name": "models.k8s_snowflake_costs_by_date_label", "attached_node": "model.nextail.k8s_snowflake_costs_by_date_label", "test_metadata": {"name": "accepted_range", "kwargs": {"min_value": 0, "max_value": 10000, "column_name": "k8s_total_cost", "model": "{{ get_where_subquery(ref('k8s_snowflake_costs_by_date_label')) }}"}, "namespace": "dbt_utils"}}}, "sources": {"source.nextail.snowflake.query_history": {"database": "snowflake", "schema": "account_usage", "name": "query_history", "resource_type": "source", "package_name": "nextail", "path": "models/costs/costs_staging/__sources.yml", "original_file_path": "models/costs/costs_staging/__sources.yml", "unique_id": "source.nextail.snowflake.query_history", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "query_history"], "source_name": "snowflake", "source_description": "Snowflake's system tables", "loader": "", "identifier": "query_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Snowflake's system query table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "snowflake.account_usage.query_history", "created_at": 1754287422.2654772, "unrendered_database": "snowflake", "unrendered_schema": "account_usage", "doc_blocks": []}, "source.nextail.snowflake.query_attribution_history": {"database": "snowflake", "schema": "account_usage", "name": "query_attribution_history", "resource_type": "source", "package_name": "nextail", "path": "models/costs/costs_staging/__sources.yml", "original_file_path": "models/costs/costs_staging/__sources.yml", "unique_id": "source.nextail.snowflake.query_attribution_history", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "query_attribution_history"], "source_name": "snowflake", "source_description": "Snowflake's system tables", "loader": "", "identifier": "query_attribution_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "Snowflake's system query history with credits attribution column.", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "snowflake.account_usage.query_attribution_history", "created_at": 1754287422.26628, "unrendered_database": "snowflake", "unrendered_schema": "account_usage", "doc_blocks": []}, "source.nextail.completed_jobs.completed_jobs_prod": {"database": "alltenants_costmonitor_allenvs_db", "schema": "k8s_private", "name": "completed_jobs_prod", "resource_type": "source", "package_name": "nextail", "path": "models/costs/costs_staging/__sources.yml", "original_file_path": "models/costs/costs_staging/__sources.yml", "unique_id": "source.nextail.completed_jobs.completed_jobs_prod", "fqn": ["nextail", "costs", "costs_staging", "completed_jobs", "completed_jobs_prod"], "source_name": "completed_jobs", "source_description": "kubecost-related tables", "loader": "", "identifier": "completed_jobs_prod", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "kubecost's cost table for production k8s", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "alltenants_costmonitor_allenvs_db.k8s_private.completed_jobs_prod", "created_at": 1754287422.266525, "unrendered_database": "alltenants_costmonitor_allenvs_db", "unrendered_schema": "k8s_private", "doc_blocks": []}, "source.nextail.completed_jobs.completed_jobs_sandbox": {"database": "alltenants_costmonitor_allenvs_db", "schema": "k8s_private", "name": "completed_jobs_sandbox", "resource_type": "source", "package_name": "nextail", "path": "models/costs/costs_staging/__sources.yml", "original_file_path": "models/costs/costs_staging/__sources.yml", "unique_id": "source.nextail.completed_jobs.completed_jobs_sandbox", "fqn": ["nextail", "costs", "costs_staging", "completed_jobs", "completed_jobs_sandbox"], "source_name": "completed_jobs", "source_description": "kubecost-related tables", "loader": "", "identifier": "completed_jobs_sandbox", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "kubecost's cost table for sandbox k8s", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "alltenants_costmonitor_allenvs_db.k8s_private.completed_jobs_sandbox", "created_at": 1754287422.266758, "unrendered_database": "alltenants_costmonitor_allenvs_db", "unrendered_schema": "k8s_private", "doc_blocks": []}, "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_pro": {"database": "alltenants_costmonitor_allenvs_db", "schema": "public", "name": "kubecost_cumulative_cost_by_pod_pro", "resource_type": "source", "package_name": "nextail", "path": "models/costs/costs_staging/__sources.yml", "original_file_path": "models/costs/costs_staging/__sources.yml", "unique_id": "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_pro", "fqn": ["nextail", "costs", "costs_staging", "kubecost", "kubecost_cumulative_cost_by_pod_pro"], "source_name": "kubecost", "source_description": "kubecost-related tables", "loader": "", "identifier": "kubecost_cumulative_cost_by_pod_pro", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "kubecost's cost table for production k8s", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "alltenants_costmonitor_allenvs_db.public.kubecost_cumulative_cost_by_pod_pro", "created_at": 1754287422.266985, "unrendered_database": "alltenants_costmonitor_allenvs_db", "unrendered_schema": "public", "doc_blocks": []}, "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_sandbox": {"database": "alltenants_costmonitor_allenvs_db", "schema": "public", "name": "kubecost_cumulative_cost_by_pod_sandbox", "resource_type": "source", "package_name": "nextail", "path": "models/costs/costs_staging/__sources.yml", "original_file_path": "models/costs/costs_staging/__sources.yml", "unique_id": "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_sandbox", "fqn": ["nextail", "costs", "costs_staging", "kubecost", "kubecost_cumulative_cost_by_pod_sandbox"], "source_name": "kubecost", "source_description": "kubecost-related tables", "loader": "", "identifier": "kubecost_cumulative_cost_by_pod_sandbox", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "kubecost's cost table for sandbox k8s", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "alltenants_costmonitor_allenvs_db.public.kubecost_cumulative_cost_by_pod_sandbox", "created_at": 1754287422.267207, "unrendered_database": "alltenants_costmonitor_allenvs_db", "unrendered_schema": "public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.admin_users": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "admin_users"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.267427, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.first_allocation_execution": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "first_allocation_execution"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.267643, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.category": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.category", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "category"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.category", "created_at": 1754287422.267859, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.category_item_included": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "category_item_included"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.268076, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.products": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.products", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "products"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.products", "created_at": 1754287422.26829, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.product_history": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "product_history"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.268506, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.stores": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.stores", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "stores"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.268723, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.families": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.families", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "families"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.families", "created_at": 1754287422.269098, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.cron": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.cron", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "cron"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.269381, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.buy_execution": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "buy_execution"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.2696278, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.dio_execution_selected": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "dio_execution_selected"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.2698581, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.engine_executions": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "engine_executions"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.270088, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.preconfigured_execution": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "preconfigured_execution"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.2704, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.reorder_execution": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "reorder_execution"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.270677, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.replenishment_executions": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "replenishment_executions"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.270911, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_executions": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "store_transfers_executions"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.271134, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_execution_aggregates": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.2713542, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.store_stock_items": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "store_stock_items"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.27157, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.scenario": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "scenario"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.2717829, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.warehouses": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "warehouses"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.271996, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.skus": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.skus", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "skus"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.272244, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.seasons": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "seasons"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.272456, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.sales": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.sales", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "sales"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.272671, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.warehouse_stock_items": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "warehouse_stock_items"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.272883, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ARISTOCRAZY_globaldomain_public.databasechangelog": {"database": "ARISTOCRAZY_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ARISTOCRAZY_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ARISTOCRAZY_globaldomain_public", "databasechangelog"], "source_name": "ARISTOCRAZY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ARISTOCRAZY_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.2730958, "unrendered_database": "ARISTOCRAZY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.admin_users": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "admin_users"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.273309, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.first_allocation_execution": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "first_allocation_execution"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.273522, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.category": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.category", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "category"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.category", "created_at": 1754287422.2737339, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.category_item_included": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "category_item_included"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.273946, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.products": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.products", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "products"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.products", "created_at": 1754287422.274158, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.product_history": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.product_history", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "product_history"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.274372, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.stores": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.stores", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "stores"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.274584, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.families": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.families", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "families"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.families", "created_at": 1754287422.274797, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.cron": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.cron", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "cron"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.275009, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.buy_execution": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "buy_execution"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.275222, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.dio_execution_selected": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "dio_execution_selected"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.275434, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.engine_executions": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "engine_executions"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.275646, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.preconfigured_execution": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "preconfigured_execution"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.275858, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.reorder_execution": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "reorder_execution"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.2761998, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.replenishment_executions": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "replenishment_executions"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.276449, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.store_transfers_executions": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "store_transfers_executions"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.2766669, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.store_transfers_execution_aggregates": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.276885, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.store_stock_items": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "store_stock_items"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.277102, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.scenario": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.scenario", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "scenario"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.277317, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.warehouses": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "warehouses"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.279155, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.skus": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.skus", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "skus"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.279387, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.seasons": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.seasons", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "seasons"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.279702, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.sales": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.sales", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "sales"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.279927, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.warehouse_stock_items": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "warehouse_stock_items"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.2801359, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BIMANI_globaldomain_public.databasechangelog": {"database": "BIMANI_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BIMANI_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "BIMANI_globaldomain_public", "databasechangelog"], "source_name": "BIMANI_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BIMANI_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.28035, "unrendered_database": "BIMANI_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.admin_users": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "admin_users"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.2805572, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.first_allocation_execution": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "first_allocation_execution"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.2807622, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.category": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.category", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "category"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.category", "created_at": 1754287422.280968, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.category_item_included": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "category_item_included"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.2811809, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.products": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.products", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "products"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.products", "created_at": 1754287422.281395, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.product_history": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.product_history", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "product_history"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.281607, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.stores": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.stores", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "stores"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.2818182, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.families": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.families", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "families"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.families", "created_at": 1754287422.28203, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.cron": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.cron", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "cron"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.282242, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.buy_execution": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "buy_execution"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.282454, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.dio_execution_selected": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "dio_execution_selected"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.282666, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.engine_executions": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "engine_executions"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.282877, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.preconfigured_execution": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "preconfigured_execution"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.2830899, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.reorder_execution": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "reorder_execution"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.283443, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.replenishment_executions": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "replenishment_executions"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.283672, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.store_transfers_executions": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "store_transfers_executions"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.283892, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.store_transfers_execution_aggregates": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.28411, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.store_stock_items": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "store_stock_items"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.2843251, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.scenario": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.scenario", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "scenario"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.2845418, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.warehouses": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "warehouses"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.284755, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.skus": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.skus", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "skus"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.285119, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.seasons": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.seasons", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "seasons"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.285376, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.sales": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.sales", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "sales"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.2856488, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.warehouse_stock_items": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "warehouse_stock_items"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.2859259, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.BZB_globaldomain_public.databasechangelog": {"database": "BZB_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.BZB_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "BZB_globaldomain_public", "databasechangelog"], "source_name": "BZB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "BZB_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.286161, "unrendered_database": "BZB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.admin_users": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "admin_users"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.2863832, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.first_allocation_execution": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "first_allocation_execution"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.286604, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.category": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.category", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "category"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.category", "created_at": 1754287422.287029, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.category_item_included": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "category_item_included"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.28729, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.products": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.products", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "products"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.products", "created_at": 1754287422.287552, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.product_history": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.product_history", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "product_history"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.287817, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.stores": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.stores", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "stores"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.2881038, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.families": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.families", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "families"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.families", "created_at": 1754287422.288366, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.cron": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.cron", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "cron"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.2887418, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.buy_execution": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "buy_execution"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.2889988, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.dio_execution_selected": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "dio_execution_selected"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.289222, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.engine_executions": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "engine_executions"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.289519, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.preconfigured_execution": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "preconfigured_execution"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.289762, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.reorder_execution": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "reorder_execution"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.289999, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.replenishment_executions": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "replenishment_executions"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.290277, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.store_transfers_executions": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "store_transfers_executions"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.290553, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.store_transfers_execution_aggregates": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.290773, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.store_stock_items": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "store_stock_items"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.2909892, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.scenario": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.scenario", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "scenario"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.291203, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.warehouses": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "warehouses"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.2914171, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.skus": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.skus", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "skus"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.29163, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.seasons": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.seasons", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "seasons"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.2918441, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.sales": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.sales", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "sales"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.292091, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.warehouse_stock_items": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "warehouse_stock_items"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.292307, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.CALLIOPE_globaldomain_public.databasechangelog": {"database": "CALLIOPE_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.CALLIOPE_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "CALLIOPE_globaldomain_public", "databasechangelog"], "source_name": "CALLIOPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "CALLIOPE_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.292514, "unrendered_database": "CALLIOPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.admin_users": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "admin_users"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.292724, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.first_allocation_execution": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "first_allocation_execution"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.2929332, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.category": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.category", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "category"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.category", "created_at": 1754287422.293141, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.category_item_included": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "category_item_included"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.293352, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.products": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.products", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "products"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.products", "created_at": 1754287422.293563, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.product_history": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.product_history", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "product_history"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.293769, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.stores": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.stores", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "stores"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.294229, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.families": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.families", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "families"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.families", "created_at": 1754287422.294465, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.cron": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.cron", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "cron"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.294688, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.buy_execution": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "buy_execution"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.294913, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.dio_execution_selected": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "dio_execution_selected"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.295131, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.engine_executions": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "engine_executions"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.29535, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.preconfigured_execution": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "preconfigured_execution"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.295564, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.reorder_execution": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "reorder_execution"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.295983, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.replenishment_executions": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "replenishment_executions"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.296345, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.store_transfers_executions": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "store_transfers_executions"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.296623, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.store_transfers_execution_aggregates": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.296857, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.store_stock_items": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "store_stock_items"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.297081, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.scenario": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.scenario", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "scenario"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.297298, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.warehouses": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "warehouses"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.297536, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.skus": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.skus", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "skus"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.298049, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.seasons": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.seasons", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "seasons"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.29828, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.sales": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.sales", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "sales"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.298499, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.warehouse_stock_items": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "warehouse_stock_items"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.2987149, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DCK_globaldomain_public.databasechangelog": {"database": "DCK_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DCK_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "DCK_globaldomain_public", "databasechangelog"], "source_name": "DCK_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DCK_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.298926, "unrendered_database": "DCK_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.admin_users": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "admin_users"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.299137, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.first_allocation_execution": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "first_allocation_execution"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.299343, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.category": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.category", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "category"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.category", "created_at": 1754287422.299555, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.category_item_included": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "category_item_included"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.299805, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.products": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.products", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "products"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.products", "created_at": 1754287422.300065, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.product_history": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.product_history", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "product_history"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.300298, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.stores": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.stores", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "stores"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.300595, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.families": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.families", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "families"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.families", "created_at": 1754287422.300898, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.cron": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.cron", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "cron"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.301213, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.buy_execution": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "buy_execution"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.30143, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.dio_execution_selected": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "dio_execution_selected"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.3016489, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.engine_executions": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "engine_executions"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.301941, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.preconfigured_execution": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "preconfigured_execution"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.302159, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.reorder_execution": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "reorder_execution"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.302378, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.replenishment_executions": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "replenishment_executions"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.302592, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.store_transfers_executions": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "store_transfers_executions"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.302808, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.store_transfers_execution_aggregates": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.303023, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.store_stock_items": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "store_stock_items"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.303235, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.scenario": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.scenario", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "scenario"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.30345, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.warehouses": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "warehouses"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.303663, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.skus": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.skus", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "skus"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.30389, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.seasons": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.seasons", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "seasons"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.304106, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.sales": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.sales", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "sales"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.304319, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.warehouse_stock_items": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "warehouse_stock_items"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.304533, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.DUB_globaldomain_public.databasechangelog": {"database": "DUB_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.DUB_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "DUB_globaldomain_public", "databasechangelog"], "source_name": "DUB_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "DUB_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.304748, "unrendered_database": "DUB_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.admin_users": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "admin_users"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.304961, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.first_allocation_execution": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "first_allocation_execution"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.305173, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "category"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.category", "created_at": 1754287422.3053849, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category_item_included": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "category_item_included"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.305599, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.products": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.products", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "products"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.products", "created_at": 1754287422.305814, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.product_history": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "product_history"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.306031, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.stores": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "stores"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.3062441, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.families": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.families", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "families"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.families", "created_at": 1754287422.306457, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.cron": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "cron"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.306672, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.buy_execution": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "buy_execution"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.306886, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.dio_execution_selected": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "dio_execution_selected"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.3070982, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.engine_executions": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "engine_executions"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.307311, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.preconfigured_execution": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "preconfigured_execution"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.3075259, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.reorder_execution": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "reorder_execution"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.307744, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.replenishment_executions": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "replenishment_executions"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.307956, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_executions": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "store_transfers_executions"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.30817, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.308383, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_stock_items": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "store_stock_items"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.308597, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.scenario": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "scenario"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.308816, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouses": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "warehouses"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.309036, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.skus": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "skus"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.309258, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.seasons": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "seasons"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.309481, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.sales": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "sales"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.3097038, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouse_stock_items": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "warehouse_stock_items"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.309929, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIBOLSOSMMEE_globaldomain_public.databasechangelog": {"database": "ECIBOLSOSMMEE_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIBOLSOSMMEE_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECIBOLSOSMMEE_globaldomain_public", "databasechangelog"], "source_name": "ECIBOLSOSMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIBOLSOSMMEE_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.310148, "unrendered_database": "ECIBOLSOSMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.admin_users": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "admin_users"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.310417, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.first_allocation_execution": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "first_allocation_execution"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.310658, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "category"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.category", "created_at": 1754287422.310889, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category_item_included": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "category_item_included"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.311114, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.products": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.products", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "products"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.products", "created_at": 1754287422.31133, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.product_history": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "product_history"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.311551, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.stores": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "stores"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.3117728, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.families": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.families", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "families"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.families", "created_at": 1754287422.3119948, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.cron": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "cron"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.312209, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.buy_execution": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "buy_execution"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.312424, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.dio_execution_selected": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "dio_execution_selected"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.312638, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.engine_executions": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "engine_executions"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.312854, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.preconfigured_execution": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "preconfigured_execution"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.31307, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.reorder_execution": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "reorder_execution"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.3132842, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.replenishment_executions": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "replenishment_executions"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.3135, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_executions": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "store_transfers_executions"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.3137228, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.3139699, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_stock_items": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "store_stock_items"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.314191, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.scenario": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "scenario"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.314406, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouses": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "warehouses"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.3146188, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.skus": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "skus"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.314831, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.seasons": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "seasons"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.315043, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.sales": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "sales"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.315257, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouse_stock_items": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "warehouse_stock_items"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.31547, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.databasechangelog": {"database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECICAMISERIACABALLEROMMEE_globaldomain_public", "databasechangelog"], "source_name": "ECICAMISERIACABALLEROMMEE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECICAMISERIACABALLEROMMEE_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.315684, "unrendered_database": "ECICAMISERIACABALLEROMMEE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.admin_users": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "admin_users"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.3158982, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.first_allocation_execution": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "first_allocation_execution"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.3161118, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.category": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.category", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "category"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.category", "created_at": 1754287422.316324, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.category_item_included": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "category_item_included"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.3165371, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.products": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.products", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "products"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.products", "created_at": 1754287422.31675, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.product_history": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "product_history"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.316963, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.stores": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "stores"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.3171751, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.families": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.families", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "families"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.families", "created_at": 1754287422.317394, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.cron": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "cron"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.3176131, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.buy_execution": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "buy_execution"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.317833, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.dio_execution_selected": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "dio_execution_selected"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.318052, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.engine_executions": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "engine_executions"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.318272, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.preconfigured_execution": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "preconfigured_execution"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.3184938, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.reorder_execution": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "reorder_execution"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.3187149, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.replenishment_executions": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "replenishment_executions"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.318938, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_executions": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "store_transfers_executions"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.319158, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.319378, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_stock_items": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "store_stock_items"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.3196, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.scenario": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "scenario"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.3198211, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouses": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "warehouses"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.3200388, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.skus": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "skus"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.32048, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.seasons": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "seasons"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.320704, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.sales": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "sales"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.321005, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouse_stock_items": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "warehouse_stock_items"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.3212311, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIEASYWEARELLA_globaldomain_public.databasechangelog": {"database": "ECIEASYWEARELLA_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIEASYWEARELLA_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECIEASYWEARELLA_globaldomain_public", "databasechangelog"], "source_name": "ECIEASYWEARELLA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIEASYWEARELLA_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.3214889, "unrendered_database": "ECIEASYWEARELLA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.admin_users": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "admin_users"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.32171, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.first_allocation_execution": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "first_allocation_execution"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.32193, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.category": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.category", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "category"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.category", "created_at": 1754287422.322149, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.category_item_included": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "category_item_included"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.322368, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.products": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.products", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "products"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.products", "created_at": 1754287422.322586, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.product_history": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "product_history"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.3228061, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.stores": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "stores"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.323025, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.families": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.families", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "families"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.families", "created_at": 1754287422.323375, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.cron": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "cron"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.323669, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.buy_execution": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "buy_execution"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.3239, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.dio_execution_selected": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "dio_execution_selected"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.324123, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.engine_executions": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "engine_executions"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.324341, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.preconfigured_execution": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "preconfigured_execution"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.324558, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.reorder_execution": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "reorder_execution"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.324773, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.replenishment_executions": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "replenishment_executions"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.3249888, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.store_transfers_executions": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "store_transfers_executions"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.32528, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.3255098, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.store_stock_items": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "store_stock_items"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.325724, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.scenario": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "scenario"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.325938, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.warehouses": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "warehouses"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.326151, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.skus": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "skus"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.326365, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.seasons": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "seasons"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.326581, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.sales": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "sales"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.326794, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.warehouse_stock_items": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "warehouse_stock_items"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.327008, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIGAP_globaldomain_public.databasechangelog": {"database": "ECIGAP_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIGAP_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECIGAP_globaldomain_public", "databasechangelog"], "source_name": "ECIGAP_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIGAP_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.3272278, "unrendered_database": "ECIGAP_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.admin_users": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "admin_users"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.327449, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.first_allocation_execution": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "first_allocation_execution"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.32767, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.category": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.category", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "category"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.category", "created_at": 1754287422.32789, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.category_item_included": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "category_item_included"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.3281121, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.products": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.products", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "products"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.products", "created_at": 1754287422.328324, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.product_history": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "product_history"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.328536, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.stores": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "stores"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.328748, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.families": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.families", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "families"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.families", "created_at": 1754287422.3289669, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.cron": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "cron"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.329185, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.buy_execution": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "buy_execution"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.3294048, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.dio_execution_selected": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "dio_execution_selected"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.3296251, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.engine_executions": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "engine_executions"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.329844, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.preconfigured_execution": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "preconfigured_execution"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.3300638, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.reorder_execution": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "reorder_execution"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.330284, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.replenishment_executions": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "replenishment_executions"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.3307352, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.store_transfers_executions": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "store_transfers_executions"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.331295, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.331559, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.store_stock_items": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "store_stock_items"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.331796, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.scenario": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "scenario"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.332026, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.warehouses": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "warehouses"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.332256, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.skus": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "skus"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.332481, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.seasons": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "seasons"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.332704, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.sales": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "sales"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.333041, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.warehouse_stock_items": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "warehouse_stock_items"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.333363, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIKIDS_globaldomain_public.databasechangelog": {"database": "ECIKIDS_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIKIDS_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECIKIDS_globaldomain_public", "databasechangelog"], "source_name": "ECIKIDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIKIDS_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.3336031, "unrendered_database": "ECIKIDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.admin_users": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "admin_users"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.333834, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.first_allocation_execution": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "first_allocation_execution"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.334502, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.category": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.category", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "category"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.category", "created_at": 1754287422.334953, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.category_item_included": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "category_item_included"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.3352242, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.products": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.products", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "products"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.products", "created_at": 1754287422.33552, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.product_history": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "product_history"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.335754, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.stores": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "stores"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.335982, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.families": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.families", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "families"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.families", "created_at": 1754287422.3362088, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.cron": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "cron"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.336433, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.buy_execution": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "buy_execution"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.336662, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.dio_execution_selected": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "dio_execution_selected"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.336888, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.engine_executions": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "engine_executions"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.3371148, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.preconfigured_execution": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "preconfigured_execution"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.3373382, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.reorder_execution": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "reorder_execution"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.3375602, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.replenishment_executions": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "replenishment_executions"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.337782, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_executions": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "store_transfers_executions"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.338003, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.3382232, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.store_stock_items": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "store_stock_items"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.338445, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.scenario": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "scenario"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.338665, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouses": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "warehouses"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.3388858, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.skus": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "skus"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.339107, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.seasons": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "seasons"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.3393269, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.sales": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "sales"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.33955, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouse_stock_items": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "warehouse_stock_items"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.33977, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECILLOYDSMEN_globaldomain_public.databasechangelog": {"database": "ECILLOYDSMEN_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECILLOYDSMEN_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECILLOYDSMEN_globaldomain_public", "databasechangelog"], "source_name": "ECILLOYDSMEN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECILLOYDSMEN_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.33999, "unrendered_database": "ECILLOYDSMEN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.admin_users": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "admin_users"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.340213, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.first_allocation_execution": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "first_allocation_execution"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.3404381, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "category"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.category", "created_at": 1754287422.340661, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category_item_included": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "category_item_included"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.340886, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.products": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.products", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "products"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.products", "created_at": 1754287422.341107, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.product_history": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "product_history"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.341328, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.stores": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "stores"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.341551, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.families": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.families", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "families"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.families", "created_at": 1754287422.341772, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.cron": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "cron"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.341994, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.buy_execution": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "buy_execution"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.342216, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.dio_execution_selected": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "dio_execution_selected"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.342437, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.engine_executions": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "engine_executions"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.3427641, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.preconfigured_execution": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "preconfigured_execution"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.342988, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.reorder_execution": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "reorder_execution"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.343209, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.replenishment_executions": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "replenishment_executions"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.343429, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_executions": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "store_transfers_executions"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.343652, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.343874, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_stock_items": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "store_stock_items"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.344094, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.scenario": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "scenario"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.3443189, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouses": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "warehouses"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.3445451, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.skus": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "skus"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.344769, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.seasons": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "seasons"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.344992, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.sales": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "sales"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.345213, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouse_stock_items": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "warehouse_stock_items"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.345439, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.databasechangelog": {"database": "ECIZAPATERIASENORAS_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECIZAPATERIASENORAS_globaldomain_public", "databasechangelog"], "source_name": "ECIZAPATERIASENORAS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECIZAPATERIASENORAS_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.34566, "unrendered_database": "ECIZAPATERIASENORAS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.admin_users": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "admin_users"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.3458822, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.first_allocation_execution": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "first_allocation_execution"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.346103, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.category": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.category", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "category"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.category", "created_at": 1754287422.346326, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.category_item_included": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "category_item_included"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.346613, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.products": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.products", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "products"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.products", "created_at": 1754287422.3468668, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.product_history": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "product_history"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.3470988, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.stores": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.stores", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "stores"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.347328, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.families": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.families", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "families"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.families", "created_at": 1754287422.347552, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.cron": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.cron", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "cron"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.347775, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.buy_execution": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "buy_execution"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.348004, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.dio_execution_selected": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "dio_execution_selected"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.34823, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.engine_executions": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "engine_executions"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.348458, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.preconfigured_execution": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "preconfigured_execution"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.348682, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.reorder_execution": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "reorder_execution"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.348908, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.replenishment_executions": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "replenishment_executions"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.349129, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.store_transfers_executions": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "store_transfers_executions"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.349352, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.store_transfers_execution_aggregates": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.3495722, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.store_stock_items": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "store_stock_items"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.349798, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.scenario": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "scenario"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.350019, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.warehouses": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "warehouses"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.350243, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.skus": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.skus", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "skus"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.350483, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.seasons": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "seasons"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.350705, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.sales": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.sales", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "sales"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.35093, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.warehouse_stock_items": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "warehouse_stock_items"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.351151, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ECRU_globaldomain_public.databasechangelog": {"database": "ECRU_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ECRU_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ECRU_globaldomain_public", "databasechangelog"], "source_name": "ECRU_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ECRU_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.35137, "unrendered_database": "ECRU_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.admin_users": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "admin_users"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.351593, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.first_allocation_execution": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "first_allocation_execution"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.3518138, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.category": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.category", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "category"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.category", "created_at": 1754287422.3520372, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.category_item_included": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "category_item_included"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.352258, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.products": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.products", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "products"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.products", "created_at": 1754287422.352479, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.product_history": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.product_history", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "product_history"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.3526988, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.stores": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.stores", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "stores"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.35292, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.families": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.families", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "families"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.families", "created_at": 1754287422.3531399, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.cron": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.cron", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "cron"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.353358, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.buy_execution": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "buy_execution"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.353579, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.dio_execution_selected": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "dio_execution_selected"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.3537998, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.engine_executions": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "engine_executions"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.354018, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.preconfigured_execution": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "preconfigured_execution"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.354239, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.reorder_execution": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "reorder_execution"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.35446, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.replenishment_executions": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "replenishment_executions"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.35468, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.store_transfers_executions": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "store_transfers_executions"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.3549, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.store_transfers_execution_aggregates": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.355121, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.store_stock_items": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "store_stock_items"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.355341, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.scenario": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.scenario", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "scenario"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.355561, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.warehouses": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "warehouses"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.3557818, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.skus": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.skus", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "skus"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.3560052, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.seasons": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.seasons", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "seasons"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.3562298, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.sales": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.sales", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "sales"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.3564548, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.warehouse_stock_items": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "warehouse_stock_items"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.356731, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.ETHNICITY_globaldomain_public.databasechangelog": {"database": "ETHNICITY_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.ETHNICITY_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "ETHNICITY_globaldomain_public", "databasechangelog"], "source_name": "ETHNICITY_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "ETHNICITY_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.356988, "unrendered_database": "ETHNICITY_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.admin_users": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "admin_users"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.357226, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.first_allocation_execution": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "first_allocation_execution"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.357454, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.category": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.category", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "category"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.category", "created_at": 1754287422.3576791, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.category_item_included": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "category_item_included"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.357902, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.products": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.products", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "products"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.products", "created_at": 1754287422.358124, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.product_history": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.product_history", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "product_history"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.358346, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.stores": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.stores", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "stores"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.358567, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.families": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.families", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "families"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.families", "created_at": 1754287422.358788, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.cron": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.cron", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "cron"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.35901, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.buy_execution": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "buy_execution"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.359231, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.dio_execution_selected": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "dio_execution_selected"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.359454, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.engine_executions": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "engine_executions"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.3596742, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.preconfigured_execution": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "preconfigured_execution"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.359898, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.reorder_execution": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "reorder_execution"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.360119, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.replenishment_executions": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "replenishment_executions"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.360341, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_executions": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "store_transfers_executions"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.360561, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_execution_aggregates": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.360783, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.store_stock_items": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "store_stock_items"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.361005, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.scenario": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.scenario", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "scenario"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.361225, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.warehouses": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "warehouses"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.3614469, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.skus": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.skus", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "skus"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.361669, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.seasons": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.seasons", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "seasons"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.361892, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.sales": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.sales", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "sales"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.362111, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.warehouse_stock_items": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "warehouse_stock_items"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.362336, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FLYINGTIGER_globaldomain_public.databasechangelog": {"database": "FLYINGTIGER_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FLYINGTIGER_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "FLYINGTIGER_globaldomain_public", "databasechangelog"], "source_name": "FLYINGTIGER_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FLYINGTIGER_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.36256, "unrendered_database": "FLYINGTIGER_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.admin_users": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "admin_users"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.362784, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.first_allocation_execution": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "first_allocation_execution"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.3630059, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.category": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.category", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "category"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.category", "created_at": 1754287422.363224, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.category_item_included": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "category_item_included"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.363447, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.products": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.products", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "products"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.products", "created_at": 1754287422.363681, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.product_history": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.product_history", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "product_history"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.363918, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.stores": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.stores", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "stores"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.364148, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.families": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.families", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "families"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.families", "created_at": 1754287422.364372, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.cron": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.cron", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "cron"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.364596, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.buy_execution": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "buy_execution"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.364819, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.dio_execution_selected": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "dio_execution_selected"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.365043, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.engine_executions": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "engine_executions"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.365268, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.preconfigured_execution": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "preconfigured_execution"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.365489, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.reorder_execution": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "reorder_execution"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.3657112, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.replenishment_executions": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "replenishment_executions"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.365937, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_executions": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "store_transfers_executions"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.36616, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_execution_aggregates": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.366472, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.store_stock_items": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "store_stock_items"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.366786, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.scenario": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.scenario", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "scenario"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.36703, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.warehouses": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "warehouses"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.367274, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.skus": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.skus", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "skus"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.3675032, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.seasons": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.seasons", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "seasons"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.367732, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.sales": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.sales", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "sales"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.367969, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.warehouse_stock_items": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "warehouse_stock_items"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.368195, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOOTGEAR_globaldomain_public.databasechangelog": {"database": "FOOTGEAR_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOOTGEAR_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "FOOTGEAR_globaldomain_public", "databasechangelog"], "source_name": "FOOTGEAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOOTGEAR_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.368418, "unrendered_database": "FOOTGEAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.admin_users": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "admin_users"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.3686452, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.first_allocation_execution": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "first_allocation_execution"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.368869, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.category": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.category", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "category"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.category", "created_at": 1754287422.369108, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.category_item_included": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "category_item_included"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.369504, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.products": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.products", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "products"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.products", "created_at": 1754287422.3697422, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.product_history": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.product_history", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "product_history"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.3699672, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.stores": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.stores", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "stores"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.370191, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.families": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.families", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "families"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.families", "created_at": 1754287422.370414, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.cron": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.cron", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "cron"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.370639, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.buy_execution": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "buy_execution"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.370859, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.dio_execution_selected": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "dio_execution_selected"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.37108, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.engine_executions": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "engine_executions"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.37131, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.preconfigured_execution": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "preconfigured_execution"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.371532, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.reorder_execution": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "reorder_execution"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.3717508, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.replenishment_executions": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "replenishment_executions"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.37197, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_executions": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "store_transfers_executions"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.372189, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_execution_aggregates": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.3724082, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.store_stock_items": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "store_stock_items"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.372627, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.scenario": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.scenario", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "scenario"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.3728452, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.warehouses": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "warehouses"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.373066, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.skus": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.skus", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "skus"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.373287, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.seasons": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.seasons", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "seasons"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.373506, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.sales": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.sales", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "sales"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.373724, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.warehouse_stock_items": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "warehouse_stock_items"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.373942, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.FOREVERNEW_globaldomain_public.databasechangelog": {"database": "FOREVERNEW_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.FOREVERNEW_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "FOREVERNEW_globaldomain_public", "databasechangelog"], "source_name": "FOREVERNEW_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "FOREVERNEW_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.3742201, "unrendered_database": "FOREVERNEW_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.admin_users": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "admin_users"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.3745432, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.first_allocation_execution": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "first_allocation_execution"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.374777, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.category": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.category", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "category"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.category", "created_at": 1754287422.3750029, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.category_item_included": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "category_item_included"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.375229, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.products": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.products", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "products"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.products", "created_at": 1754287422.3754508, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.product_history": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.product_history", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "product_history"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.375675, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.stores": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.stores", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "stores"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.3758879, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.families": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.families", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "families"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.families", "created_at": 1754287422.376101, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.cron": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.cron", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "cron"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.376317, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.buy_execution": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "buy_execution"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.376531, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.dio_execution_selected": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "dio_execution_selected"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.3767538, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.engine_executions": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "engine_executions"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.37697, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.preconfigured_execution": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "preconfigured_execution"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.377182, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.reorder_execution": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "reorder_execution"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.377394, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.replenishment_executions": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "replenishment_executions"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.377612, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.store_transfers_executions": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "store_transfers_executions"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.377831, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.store_transfers_execution_aggregates": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.37805, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.store_stock_items": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "store_stock_items"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.37827, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.scenario": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.scenario", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "scenario"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.378488, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.warehouses": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "warehouses"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.378703, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.skus": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.skus", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "skus"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.3789241, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.seasons": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.seasons", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "seasons"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.379143, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.sales": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.sales", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "sales"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.379358, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.warehouse_stock_items": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "warehouse_stock_items"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.37958, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GINATRICOT_globaldomain_public.databasechangelog": {"database": "GINATRICOT_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GINATRICOT_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "GINATRICOT_globaldomain_public", "databasechangelog"], "source_name": "GINATRICOT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GINATRICOT_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.379792, "unrendered_database": "GINATRICOT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.admin_users": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "admin_users"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.3800058, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.first_allocation_execution": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "first_allocation_execution"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.380219, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.category": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.category", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "category"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.category", "created_at": 1754287422.380432, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.category_item_included": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "category_item_included"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.380645, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.products": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.products", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "products"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.products", "created_at": 1754287422.3808582, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.product_history": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.product_history", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "product_history"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.3810701, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.stores": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.stores", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "stores"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.381283, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.families": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.families", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "families"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.families", "created_at": 1754287422.3814971, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.cron": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.cron", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "cron"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.381716, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.buy_execution": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "buy_execution"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.381929, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.dio_execution_selected": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "dio_execution_selected"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.382148, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.engine_executions": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "engine_executions"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.382367, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.preconfigured_execution": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "preconfigured_execution"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.382581, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.reorder_execution": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "reorder_execution"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.382797, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.replenishment_executions": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "replenishment_executions"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.3830059, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_executions": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "store_transfers_executions"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.383214, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_execution_aggregates": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.383422, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.store_stock_items": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "store_stock_items"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.383631, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.scenario": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.scenario", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "scenario"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.38384, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.warehouses": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "warehouses"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.384118, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.skus": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.skus", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "skus"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.38435, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.seasons": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.seasons", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "seasons"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.3845692, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.sales": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.sales", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "sales"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.384782, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.warehouse_stock_items": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "warehouse_stock_items"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.384992, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTARRETAIL_globaldomain_public.databasechangelog": {"database": "GSTARRETAIL_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTARRETAIL_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "GSTARRETAIL_globaldomain_public", "databasechangelog"], "source_name": "GSTARRETAIL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTARRETAIL_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.385201, "unrendered_database": "GSTARRETAIL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.admin_users": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "admin_users"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.385408, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.first_allocation_execution": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "first_allocation_execution"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.3856142, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.category": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.category", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "category"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.category", "created_at": 1754287422.3858209, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.category_item_included": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "category_item_included"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.386027, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.products": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.products", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "products"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.products", "created_at": 1754287422.386233, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.product_history": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.product_history", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "product_history"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.386438, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.stores": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.stores", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "stores"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.386643, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.families": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.families", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "families"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.families", "created_at": 1754287422.386849, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.cron": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.cron", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "cron"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.387054, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.buy_execution": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "buy_execution"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.38726, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.dio_execution_selected": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "dio_execution_selected"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.387465, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.engine_executions": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "engine_executions"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.387669, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.preconfigured_execution": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "preconfigured_execution"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.3878772, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.reorder_execution": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "reorder_execution"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.388082, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.replenishment_executions": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "replenishment_executions"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.388287, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.store_transfers_executions": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "store_transfers_executions"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.388494, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.store_transfers_execution_aggregates": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.388701, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.store_stock_items": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "store_stock_items"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.388906, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.scenario": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.scenario", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "scenario"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.389111, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.warehouses": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "warehouses"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.389318, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.skus": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.skus", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "skus"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.389523, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.seasons": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.seasons", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "seasons"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.38973, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.sales": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.sales", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "sales"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.389935, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.warehouse_stock_items": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "warehouse_stock_items"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.390141, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GSTAR_globaldomain_public.databasechangelog": {"database": "GSTAR_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GSTAR_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "GSTAR_globaldomain_public", "databasechangelog"], "source_name": "GSTAR_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GSTAR_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.3903491, "unrendered_database": "GSTAR_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.admin_users": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "admin_users"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.3905559, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.first_allocation_execution": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "first_allocation_execution"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.390762, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.category": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.category", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "category"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.category", "created_at": 1754287422.390969, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.category_item_included": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "category_item_included"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.3911748, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.products": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.products", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "products"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.products", "created_at": 1754287422.391381, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.product_history": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.product_history", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "product_history"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.391586, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.stores": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.stores", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "stores"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.391791, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.families": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.families", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "families"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.families", "created_at": 1754287422.3919969, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.cron": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.cron", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "cron"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.392204, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.buy_execution": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "buy_execution"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.392411, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.dio_execution_selected": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "dio_execution_selected"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.39262, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.engine_executions": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "engine_executions"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.3928251, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.preconfigured_execution": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "preconfigured_execution"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.393033, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.reorder_execution": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "reorder_execution"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.393238, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.replenishment_executions": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "replenishment_executions"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.393444, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_executions": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "store_transfers_executions"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.393652, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_execution_aggregates": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.393858, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.store_stock_items": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "store_stock_items"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.394228, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.scenario": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.scenario", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "scenario"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.394494, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.warehouses": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "warehouses"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.394717, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.skus": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.skus", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "skus"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.3949351, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.seasons": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.seasons", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "seasons"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.3951502, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.sales": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.sales", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "sales"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.395364, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.warehouse_stock_items": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "warehouse_stock_items"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.3955798, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSEMEA_globaldomain_public.databasechangelog": {"database": "GUESSEMEA_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSEMEA_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "GUESSEMEA_globaldomain_public", "databasechangelog"], "source_name": "GUESSEMEA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSEMEA_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.395796, "unrendered_database": "GUESSEMEA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.admin_users": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "admin_users"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.396124, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.first_allocation_execution": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "first_allocation_execution"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.396342, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.category": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.category", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "category"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.category", "created_at": 1754287422.396555, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.category_item_included": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "category_item_included"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.396767, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.products": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.products", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "products"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.products", "created_at": 1754287422.3969789, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.product_history": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.product_history", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "product_history"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.397196, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.stores": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.stores", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "stores"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.397409, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.families": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.families", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "families"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.families", "created_at": 1754287422.397625, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.cron": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.cron", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "cron"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.3978372, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.buy_execution": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "buy_execution"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.3980532, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.dio_execution_selected": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "dio_execution_selected"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.398269, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.engine_executions": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "engine_executions"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.398488, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.preconfigured_execution": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "preconfigured_execution"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.398699, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.reorder_execution": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "reorder_execution"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.3989189, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.replenishment_executions": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "replenishment_executions"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.3991392, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.store_transfers_executions": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "store_transfers_executions"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.399353, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.store_transfers_execution_aggregates": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.399565, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.store_stock_items": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "store_stock_items"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.399787, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.scenario": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.scenario", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "scenario"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.400013, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.warehouses": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "warehouses"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.40023, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.skus": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.skus", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "skus"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4004428, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.seasons": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.seasons", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "seasons"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.400702, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.sales": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.sales", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "sales"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.400929, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.warehouse_stock_items": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "warehouse_stock_items"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.4011352, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.GUESSUS_globaldomain_public.databasechangelog": {"database": "GUESSUS_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.GUESSUS_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "GUESSUS_globaldomain_public", "databasechangelog"], "source_name": "GUESSUS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "GUESSUS_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.4013429, "unrendered_database": "GUESSUS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.admin_users": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "admin_users"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.401552, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.first_allocation_execution": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "first_allocation_execution"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.40176, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.category": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.category", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "category"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.category", "created_at": 1754287422.401966, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.category_item_included": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "category_item_included"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.402173, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.products": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.products", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "products"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.products", "created_at": 1754287422.402379, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.product_history": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.product_history", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "product_history"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.402584, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.stores": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.stores", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "stores"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.402792, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.families": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.families", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "families"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.families", "created_at": 1754287422.402999, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.cron": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.cron", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "cron"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.403209, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.buy_execution": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "buy_execution"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.403417, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.dio_execution_selected": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "dio_execution_selected"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.403625, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.engine_executions": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "engine_executions"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.403831, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.preconfigured_execution": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "preconfigured_execution"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.4041212, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.reorder_execution": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "reorder_execution"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.404364, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.replenishment_executions": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "replenishment_executions"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.404585, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.store_transfers_executions": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "store_transfers_executions"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.404799, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.store_transfers_execution_aggregates": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.4050188, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.store_stock_items": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "store_stock_items"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.405237, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.scenario": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.scenario", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "scenario"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.405448, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.warehouses": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "warehouses"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.405664, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.skus": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.skus", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "skus"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.405878, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.seasons": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.seasons", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "seasons"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.406094, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.sales": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.sales", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "sales"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.406316, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.warehouse_stock_items": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "warehouse_stock_items"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.406535, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.HACKETT_globaldomain_public.databasechangelog": {"database": "HACKETT_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.HACKETT_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "HACKETT_globaldomain_public", "databasechangelog"], "source_name": "HACKETT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "HACKETT_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.406749, "unrendered_database": "HACKETT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.admin_users": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "admin_users"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.407019, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.first_allocation_execution": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "first_allocation_execution"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.407236, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.category": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.category", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "category"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.category", "created_at": 1754287422.407443, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.category_item_included": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "category_item_included"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.407648, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.products": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.products", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "products"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.products", "created_at": 1754287422.407855, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.product_history": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.product_history", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "product_history"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.408061, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.stores": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.stores", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "stores"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.408266, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.families": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.families", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "families"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.families", "created_at": 1754287422.408471, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.cron": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.cron", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "cron"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.408677, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.buy_execution": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "buy_execution"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.4088829, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.dio_execution_selected": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "dio_execution_selected"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.409088, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.engine_executions": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "engine_executions"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.4092932, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.preconfigured_execution": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "preconfigured_execution"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.4094982, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.reorder_execution": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "reorder_execution"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.409703, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.replenishment_executions": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "replenishment_executions"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.4099069, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.store_transfers_executions": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "store_transfers_executions"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.410113, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.store_transfers_execution_aggregates": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.4103181, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.store_stock_items": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "store_stock_items"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.410523, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.scenario": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.scenario", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "scenario"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.410727, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.warehouses": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "warehouses"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.410932, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.skus": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.skus", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "skus"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.411136, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.seasons": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.seasons", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "seasons"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.411341, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.sales": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.sales", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "sales"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.411545, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.warehouse_stock_items": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "warehouse_stock_items"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.4117491, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JOTT_globaldomain_public.databasechangelog": {"database": "JOTT_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JOTT_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "JOTT_globaldomain_public", "databasechangelog"], "source_name": "JOTT_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JOTT_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.411953, "unrendered_database": "JOTT_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.admin_users": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "admin_users"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.4121668, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.first_allocation_execution": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "first_allocation_execution"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.412373, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.category": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.category", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "category"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.category", "created_at": 1754287422.412579, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.category_item_included": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "category_item_included"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.412786, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.products": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.products", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "products"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.products", "created_at": 1754287422.412991, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.product_history": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.product_history", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "product_history"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.413197, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.stores": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.stores", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "stores"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.413405, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.families": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.families", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "families"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.families", "created_at": 1754287422.413611, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.cron": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.cron", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "cron"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.4138172, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.buy_execution": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "buy_execution"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.414098, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.dio_execution_selected": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "dio_execution_selected"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.414368, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.engine_executions": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "engine_executions"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.414589, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.preconfigured_execution": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "preconfigured_execution"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.414807, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.reorder_execution": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "reorder_execution"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.415027, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.replenishment_executions": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "replenishment_executions"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.415251, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.store_transfers_executions": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "store_transfers_executions"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.415476, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.store_transfers_execution_aggregates": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.4156978, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.store_stock_items": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "store_stock_items"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.415911, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.scenario": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.scenario", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "scenario"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.416127, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.warehouses": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "warehouses"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.4163682, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.skus": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.skus", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "skus"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.416595, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.seasons": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.seasons", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "seasons"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.416825, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.sales": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.sales", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "sales"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.417046, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.warehouse_stock_items": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "warehouse_stock_items"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.417342, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.JULES_globaldomain_public.databasechangelog": {"database": "JULES_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.JULES_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "JULES_globaldomain_public", "databasechangelog"], "source_name": "JULES_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "JULES_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.417591, "unrendered_database": "JULES_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.admin_users": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "admin_users"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.41782, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.first_allocation_execution": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "first_allocation_execution"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4180422, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.category": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.category", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "category"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.category", "created_at": 1754287422.4182599, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.category_item_included": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "category_item_included"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.418486, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.products": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.products", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "products"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4187021, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.product_history": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.product_history", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "product_history"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.418918, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.stores": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.stores", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "stores"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.419137, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.families": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.families", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "families"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.families", "created_at": 1754287422.419351, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.cron": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.cron", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "cron"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.4195662, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.buy_execution": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "buy_execution"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.419778, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.dio_execution_selected": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "dio_execution_selected"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.419996, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.engine_executions": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "engine_executions"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.420222, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.preconfigured_execution": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "preconfigured_execution"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.42044, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.reorder_execution": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "reorder_execution"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.420662, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.replenishment_executions": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "replenishment_executions"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.4208798, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.store_transfers_executions": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "store_transfers_executions"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.4210958, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.store_transfers_execution_aggregates": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.421369, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.store_stock_items": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "store_stock_items"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.421628, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.scenario": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.scenario", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "scenario"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.4218612, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.warehouses": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "warehouses"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.422084, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.skus": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.skus", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "skus"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4223008, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.seasons": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.seasons", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "seasons"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.4225368, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.sales": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.sales", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "sales"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.422859, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.warehouse_stock_items": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "warehouse_stock_items"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.423088, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MAAG_globaldomain_public.databasechangelog": {"database": "MAAG_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MAAG_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "MAAG_globaldomain_public", "databasechangelog"], "source_name": "MAAG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MAAG_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.423311, "unrendered_database": "MAAG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.admin_users": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "admin_users"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.4235342, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.first_allocation_execution": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "first_allocation_execution"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.423755, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.category": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.category", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "category"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.category", "created_at": 1754287422.423986, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.category_item_included": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "category_item_included"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.424213, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.products": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.products", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "products"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.products", "created_at": 1754287422.424432, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.product_history": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.product_history", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "product_history"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.424654, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.stores": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.stores", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "stores"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.424876, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.families": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.families", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "families"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.families", "created_at": 1754287422.425097, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.cron": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.cron", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "cron"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.425314, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.buy_execution": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "buy_execution"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.425527, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.dio_execution_selected": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "dio_execution_selected"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.4257438, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.engine_executions": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "engine_executions"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.425958, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.preconfigured_execution": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "preconfigured_execution"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.42617, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.reorder_execution": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "reorder_execution"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.426404, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.replenishment_executions": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "replenishment_executions"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.426636, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.store_transfers_executions": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "store_transfers_executions"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.426859, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.store_transfers_execution_aggregates": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.42708, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.store_stock_items": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "store_stock_items"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.4273012, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.scenario": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.scenario", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "scenario"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.4275148, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.warehouses": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "warehouses"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.427726, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.skus": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.skus", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "skus"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.427936, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.seasons": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.seasons", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "seasons"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.428148, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.sales": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.sales", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "sales"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.4283578, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.warehouse_stock_items": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "warehouse_stock_items"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.428576, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MERKAL_globaldomain_public.databasechangelog": {"database": "MERKAL_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MERKAL_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "MERKAL_globaldomain_public", "databasechangelog"], "source_name": "MERKAL_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MERKAL_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.428787, "unrendered_database": "MERKAL_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.admin_users": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "admin_users"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.429004, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.first_allocation_execution": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "first_allocation_execution"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.429219, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.category": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.category", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "category"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.category", "created_at": 1754287422.4294348, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.category_item_included": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "category_item_included"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.4297369, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.products": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.products", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "products"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4299982, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.product_history": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.product_history", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "product_history"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.430204, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.stores": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.stores", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "stores"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.430409, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.families": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.families", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "families"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.families", "created_at": 1754287422.430614, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.cron": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.cron", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "cron"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.43082, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.buy_execution": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "buy_execution"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.431028, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.dio_execution_selected": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "dio_execution_selected"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.4312398, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.engine_executions": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "engine_executions"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.431445, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.preconfigured_execution": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "preconfigured_execution"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.431651, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.reorder_execution": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "reorder_execution"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.4318569, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.replenishment_executions": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "replenishment_executions"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.432065, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.store_transfers_executions": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "store_transfers_executions"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.432272, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.store_transfers_execution_aggregates": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.432477, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.store_stock_items": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "store_stock_items"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.4326808, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.scenario": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.scenario", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "scenario"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.432885, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.warehouses": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "warehouses"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.433093, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.skus": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.skus", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "skus"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4333, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.seasons": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.seasons", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "seasons"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.433504, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.sales": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.sales", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "sales"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.433708, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.warehouse_stock_items": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "warehouse_stock_items"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.433911, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.METROBRANDS_globaldomain_public.databasechangelog": {"database": "METROBRANDS_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.METROBRANDS_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "METROBRANDS_globaldomain_public", "databasechangelog"], "source_name": "METROBRANDS_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "METROBRANDS_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.434114, "unrendered_database": "METROBRANDS_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.admin_users": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "admin_users"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.43432, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.first_allocation_execution": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "first_allocation_execution"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.434525, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.category": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.category", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "category"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.category", "created_at": 1754287422.434734, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.category_item_included": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "category_item_included"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.4349408, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.products": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.products", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "products"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4351501, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.product_history": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.product_history", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "product_history"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.435355, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.stores": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.stores", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "stores"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.4355588, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.families": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.families", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "families"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.families", "created_at": 1754287422.435764, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.cron": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.cron", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "cron"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.435969, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.buy_execution": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "buy_execution"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.4361742, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.dio_execution_selected": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "dio_execution_selected"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.4364622, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.engine_executions": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "engine_executions"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.436736, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.preconfigured_execution": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "preconfigured_execution"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.43696, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.reorder_execution": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "reorder_execution"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.437186, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.replenishment_executions": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "replenishment_executions"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.437408, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.store_transfers_executions": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "store_transfers_executions"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.4376261, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.store_transfers_execution_aggregates": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.437841, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.store_stock_items": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "store_stock_items"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.438058, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.scenario": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.scenario", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "scenario"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.4382699, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.warehouses": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "warehouses"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.438484, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.skus": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.skus", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "skus"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4386969, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.seasons": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.seasons", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "seasons"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.438911, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.sales": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.sales", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "sales"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.439127, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.warehouse_stock_items": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "warehouse_stock_items"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.439337, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MFG_globaldomain_public.databasechangelog": {"database": "MFG_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MFG_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "MFG_globaldomain_public", "databasechangelog"], "source_name": "MFG_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MFG_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.439605, "unrendered_database": "MFG_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.admin_users": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "admin_users"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.439852, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.first_allocation_execution": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "first_allocation_execution"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.440084, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "category"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.category", "created_at": 1754287422.440309, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category_item_included": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "category_item_included"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.440531, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.products": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.products", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "products"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.products", "created_at": 1754287422.440744, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.product_history": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.product_history", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "product_history"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.440959, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.stores": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.stores", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "stores"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.4411788, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.families": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.families", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "families"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.families", "created_at": 1754287422.4414, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.cron": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.cron", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "cron"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.441613, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.buy_execution": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "buy_execution"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.44182, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.dio_execution_selected": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "dio_execution_selected"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.4420428, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.engine_executions": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "engine_executions"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.442254, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.preconfigured_execution": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "preconfigured_execution"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.442467, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.reorder_execution": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "reorder_execution"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.4426801, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.replenishment_executions": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "replenishment_executions"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.442894, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_executions": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "store_transfers_executions"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.4431, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_execution_aggregates": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.4433038, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_stock_items": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "store_stock_items"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.443511, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.scenario": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.scenario", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "scenario"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.443717, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouses": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "warehouses"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.4439218, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.skus": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.skus", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "skus"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.444143, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.seasons": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.seasons", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "seasons"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.4443479, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.sales": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.sales", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "sales"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.444553, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouse_stock_items": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "warehouse_stock_items"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.444758, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.databasechangelog": {"database": "MOUNTAINWAREHOUSE_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "MOUNTAINWAREHOUSE_globaldomain_public", "databasechangelog"], "source_name": "MOUNTAINWAREHOUSE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "MOUNTAINWAREHOUSE_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.4449642, "unrendered_database": "MOUNTAINWAREHOUSE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.admin_users": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "admin_users"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.445169, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.first_allocation_execution": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "first_allocation_execution"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4453812, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.category": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.category", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "category"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.category", "created_at": 1754287422.4455948, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.category_item_included": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "category_item_included"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.445809, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.products": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.products", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "products"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.products", "created_at": 1754287422.446024, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.product_history": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.product_history", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "product_history"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.4462368, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.stores": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.stores", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "stores"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.446448, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.families": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.families", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "families"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.families", "created_at": 1754287422.446653, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.cron": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.cron", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "cron"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.446862, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.buy_execution": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "buy_execution"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.447068, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.dio_execution_selected": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "dio_execution_selected"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.447273, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.engine_executions": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "engine_executions"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.447478, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.preconfigured_execution": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "preconfigured_execution"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.4476821, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.reorder_execution": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "reorder_execution"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.4478998, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.replenishment_executions": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "replenishment_executions"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.448111, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.store_transfers_executions": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "store_transfers_executions"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.448322, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.store_transfers_execution_aggregates": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.448533, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.store_stock_items": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "store_stock_items"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.448745, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.scenario": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.scenario", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "scenario"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.448952, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.warehouses": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "warehouses"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.449237, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.skus": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.skus", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "skus"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4494479, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.seasons": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.seasons", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "seasons"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.449656, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.sales": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.sales", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "sales"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.4498692, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.warehouse_stock_items": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "warehouse_stock_items"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.450088, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.PEPE_globaldomain_public.databasechangelog": {"database": "PEPE_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.PEPE_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "PEPE_globaldomain_public", "databasechangelog"], "source_name": "PEPE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "PEPE_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.4502988, "unrendered_database": "PEPE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.admin_users": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "admin_users"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.450513, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.first_allocation_execution": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "first_allocation_execution"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4507709, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.category": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.category", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "category"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.category", "created_at": 1754287422.450998, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.category_item_included": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "category_item_included"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.451212, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.products": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.products", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "products"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4514408, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.product_history": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.product_history", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "product_history"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.451662, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.stores": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.stores", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "stores"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.451879, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.families": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.families", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "families"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.families", "created_at": 1754287422.452093, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.cron": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.cron", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "cron"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.452308, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.buy_execution": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "buy_execution"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.452523, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.dio_execution_selected": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "dio_execution_selected"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.452738, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.engine_executions": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "engine_executions"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.452951, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.preconfigured_execution": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "preconfigured_execution"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.453165, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.reorder_execution": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "reorder_execution"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.4533792, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.replenishment_executions": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "replenishment_executions"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.453624, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_executions": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "store_transfers_executions"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.453859, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_execution_aggregates": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.454083, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.store_stock_items": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "store_stock_items"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.454305, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.scenario": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.scenario", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "scenario"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.45453, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.warehouses": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "warehouses"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.454747, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.skus": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.skus", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "skus"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.454967, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.seasons": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.seasons", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "seasons"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.4551868, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.sales": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.sales", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "sales"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.455403, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.warehouse_stock_items": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "warehouse_stock_items"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.455623, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.RIVERISLAND_globaldomain_public.databasechangelog": {"database": "RIVERISLAND_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.RIVERISLAND_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "RIVERISLAND_globaldomain_public", "databasechangelog"], "source_name": "RIVERISLAND_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "RIVERISLAND_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.4558358, "unrendered_database": "RIVERISLAND_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.admin_users": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "admin_users"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.4560509, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.first_allocation_execution": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "first_allocation_execution"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4562712, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.category": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.category", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "category"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.category", "created_at": 1754287422.456484, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.category_item_included": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "category_item_included"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.456699, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.products": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.products", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "products"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4569228, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.product_history": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.product_history", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "product_history"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.4571571, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.stores": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.stores", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "stores"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.457369, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.families": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.families", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "families"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.families", "created_at": 1754287422.457587, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.cron": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.cron", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "cron"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.4578078, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.buy_execution": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "buy_execution"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.4580321, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.dio_execution_selected": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "dio_execution_selected"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.458251, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.engine_executions": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "engine_executions"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.4584699, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.preconfigured_execution": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "preconfigured_execution"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.4586828, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.reorder_execution": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "reorder_execution"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.4588952, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.replenishment_executions": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "replenishment_executions"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.459108, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.store_transfers_executions": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "store_transfers_executions"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.459318, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.store_transfers_execution_aggregates": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.459531, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.store_stock_items": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "store_stock_items"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.459743, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.scenario": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.scenario", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "scenario"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.459954, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.warehouses": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "warehouses"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.460166, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.skus": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.skus", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "skus"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.460381, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.seasons": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.seasons", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "seasons"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.460599, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.sales": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.sales", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "sales"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.460812, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.warehouse_stock_items": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "warehouse_stock_items"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.461022, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SCOTTA_globaldomain_public.databasechangelog": {"database": "SCOTTA_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SCOTTA_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "SCOTTA_globaldomain_public", "databasechangelog"], "source_name": "SCOTTA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SCOTTA_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.461279, "unrendered_database": "SCOTTA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.admin_users": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "admin_users"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.4615092, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.first_allocation_execution": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "first_allocation_execution"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.461733, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.category": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.category", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "category"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.category", "created_at": 1754287422.461958, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.category_item_included": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "category_item_included"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.4621792, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.products": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.products", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "products"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4623911, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.product_history": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.product_history", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "product_history"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.462604, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.stores": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.stores", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "stores"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.4628181, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.families": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.families", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "families"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.families", "created_at": 1754287422.463031, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.cron": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.cron", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "cron"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.463243, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.buy_execution": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "buy_execution"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.463456, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.dio_execution_selected": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "dio_execution_selected"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.4636722, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.engine_executions": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "engine_executions"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.463884, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.preconfigured_execution": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "preconfigured_execution"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.464098, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.reorder_execution": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "reorder_execution"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.464313, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.replenishment_executions": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "replenishment_executions"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.4645262, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.store_transfers_executions": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "store_transfers_executions"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.46474, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.store_transfers_execution_aggregates": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.464969, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.store_stock_items": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "store_stock_items"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.465188, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.scenario": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.scenario", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "scenario"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.465407, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.warehouses": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "warehouses"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.465626, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.skus": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.skus", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "skus"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.465844, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.seasons": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.seasons", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "seasons"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.466058, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.sales": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.sales", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "sales"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.4662678, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.warehouse_stock_items": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "warehouse_stock_items"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.4665148, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SILBON_globaldomain_public.databasechangelog": {"database": "SILBON_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SILBON_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "SILBON_globaldomain_public", "databasechangelog"], "source_name": "SILBON_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SILBON_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.4667552, "unrendered_database": "SILBON_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.admin_users": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "admin_users"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.46698, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.first_allocation_execution": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "first_allocation_execution"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4672031, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.category": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.category", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "category"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.category", "created_at": 1754287422.4674208, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.category_item_included": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "category_item_included"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.467635, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.products": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.products", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "products"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.products", "created_at": 1754287422.467851, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.product_history": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.product_history", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "product_history"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.4680698, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.stores": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.stores", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "stores"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.4682848, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.families": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.families", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "families"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.families", "created_at": 1754287422.468502, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.cron": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.cron", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "cron"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.4687622, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.buy_execution": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "buy_execution"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.468997, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.dio_execution_selected": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "dio_execution_selected"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.469223, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.engine_executions": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "engine_executions"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.469446, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.preconfigured_execution": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "preconfigured_execution"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.469667, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.reorder_execution": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "reorder_execution"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.469881, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.replenishment_executions": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "replenishment_executions"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.470094, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_executions": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "store_transfers_executions"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.470311, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_execution_aggregates": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.470527, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.store_stock_items": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "store_stock_items"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.47074, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.scenario": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.scenario", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "scenario"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.470953, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.warehouses": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "warehouses"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.471172, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.skus": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.skus", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "skus"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.471383, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.seasons": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.seasons", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "seasons"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.471596, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.sales": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.sales", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "sales"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.471812, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.warehouse_stock_items": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "warehouse_stock_items"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.472033, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SFERABASICMAN_globaldomain_public.databasechangelog": {"database": "SFERABASICMAN_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SFERABASICMAN_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "SFERABASICMAN_globaldomain_public", "databasechangelog"], "source_name": "SFERABASICMAN_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SFERABASICMAN_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.4722502, "unrendered_database": "SFERABASICMAN_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.admin_users": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "admin_users"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.472472, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.first_allocation_execution": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "first_allocation_execution"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4726882, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.category": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.category", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "category"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.category", "created_at": 1754287422.472904, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.category_item_included": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "category_item_included"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.4731169, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.products": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.products", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "products"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.products", "created_at": 1754287422.473326, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.product_history": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.product_history", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "product_history"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.473536, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.stores": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.stores", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "stores"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.473747, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.families": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.families", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "families"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.families", "created_at": 1754287422.473996, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.cron": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.cron", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "cron"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.474242, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.buy_execution": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "buy_execution"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.474467, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.dio_execution_selected": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "dio_execution_selected"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.47469, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.engine_executions": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "engine_executions"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.474907, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.preconfigured_execution": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "preconfigured_execution"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.475144, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.reorder_execution": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "reorder_execution"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.4753659, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.replenishment_executions": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "replenishment_executions"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.4755871, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_executions": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "store_transfers_executions"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.475805, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_execution_aggregates": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.476105, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.store_stock_items": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "store_stock_items"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.476324, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.scenario": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.scenario", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "scenario"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.476541, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.warehouses": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "warehouses"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.476753, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.skus": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.skus", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "skus"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.476966, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.seasons": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.seasons", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "seasons"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.4771771, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.sales": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.sales", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "sales"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.4773881, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.warehouse_stock_items": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "warehouse_stock_items"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.477597, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSEMOTION_globaldomain_public.databasechangelog": {"database": "SPORTSEMOTION_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSEMOTION_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "SPORTSEMOTION_globaldomain_public", "databasechangelog"], "source_name": "SPORTSEMOTION_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSEMOTION_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.477812, "unrendered_database": "SPORTSEMOTION_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.admin_users": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "admin_users"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.478025, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.first_allocation_execution": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "first_allocation_execution"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.478237, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.category": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.category", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "category"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.category", "created_at": 1754287422.478476, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.category_item_included": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "category_item_included"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.478708, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.products": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.products", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "products"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.products", "created_at": 1754287422.47894, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.product_history": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.product_history", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "product_history"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.479161, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.stores": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.stores", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "stores"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.47938, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.families": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.families", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "families"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.families", "created_at": 1754287422.479604, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.cron": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.cron", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "cron"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.479815, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.buy_execution": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "buy_execution"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.480026, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.dio_execution_selected": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "dio_execution_selected"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.480238, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.engine_executions": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "engine_executions"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.4804502, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.preconfigured_execution": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "preconfigured_execution"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.480669, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.reorder_execution": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "reorder_execution"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.480889, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.replenishment_executions": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "replenishment_executions"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.481101, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_executions": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "store_transfers_executions"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.481312, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_execution_aggregates": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.481523, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.store_stock_items": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "store_stock_items"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.481749, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.scenario": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.scenario", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "scenario"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.4819682, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.warehouses": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "warehouses"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.482186, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.skus": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.skus", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "skus"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4824069, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.seasons": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.seasons", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "seasons"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.482625, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.sales": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.sales", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "sales"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.48284, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.warehouse_stock_items": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "warehouse_stock_items"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.483051, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SPORTSTREET_globaldomain_public.databasechangelog": {"database": "SPORTSTREET_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SPORTSTREET_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "SPORTSTREET_globaldomain_public", "databasechangelog"], "source_name": "SPORTSTREET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SPORTSTREET_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.483264, "unrendered_database": "SPORTSTREET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.admin_users": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "admin_users"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.483478, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.first_allocation_execution": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "first_allocation_execution"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.483692, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.category": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.category", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "category"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.category", "created_at": 1754287422.484052, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.category_item_included": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "category_item_included"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.484304, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.products": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.products", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "products"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.products", "created_at": 1754287422.48452, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.product_history": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.product_history", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "product_history"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.484731, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.stores": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.stores", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "stores"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.484939, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.families": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.families", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "families"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.families", "created_at": 1754287422.485148, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.cron": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.cron", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "cron"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.485356, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.buy_execution": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "buy_execution"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.485562, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.dio_execution_selected": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "dio_execution_selected"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.4857678, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.engine_executions": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "engine_executions"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.485976, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.preconfigured_execution": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "preconfigured_execution"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.486182, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.reorder_execution": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "reorder_execution"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.486387, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.replenishment_executions": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "replenishment_executions"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.486593, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.store_transfers_executions": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "store_transfers_executions"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.486806, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.store_transfers_execution_aggregates": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.487013, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.store_stock_items": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "store_stock_items"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.487222, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.scenario": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.scenario", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "scenario"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.4874291, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.warehouses": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "warehouses"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.487635, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.skus": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.skus", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "skus"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.487842, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.seasons": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.seasons", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "seasons"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.488048, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.sales": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.sales", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "sales"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.488254, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.warehouse_stock_items": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "warehouse_stock_items"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.4884648, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.SUAREZ_globaldomain_public.databasechangelog": {"database": "SUAREZ_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.SUAREZ_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "SUAREZ_globaldomain_public", "databasechangelog"], "source_name": "SUAREZ_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "SUAREZ_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.488671, "unrendered_database": "SUAREZ_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.admin_users": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "admin_users"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.488877, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.first_allocation_execution": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "first_allocation_execution"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.489082, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.category": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.category", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "category"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.category", "created_at": 1754287422.489286, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.category_item_included": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "category_item_included"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.489494, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.products": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.products", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "products"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.products", "created_at": 1754287422.4897, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.product_history": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.product_history", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "product_history"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.4899049, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.stores": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.stores", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "stores"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.490112, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.families": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.families", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "families"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.families", "created_at": 1754287422.490318, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.cron": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.cron", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "cron"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.490528, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.buy_execution": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "buy_execution"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.490734, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.dio_execution_selected": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "dio_execution_selected"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.490939, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.engine_executions": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "engine_executions"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.491145, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.preconfigured_execution": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "preconfigured_execution"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.491349, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.reorder_execution": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "reorder_execution"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.491553, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.replenishment_executions": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "replenishment_executions"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.491758, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.store_transfers_executions": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "store_transfers_executions"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.4919639, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.store_transfers_execution_aggregates": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.492172, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.store_stock_items": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "store_stock_items"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.492378, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.scenario": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.scenario", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "scenario"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.4925902, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.warehouses": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "warehouses"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.492797, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.skus": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.skus", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "skus"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.493003, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.seasons": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.seasons", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "seasons"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.4932108, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.sales": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.sales", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "sales"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.493417, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.warehouse_stock_items": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "warehouse_stock_items"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.493623, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TERRANOVA_globaldomain_public.databasechangelog": {"database": "TERRANOVA_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TERRANOVA_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "TERRANOVA_globaldomain_public", "databasechangelog"], "source_name": "TERRANOVA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TERRANOVA_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.493829, "unrendered_database": "TERRANOVA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.admin_users": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "admin_users"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.494155, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.first_allocation_execution": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "first_allocation_execution"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.4944158, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.category": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.category", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "category"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.category", "created_at": 1754287422.4946501, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.category_item_included": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "category_item_included"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.494878, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.products": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.products", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "products"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.products", "created_at": 1754287422.495109, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.product_history": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.product_history", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "product_history"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.495331, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.stores": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.stores", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "stores"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.495546, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.families": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.families", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "families"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.families", "created_at": 1754287422.495764, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.cron": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.cron", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "cron"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.49598, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.buy_execution": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "buy_execution"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.4961972, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.dio_execution_selected": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "dio_execution_selected"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.496415, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.engine_executions": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "engine_executions"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.496634, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.preconfigured_execution": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "preconfigured_execution"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.4968462, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.reorder_execution": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "reorder_execution"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.497059, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.replenishment_executions": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "replenishment_executions"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.4972742, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.store_transfers_executions": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "store_transfers_executions"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.4975302, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.store_transfers_execution_aggregates": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.497777, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.store_stock_items": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "store_stock_items"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.498005, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.scenario": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.scenario", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "scenario"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.498231, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.warehouses": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "warehouses"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.498455, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.skus": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.skus", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "skus"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.4986749, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.seasons": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.seasons", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "seasons"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.4988868, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.sales": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.sales", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "sales"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.499108, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.warehouse_stock_items": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "warehouse_stock_items"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.49932, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.TVOE_globaldomain_public.databasechangelog": {"database": "TVOE_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.TVOE_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "TVOE_globaldomain_public", "databasechangelog"], "source_name": "TVOE_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "TVOE_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.499537, "unrendered_database": "TVOE_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.admin_users": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "admin_users"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.499796, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.first_allocation_execution": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "first_allocation_execution"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.5000262, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.category": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.category", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "category"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.category", "created_at": 1754287422.50025, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.category_item_included": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "category_item_included"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.500463, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.products": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.products", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "products"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.products", "created_at": 1754287422.5006888, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.product_history": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.product_history", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "product_history"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.500906, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.stores": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.stores", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "stores"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.501122, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.families": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.families", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "families"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.families", "created_at": 1754287422.5013351, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.cron": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.cron", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "cron"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.5015512, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.buy_execution": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "buy_execution"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.501767, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.dio_execution_selected": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "dio_execution_selected"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.501973, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.engine_executions": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "engine_executions"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.502181, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.preconfigured_execution": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "preconfigured_execution"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.502388, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.reorder_execution": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "reorder_execution"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.502669, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.replenishment_executions": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "replenishment_executions"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.502877, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.store_transfers_executions": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "store_transfers_executions"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.503084, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.store_transfers_execution_aggregates": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.5032902, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.store_stock_items": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "store_stock_items"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.503498, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.scenario": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.scenario", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "scenario"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.503704, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.warehouses": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "warehouses"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.5039098, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.skus": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.skus", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "skus"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.504129, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.seasons": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.seasons", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "seasons"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.5043478, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.sales": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.sales", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "sales"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.5045671, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.warehouse_stock_items": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "warehouse_stock_items"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.5047848, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VALEXTRA_globaldomain_public.databasechangelog": {"database": "VALEXTRA_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VALEXTRA_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "VALEXTRA_globaldomain_public", "databasechangelog"], "source_name": "VALEXTRA_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VALEXTRA_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.505003, "unrendered_database": "VALEXTRA_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.admin_users": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "admin_users"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.505219, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.first_allocation_execution": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "first_allocation_execution"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.505431, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.category": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.category", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "category"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.category", "created_at": 1754287422.505642, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.category_item_included": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "category_item_included"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.505856, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.products": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.products", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "products"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.products", "created_at": 1754287422.506072, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.product_history": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.product_history", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "product_history"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.506284, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.stores": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.stores", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "stores"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.506496, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.families": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.families", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "families"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.families", "created_at": 1754287422.506708, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.cron": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.cron", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "cron"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.5069199, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.buy_execution": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "buy_execution"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.507133, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.dio_execution_selected": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "dio_execution_selected"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.5073469, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.engine_executions": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "engine_executions"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.507571, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.preconfigured_execution": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "preconfigured_execution"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.5077891, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.reorder_execution": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "reorder_execution"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.5080068, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.replenishment_executions": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "replenishment_executions"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.508225, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.store_transfers_executions": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "store_transfers_executions"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.508441, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.store_transfers_execution_aggregates": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.508654, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.store_stock_items": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "store_stock_items"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.508866, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.scenario": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.scenario", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "scenario"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.5090811, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.warehouses": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "warehouses"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.509293, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.skus": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.skus", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "skus"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.509509, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.seasons": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.seasons", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "seasons"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.509723, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.sales": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.sales", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "sales"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.5099351, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.warehouse_stock_items": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "warehouse_stock_items"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.510147, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.VILET_globaldomain_public.databasechangelog": {"database": "VILET_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.VILET_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "VILET_globaldomain_public", "databasechangelog"], "source_name": "VILET_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "VILET_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.510359, "unrendered_database": "VILET_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.admin_users": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "admin_users"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.510605, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.first_allocation_execution": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "first_allocation_execution"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.510844, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.category": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.category", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "category"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.category", "created_at": 1754287422.511074, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.category_item_included": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "category_item_included"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.511302, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.products": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.products", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "products"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.products", "created_at": 1754287422.5115252, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.product_history": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.product_history", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "product_history"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.511743, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.stores": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.stores", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "stores"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.511957, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.families": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.families", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "families"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.families", "created_at": 1754287422.512168, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.cron": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.cron", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "cron"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.51238, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.buy_execution": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "buy_execution"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.512589, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.dio_execution_selected": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "dio_execution_selected"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.5128052, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.engine_executions": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "engine_executions"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.513016, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.preconfigured_execution": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "preconfigured_execution"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.513227, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.reorder_execution": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "reorder_execution"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.513437, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.replenishment_executions": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "replenishment_executions"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.513647, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_executions": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "store_transfers_executions"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.513856, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_execution_aggregates": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.514076, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.store_stock_items": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "store_stock_items"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.514293, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.scenario": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.scenario", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "scenario"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.5145102, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.warehouses": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "warehouses"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.514726, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.skus": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.skus", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "skus"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.514942, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.seasons": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.seasons", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "seasons"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.515152, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.sales": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.sales", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "sales"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.5153651, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.warehouse_stock_items": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "warehouse_stock_items"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.515578, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WHITESTUFF_globaldomain_public.databasechangelog": {"database": "WHITESTUFF_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WHITESTUFF_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "WHITESTUFF_globaldomain_public", "databasechangelog"], "source_name": "WHITESTUFF_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WHITESTUFF_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.5157912, "unrendered_database": "WHITESTUFF_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.admin_users": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "admin_users", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.admin_users", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "admin_users"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "admin_users", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "admin users for each tenant", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.admin_users", "created_at": 1754287422.51601, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.first_allocation_execution": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "first_allocation_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.first_allocation_execution", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "first_allocation_execution"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "first_allocation_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "first allocation execution", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.first_allocation_execution", "created_at": 1754287422.516222, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.category": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "category", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.category", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "category"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.category", "created_at": 1754287422.51657, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.category_item_included": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "category_item_included", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.category_item_included", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "category_item_included"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "category_item_included", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "category item included table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.category_item_included", "created_at": 1754287422.516809, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.products": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "products", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.products", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "products"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "products", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "products table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.products", "created_at": 1754287422.517018, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.product_history": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "product_history", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.product_history", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "product_history"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "product_history", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "product history table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.product_history", "created_at": 1754287422.517235, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.stores": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "stores", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.stores", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "stores"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "stores", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "stores table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.stores", "created_at": 1754287422.517448, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.families": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "families", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.families", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "families"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "families", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "families table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.families", "created_at": 1754287422.5176609, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.cron": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "cron", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.cron", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "cron"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "cron", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "cron table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.cron", "created_at": 1754287422.517868, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.buy_execution": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "buy_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.buy_execution", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "buy_execution"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "buy_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "buy execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.buy_execution", "created_at": 1754287422.518074, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.dio_execution_selected": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "dio_execution_selected", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.dio_execution_selected", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "dio_execution_selected"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "dio_execution_selected", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "dio execution selected table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.dio_execution_selected", "created_at": 1754287422.51828, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.engine_executions": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "engine_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.engine_executions", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "engine_executions"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "engine_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "engine executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.engine_executions", "created_at": 1754287422.5184839, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.preconfigured_execution": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "preconfigured_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.preconfigured_execution", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "preconfigured_execution"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "preconfigured_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "preconfigured execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.preconfigured_execution", "created_at": 1754287422.5186949, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.reorder_execution": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "reorder_execution", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.reorder_execution", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "reorder_execution"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "reorder_execution", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "reorder execution table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.reorder_execution", "created_at": 1754287422.5189, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.replenishment_executions": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "replenishment_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.replenishment_executions", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "replenishment_executions"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "replenishment_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "replenishment executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.replenishment_executions", "created_at": 1754287422.519104, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.store_transfers_executions": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_executions", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.store_transfers_executions", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "store_transfers_executions"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_executions", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers executions table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.store_transfers_executions", "created_at": 1754287422.5193138, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.store_transfers_execution_aggregates": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "store_transfers_execution_aggregates", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "store_transfers_execution_aggregates"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_transfers_execution_aggregates", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store transfers execution aggregates table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.store_transfers_execution_aggregates", "created_at": 1754287422.519521, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.store_stock_items": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "store_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.store_stock_items", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "store_stock_items"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "store_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "store stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.store_stock_items", "created_at": 1754287422.519726, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.scenario": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "scenario", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.scenario", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "scenario"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "scenario", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "scenarios table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.scenario", "created_at": 1754287422.519935, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.warehouses": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "warehouses", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.warehouses", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "warehouses"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouses", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouses table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.warehouses", "created_at": 1754287422.520142, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.skus": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "skus", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.skus", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "skus"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "skus", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "skus table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.skus", "created_at": 1754287422.5203469, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.seasons": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "seasons", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.seasons", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "seasons"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "seasons", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "seasons table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.seasons", "created_at": 1754287422.5205839, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.sales": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "sales", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.sales", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "sales"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "sales", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "sales table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.sales", "created_at": 1754287422.520881, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.warehouse_stock_items": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "warehouse_stock_items", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.warehouse_stock_items", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "warehouse_stock_items"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "warehouse_stock_items", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "warehouse stock items table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.warehouse_stock_items", "created_at": 1754287422.521101, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.WOOLRICH_globaldomain_public.databasechangelog": {"database": "WOOLRICH_main_prod_db", "schema": "globaldomain_public", "name": "databasechangelog", "resource_type": "source", "package_name": "nextail", "path": "models/internal/__sources.yml", "original_file_path": "models/internal/__sources.yml", "unique_id": "source.nextail.WOOLRICH_globaldomain_public.databasechangelog", "fqn": ["nextail", "internal", "WOOLRICH_globaldomain_public", "databasechangelog"], "source_name": "WOOLRICH_globaldomain_public", "source_description": "Raw data sources from our data warehouse", "loader": "", "identifier": "databasechangelog", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "liquibase database changelog table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "WOOLRICH_main_prod_db.globaldomain_public.databasechangelog", "created_at": 1754287422.521342, "unrendered_database": "WOOLRICH_main_prod_db", "unrendered_schema": "globaldomain_public", "doc_blocks": []}, "source.nextail.okta_public.login_event": {"database": "alltenants_costmonitor_allenvs_db", "schema": "okta_private", "name": "login_event", "resource_type": "source", "package_name": "nextail", "path": "models/okta/__sources.yml", "original_file_path": "models/okta/__sources.yml", "unique_id": "source.nextail.okta_public.login_event", "fqn": ["nextail", "okta", "okta_public", "login_event"], "source_name": "okta_public", "source_description": "OKTA-related tables", "loader": "", "identifier": "login_event", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "loaded_at_query": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "OKTA Login events table", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true, "event_time": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "loaded_at_field": null, "loaded_at_query": null}, "patch_path": null, "unrendered_config": {"loaded_at_field": null, "loaded_at_query": null}, "relation_name": "alltenants_costmonitor_allenvs_db.okta_private.login_event", "created_at": 1754287422.521568, "unrendered_database": "alltenants_costmonitor_allenvs_db", "unrendered_schema": "okta_private", "doc_blocks": []}}, "macros": {"macro.nextail.cents_to_dollars": {"name": "cents_to_dollars", "resource_type": "macro", "package_name": "nextail", "path": "macros/cents_to_dollars.sql", "original_file_path": "macros/cents_to_dollars.sql", "unique_id": "macro.nextail.cents_to_dollars", "macro_sql": "{% macro cents_to_dollars(column_name) -%}\n    {{ return(adapter.dispatch('cents_to_dollars')(column_name)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.nextail.default__cents_to_dollars"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.76455, "supported_languages": null}, "macro.nextail.default__cents_to_dollars": {"name": "default__cents_to_dollars", "resource_type": "macro", "package_name": "nextail", "path": "macros/cents_to_dollars.sql", "original_file_path": "macros/cents_to_dollars.sql", "unique_id": "macro.nextail.default__cents_to_dollars", "macro_sql": "{% macro default__cents_to_dollars(column_name) -%}\n    ({{ column_name }} / 100)::numeric(16, 2)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.764682, "supported_languages": null}, "macro.nextail.postgres__cents_to_dollars": {"name": "postgres__cents_to_dollars", "resource_type": "macro", "package_name": "nextail", "path": "macros/cents_to_dollars.sql", "original_file_path": "macros/cents_to_dollars.sql", "unique_id": "macro.nextail.postgres__cents_to_dollars", "macro_sql": "{% macro postgres__cents_to_dollars(column_name) -%}\n    ({{ column_name }}::numeric(16, 2) / 100)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7647831, "supported_languages": null}, "macro.nextail.bigquery__cents_to_dollars": {"name": "bigquery__cents_to_dollars", "resource_type": "macro", "package_name": "nextail", "path": "macros/cents_to_dollars.sql", "original_file_path": "macros/cents_to_dollars.sql", "unique_id": "macro.nextail.bigquery__cents_to_dollars", "macro_sql": "{% macro bigquery__cents_to_dollars(column_name) %}\n    round(cast(({{ column_name }} / 100) as numeric), 2)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.76488, "supported_languages": null}, "macro.nextail.fabric__cents_to_dollars": {"name": "fabric__cents_to_dollars", "resource_type": "macro", "package_name": "nextail", "path": "macros/cents_to_dollars.sql", "original_file_path": "macros/cents_to_dollars.sql", "unique_id": "macro.nextail.fabric__cents_to_dollars", "macro_sql": "{% macro fabric__cents_to_dollars(column_name) %}\n    cast({{ column_name }} / 100 as numeric(16,2))\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7649689, "supported_languages": null}, "macro.nextail.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "nextail", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.nextail.set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n    {% do return(dbt_snowflake_query_tags.set_query_tag(\n        extra={\n\n            'service': 'data_platform',\n            'module': 'internal_reporting',\n            'submodule': 'dbt_execution',\n            'operation': ' '.join(invocation_args_dict['invocation_command'].split()[:2]) if invocation_args_dict['invocation_command'] else None,\n            'tenant': var('tenant', 'default_tenant'),\n            'environment': env_var('NX_ENVIRONMENT', 'development'),\n            'correlation_id': None,\n            'execution_id': None,\n\n            'dbt_specific': {\n                'invocation_id': invocation_id,\n                'model_database': model.database,\n                'model_schema': model.schema,\n                'model_name': model.name,\n                'model_original_file_path': model.original_file_path,\n                'model_alias': model.alias,\n                'model_config': model.config,\n                \n                'model_tags': model.tags or None,\n\n                'model_created_at': model.created_at or None,\n            }            \n        }\n    )) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.765963, "supported_languages": null}, "macro.nextail.unset_query_tag": {"name": "unset_query_tag", "resource_type": "macro", "package_name": "nextail", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.nextail.unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n    {% do return(dbt_snowflake_query_tags.unset_query_tag(original_query_tag)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.766112, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog": {"name": "snowflake__get_catalog", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog", "macro_sql": "{% macro snowflake__get_catalog(information_schema, schemas) -%}\n\n    {% set query %}\n        with tables as (\n            {{ snowflake__get_catalog_tables_sql(information_schema) }}\n            {{ snowflake__get_catalog_schemas_where_clause_sql(schemas) }}\n        ),\n        columns as (\n            {{ snowflake__get_catalog_columns_sql(information_schema) }}\n            {{ snowflake__get_catalog_schemas_where_clause_sql(schemas) }}\n        )\n        {{ snowflake__get_catalog_results_sql() }}\n    {%- endset -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql", "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7671611, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_relations": {"name": "snowflake__get_catalog_relations", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_relations", "macro_sql": "{% macro snowflake__get_catalog_relations(information_schema, relations) -%}\n\n    {% set query %}\n        with tables as (\n            {{ snowflake__get_catalog_tables_sql(information_schema) }}\n            {{ snowflake__get_catalog_relations_where_clause_sql(relations) }}\n        ),\n        columns as (\n            {{ snowflake__get_catalog_columns_sql(information_schema) }}\n            {{ snowflake__get_catalog_relations_where_clause_sql(relations) }}\n        )\n        {{ snowflake__get_catalog_results_sql() }}\n    {%- endset -%}\n\n    {{ return(run_query(query)) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql", "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.767518, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_tables_sql": {"name": "snowflake__get_catalog_tables_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_tables_sql", "macro_sql": "{% macro snowflake__get_catalog_tables_sql(information_schema) -%}\n    select\n        table_catalog as \"table_database\",\n        table_schema as \"table_schema\",\n        table_name as \"table_name\",\n        case\n            when is_dynamic = 'YES' and table_type = 'BASE TABLE' THEN 'DYNAMIC TABLE'\n            else table_type\n        end as \"table_type\",\n        comment as \"table_comment\",\n\n        -- note: this is the _role_ that owns the table\n        table_owner as \"table_owner\",\n\n        'Clustering Key' as \"stats:clustering_key:label\",\n        clustering_key as \"stats:clustering_key:value\",\n        'The key used to cluster this table' as \"stats:clustering_key:description\",\n        (clustering_key is not null) as \"stats:clustering_key:include\",\n\n        'Row Count' as \"stats:row_count:label\",\n        row_count as \"stats:row_count:value\",\n        'An approximate count of rows in this table' as \"stats:row_count:description\",\n        (row_count is not null) as \"stats:row_count:include\",\n\n        'Approximate Size' as \"stats:bytes:label\",\n        bytes as \"stats:bytes:value\",\n        'Approximate size of the table as reported by Snowflake' as \"stats:bytes:description\",\n        (bytes is not null) as \"stats:bytes:include\",\n\n        'Last Modified' as \"stats:last_modified:label\",\n        to_varchar(convert_timezone('UTC', last_altered), 'yyyy-mm-dd HH24:MI'||'UTC') as \"stats:last_modified:value\",\n        'The timestamp for last update/change' as \"stats:last_modified:description\",\n        (last_altered is not null and table_type='BASE TABLE') as \"stats:last_modified:include\"\n    from {{ information_schema }}.tables\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7677062, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_columns_sql": {"name": "snowflake__get_catalog_columns_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_columns_sql", "macro_sql": "{% macro snowflake__get_catalog_columns_sql(information_schema) -%}\n    select\n        table_catalog as \"table_database\",\n        table_schema as \"table_schema\",\n        table_name as \"table_name\",\n\n        column_name as \"column_name\",\n        ordinal_position as \"column_index\",\n        data_type as \"column_type\",\n        comment as \"column_comment\"\n    from {{ information_schema }}.columns\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.767814, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_results_sql": {"name": "snowflake__get_catalog_results_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_results_sql", "macro_sql": "{% macro snowflake__get_catalog_results_sql() -%}\n    select *\n    from tables\n    join columns using (\"table_database\", \"table_schema\", \"table_name\")\n    order by \"column_index\"\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.767887, "supported_languages": null}, "macro.dbt_snowflake.snowflake__catalog_equals": {"name": "snowflake__catalog_equals", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__catalog_equals", "macro_sql": "{% macro snowflake__catalog_equals(field, value) %}\n    \"{{ field }}\" ilike '{{ value }}' and upper(\"{{ field }}\") = upper('{{ value }}')\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.768026, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql": {"name": "snowflake__get_catalog_schemas_where_clause_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_schemas_where_clause_sql", "macro_sql": "{% macro snowflake__get_catalog_schemas_where_clause_sql(schemas) -%}\n    where ({%- for schema in schemas -%}\n        ({{ snowflake__catalog_equals('table_schema', schema) }}){%- if not loop.last %} or {% endif -%}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__catalog_equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.768258, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql": {"name": "snowflake__get_catalog_relations_where_clause_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_catalog_relations_where_clause_sql", "macro_sql": "{% macro snowflake__get_catalog_relations_where_clause_sql(relations) -%}\n    where (\n        {%- for relation in relations -%}\n            {% if relation.schema and relation.identifier %}\n                (\n                    {{ snowflake__catalog_equals('table_schema', relation.schema) }}\n                    and {{ snowflake__catalog_equals('table_name', relation.identifier) }}\n                )\n            {% elif relation.schema %}\n                (\n                    {{ snowflake__catalog_equals('table_schema', relation.schema) }}\n                )\n            {% else %}\n                {% do exceptions.raise_compiler_error(\n                    '`get_catalog_relations` requires a list of relations, each with a schema'\n                ) %}\n            {% endif %}\n\n            {%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__catalog_equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7687411, "supported_languages": null}, "macro.dbt_snowflake.get_column_comment_sql": {"name": "get_column_comment_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.get_column_comment_sql", "macro_sql": "{% macro get_column_comment_sql(column_name, column_dict) -%}\n  {% if (column_name|upper in column_dict) -%}\n    {% set matched_column = column_name|upper -%}\n  {% elif (column_name|lower in column_dict) -%}\n    {% set matched_column = column_name|lower -%}\n  {% elif (column_name in column_dict) -%}\n    {% set matched_column = column_name -%}\n  {% else -%}\n    {% set matched_column = None -%}\n  {% endif -%}\n  {% if matched_column -%}\n    {{ adapter.quote(column_name) }} COMMENT $${{ column_dict[matched_column]['description'] | replace('$', '[$]') }}$$\n  {%- else -%}\n    {{ adapter.quote(column_name) }} COMMENT $$$$\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.770538, "supported_languages": null}, "macro.dbt_snowflake.get_persist_docs_column_list": {"name": "get_persist_docs_column_list", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.get_persist_docs_column_list", "macro_sql": "{% macro get_persist_docs_column_list(model_columns, query_columns) %}\n(\n  {% for column_name in query_columns %}\n    {{ get_column_comment_sql(column_name, model_columns) }}\n    {{- \", \" if not loop.last else \"\" }}\n  {% endfor %}\n)\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_column_comment_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7707741, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_columns_in_relation": {"name": "snowflake__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_columns_in_relation", "macro_sql": "{% macro snowflake__get_columns_in_relation(relation) -%}\n  {%- set sql -%}\n    describe table {{ relation.render() }}\n  {%- endset -%}\n  {%- set result = run_query(sql) -%}\n\n  {% set maximum = 10000 %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many columns in relation {{ relation.render() }}! dbt can only get\n      information about relations with fewer than {{ maximum }} columns.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n\n  {% set columns = [] %}\n  {% for row in result %}\n    {% do columns.append(api.Column.from_description(row['name'], row['type'])) %}\n  {% endfor %}\n  {% do return(columns) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.771422, "supported_languages": null}, "macro.dbt_snowflake.snowflake__show_object_metadata": {"name": "snowflake__show_object_metadata", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__show_object_metadata", "macro_sql": "{% macro snowflake__show_object_metadata(relation) %}\n  {%- set sql -%}\n    show objects in {{ relation.include(identifier=False) }} starts with '{{ relation.identifier }}' limit 1\n  {%- endset -%}\n\n  {%- set result = run_query(sql) -%}\n  {{ return(result) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.771679, "supported_languages": null}, "macro.dbt_snowflake.snowflake__list_schemas": {"name": "snowflake__list_schemas", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__list_schemas", "macro_sql": "{% macro snowflake__list_schemas(database) -%}\n  {# 10k limit from here: https://docs.snowflake.net/manuals/sql-reference/sql/show-schemas.html#usage-notes #}\n  {% set maximum = 10000 %}\n  {% set sql -%}\n    show terse schemas in database {{ database }}\n    limit {{ maximum }}\n  {%- endset %}\n  {% set result = run_query(sql) %}\n  {% if (result | length) >= maximum %}\n    {% set msg %}\n      Too many schemas in database {{ database }}! dbt can only get\n      information about databases with fewer than {{ maximum }} schemas.\n    {% endset %}\n    {% do exceptions.raise_compiler_error(msg) %}\n  {% endif %}\n  {{ return(result) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7721221, "supported_languages": null}, "macro.dbt_snowflake.snowflake__check_schema_exists": {"name": "snowflake__check_schema_exists", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__check_schema_exists", "macro_sql": "{% macro snowflake__check_schema_exists(information_schema, schema) -%}\n  {% call statement('check_schema_exists', fetch_result=True) -%}\n        select count(*)\n        from {{ information_schema }}.schemata\n        where upper(schema_name) = upper('{{ schema }}')\n            and upper(catalog_name) = upper('{{ information_schema.database }}')\n  {%- endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.772393, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_column_type": {"name": "snowflake__alter_column_type", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_column_type", "macro_sql": "{% macro snowflake__alter_column_type(relation, column_name, new_column_type) -%}\n  {% call statement('alter_column_type') %}\n    alter {{ relation.get_ddl_prefix_for_alter() }} table {{ relation.render() }} alter {{ adapter.quote(column_name) }} set data type {{ new_column_type }};\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.772758, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_relation_comment": {"name": "snowflake__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_relation_comment", "macro_sql": "{% macro snowflake__alter_relation_comment(relation, relation_comment) -%}\n    {%- if relation.is_dynamic_table -%}\n        {%- set relation_type = 'dynamic table' -%}\n    {%- else -%}\n        {%- set relation_type = relation.type -%}\n    {%- endif -%}\n    comment on {{ relation_type }} {{ relation.render() }} IS $${{ relation_comment | replace('$', '[$]') }}$$;\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.773136, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_column_comment": {"name": "snowflake__alter_column_comment", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_column_comment", "macro_sql": "{% macro snowflake__alter_column_comment(relation, column_dict) -%}\n    {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n    {% if relation.is_dynamic_table -%}\n        {% set relation_type = \"table\" %}\n    {% else -%}\n        {% set relation_type = relation.type %}\n    {% endif %}\n    alter {{ relation.get_ddl_prefix_for_alter() }} {{ relation_type }} {{ relation.render() }} alter\n    {% for column_name in existing_columns if (column_name in existing_columns) or (column_name|lower in existing_columns) %}\n        {{ get_column_comment_sql(column_name, column_dict) }} {{- ',' if not loop.last else ';' }}\n    {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_column_comment_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7738628, "supported_languages": null}, "macro.dbt_snowflake.get_current_query_tag": {"name": "get_current_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.get_current_query_tag", "macro_sql": "{% macro get_current_query_tag() -%}\n  {{ return(run_query(\"show parameters like 'query_tag' in session\").rows[0]['value']) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.774057, "supported_languages": null}, "macro.dbt_snowflake.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.set_query_tag", "macro_sql": "{% macro set_query_tag() -%}\n    {{ return(adapter.dispatch('set_query_tag', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.774202, "supported_languages": null}, "macro.dbt_snowflake.snowflake__set_query_tag": {"name": "snowflake__set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__set_query_tag", "macro_sql": "{% macro snowflake__set_query_tag() -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% set original_query_tag = get_current_query_tag() %}\n    {{ log(\"Setting query_tag to '\" ~ new_query_tag ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(new_query_tag)) %}\n    {{ return(original_query_tag)}}\n  {% endif %}\n  {{ return(none)}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7745972, "supported_languages": null}, "macro.dbt_snowflake.unset_query_tag": {"name": "unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n    {{ return(adapter.dispatch('unset_query_tag', 'dbt')(original_query_tag)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.774754, "supported_languages": null}, "macro.dbt_snowflake.snowflake__unset_query_tag": {"name": "snowflake__unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__unset_query_tag", "macro_sql": "{% macro snowflake__unset_query_tag(original_query_tag) -%}\n  {% set new_query_tag = config.get('query_tag') %}\n  {% if new_query_tag %}\n    {% if original_query_tag %}\n      {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n      {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n      {{ log(\"No original query_tag, unsetting parameter.\") }}\n      {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.775147, "supported_languages": null}, "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns": {"name": "snowflake__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns", "macro_sql": "{% macro snowflake__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n    {% if relation.is_dynamic_table -%}\n        {% set relation_type = \"dynamic table\" %}\n    {% else -%}\n        {% set relation_type = relation.type %}\n    {% endif %}\n\n    {% if add_columns %}\n\n    {% set sql -%}\n       alter {{ relation.get_ddl_prefix_for_alter() }} {{ relation_type }} {{ relation.render() }} add column\n          {% for column in add_columns %}\n            {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n          {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n    {% endif %}\n\n    {% if remove_columns %}\n\n    {% set sql -%}\n        alter {{ relation.get_ddl_prefix_for_alter() }} {{ relation_type }} {{ relation.render() }} drop column\n            {% for column in remove_columns %}\n                {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n    {%- endset -%}\n\n    {% do run_query(sql) %}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.775957, "supported_languages": null}, "macro.dbt_snowflake.snowflake_dml_explicit_transaction": {"name": "snowflake_dml_explicit_transaction", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake_dml_explicit_transaction", "macro_sql": "{% macro snowflake_dml_explicit_transaction(dml) %}\n  {#\n    Use this macro to wrap all INSERT, MERGE, UPDATE, DELETE, and TRUNCATE\n    statements before passing them into run_query(), or calling in the 'main' statement\n    of a materialization\n  #}\n  {% set dml_transaction -%}\n    begin;\n    {{ dml }};\n    commit;\n  {%- endset %}\n\n  {% do return(dml_transaction) %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.77614, "supported_languages": null}, "macro.dbt_snowflake.snowflake__truncate_relation": {"name": "snowflake__truncate_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_snowflake.snowflake__truncate_relation", "macro_sql": "{% macro snowflake__truncate_relation(relation) -%}\n  {% set truncate_dml %}\n    truncate table {{ relation.render() }}\n  {% endset %}\n  {% call statement('truncate_relation') -%}\n    {{ snowflake_dml_explicit_transaction(truncate_dml) }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.776354, "supported_languages": null}, "macro.dbt_snowflake.snowflake__copy_grants": {"name": "snowflake__copy_grants", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/apply_grants.sql", "original_file_path": "macros/apply_grants.sql", "unique_id": "macro.dbt_snowflake.snowflake__copy_grants", "macro_sql": "{% macro snowflake__copy_grants() %}\n    {% set copy_grants = config.get('copy_grants', False) %}\n    {{ return(copy_grants) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.776608, "supported_languages": null}, "macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement": {"name": "snowflake__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/apply_grants.sql", "original_file_path": "macros/apply_grants.sql", "unique_id": "macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro snowflake__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(False) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.776703, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_relation_last_modified": {"name": "snowflake__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/metadata.sql", "original_file_path": "macros/metadata.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_relation_last_modified", "macro_sql": "{% macro snowflake__get_relation_last_modified(information_schema, relations) -%}\n\n  {%- call statement('last_modified', fetch_result=True) -%}\n        select table_schema as schema,\n               table_name as identifier,\n               last_altered as last_modified,\n               {{ current_timestamp() }} as snapshotted_at\n        from {{ information_schema }}.tables\n        where (\n          {%- for relation in relations -%}\n            (upper(table_schema) = upper('{{ relation.schema }}') and\n             upper(table_name) = upper('{{ relation.identifier }}')){%- if not loop.last %} or {% endif -%}\n          {%- endfor -%}\n        )\n  {%- endcall -%}\n\n  {{ return(load_result('last_modified')) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.777217, "supported_languages": null}, "macro.dbt_snowflake.materialization_test_snowflake": {"name": "materialization_test_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "unique_id": "macro.dbt_snowflake.materialization_test_snowflake", "macro_sql": "{%- materialization test, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set relations = materialization_test_default() %}\n    {% do unset_query_tag(original_query_tag) %}\n    {{ return(relations) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_test_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.777513, "supported_languages": ["sql"]}, "macro.dbt_snowflake.snowflake__load_csv_rows": {"name": "snowflake__load_csv_rows", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_snowflake.snowflake__load_csv_rows", "macro_sql": "{% macro snowflake__load_csv_rows(model, agate_table) %}\n    {% set batch_size = get_batch_size() %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query('BEGIN', auto_begin=False) %}\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n        {% do adapter.add_query('COMMIT', auto_begin=False) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7788858, "supported_languages": null}, "macro.dbt_snowflake.materialization_seed_snowflake": {"name": "materialization_seed_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/seed.sql", "original_file_path": "macros/materializations/seed.sql", "unique_id": "macro.dbt_snowflake.materialization_seed_snowflake", "macro_sql": "{% materialization seed, adapter='snowflake' %}\n    {% set original_query_tag = set_query_tag() %}\n\n    {% set relations = materialization_seed_default() %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {{ return(relations) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_seed_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.779142, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_view_snowflake": {"name": "materialization_view_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/view.sql", "original_file_path": "macros/materializations/view.sql", "unique_id": "macro.dbt_snowflake.materialization_view_snowflake", "macro_sql": "{% materialization view, adapter='snowflake' -%}\n\n    {% set original_query_tag = set_query_tag() %}\n    {% set to_return = snowflake__create_or_replace_view() %}\n\n    {% set target_relation = this.incorporate(type='view') %}\n\n    {% do persist_docs(target_relation, model, for_columns=false) %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {% do return(to_return) %}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt_snowflake.snowflake__create_or_replace_view", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.779582, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_table_snowflake": {"name": "materialization_table_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/table.sql", "original_file_path": "macros/materializations/table.sql", "unique_id": "macro.dbt_snowflake.materialization_table_snowflake", "macro_sql": "{% materialization table, adapter='snowflake', supported_languages=['sql', 'python']%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set language = model['language'] -%}\n\n  {% set grant_config = config.get('grants') %}\n\n  {%- set existing_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n  {%- set target_relation = api.Relation.create(\n\tidentifier=identifier,\n\tschema=schema,\n\tdatabase=database,\n\ttype='table',\n\ttable_format=catalog_relation.table_format\n   ) -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if target_relation.needs_to_drop(existing_relation) %}\n    {{ drop_relation_if_exists(existing_relation) }}\n  {% endif %}\n\n  {% call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.780884, "supported_languages": ["sql", "python"]}, "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type": {"name": "dbt_snowflake_get_tmp_relation_type", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type", "macro_sql": "{% macro dbt_snowflake_get_tmp_relation_type(strategy, unique_key, language) %}\n{%- set tmp_relation_type = config.get('tmp_relation_type') -%}\n  /* {#\n       High-level principles:\n       If we are running multiple statements (DELETE + INSERT),\n       and we want to guarantee identical inputs to both statements,\n       then we must first save the model query results as a temporary table\n       (which presumably comes with a performance cost).\n       If we are running a single statement (MERGE or INSERT alone),\n       we _may_ save the model query definition as a view instead,\n       for (presumably) faster overall incremental processing.\n\n       Low-level specifics:\n       If an invalid option is specified, then we will raise an\n       excpetion with corresponding message.\n\n       Languages other than SQL (like Python) will use a temporary table.\n       With the default strategy of merge, the user may choose between a temporary\n       table and view (defaulting to view).\n\n       The append strategy can use a view because it will run a single INSERT statement.\n\n       When unique_key is none, the delete+insert and microbatch strategies can use a view beacuse a\n       single INSERT statement is run with no DELETES as part of the statement.\n       Otherwise, play it safe by using a temporary table.\n  #} */\n\n  {% if language == \"python\" and tmp_relation_type is not none %}\n    {% do exceptions.raise_compiler_error(\n      \"Python models currently only support 'table' for tmp_relation_type but \"\n       ~ tmp_relation_type ~ \" was specified.\"\n    ) %}\n  {% endif %}\n\n  {% if strategy in [\"delete+insert\", \"microbatch\"] and tmp_relation_type is not none and tmp_relation_type != \"table\" and unique_key is not none %}\n    {% do exceptions.raise_compiler_error(\n      \"In order to maintain consistent results when `unique_key` is not none,\n      the `\" ~ strategy ~ \"` strategy only supports `table` for `tmp_relation_type` but \"\n      ~ tmp_relation_type ~ \" was specified.\"\n      )\n  %}\n  {% endif %}\n\n  {% if language != \"sql\" %}\n    {{ return(\"table\") }}\n  {% elif tmp_relation_type == \"table\" %}\n    {{ return(\"table\") }}\n  {% elif tmp_relation_type == \"view\" %}\n    {{ return(\"view\") }}\n  {% elif strategy in (\"default\", \"merge\", \"append\", \"insert_overwrite\") %}\n    {{ return(\"view\") }}\n  {% elif strategy in [\"delete+insert\", \"microbatch\"] and unique_key is none %}\n    {{ return(\"view\") }}\n  {% else %}\n    {{ return(\"table\") }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.782984, "supported_languages": null}, "macro.dbt_snowflake.materialization_incremental_snowflake": {"name": "materialization_incremental_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_snowflake.materialization_incremental_snowflake", "macro_sql": "{% materialization incremental, adapter='snowflake', supported_languages=['sql', 'python'] -%}\n\n  {% set original_query_tag = set_query_tag() %}\n\n  {#-- Set vars --#}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n  {%- set language = model['language'] -%}\n\n  {%- set identifier = this.name -%}\n  {%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n  {%- set target_relation = api.Relation.create(\n\tidentifier=identifier,\n\tschema=schema,\n\tdatabase=database,\n\ttype='table',\n\ttable_format=catalog_relation.table_format\n  ) -%}\n\n  {% set existing_relation = load_relation(this) %}\n\n  {#-- The temp relation will be a view (faster) or temp table, depending on upsert/merge strategy --#}\n  {%- set unique_key = config.get('unique_key') -%}\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set tmp_relation_type = dbt_snowflake_get_tmp_relation_type(incremental_strategy, unique_key, language) %}\n  {% set tmp_relation = make_temp_relation(this).incorporate(type=tmp_relation_type) %}\n\n  {% set grant_config = config.get('grants') %}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  {% if existing_relation is none %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif existing_relation.is_view %}\n    {#-- Can't overwrite a view with a table - we must drop --#}\n    {{ log(\"Dropping relation \" ~ target_relation ~ \" because it is a view and this model is a table.\") }}\n    {% do adapter.drop_relation(existing_relation) %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif full_refresh_mode %}\n    {% if target_relation.needs_to_drop(existing_relation) %}\n      {{ drop_relation_if_exists(existing_relation) }}\n    {% endif %}\n    {%- call statement('main', language=language) -%}\n      {{ create_table_as(False, target_relation, compiled_code, language) }}\n    {%- endcall -%}\n\n  {% elif target_relation.table_format != existing_relation.table_format %}\n    {% do exceptions.raise_compiler_error(\n        \"Unable to update the incremental model `\" ~ target_relation.identifier ~ \"` from `\" ~ existing_relation.table_format ~ \"` to `\" ~ target_relation.table_format ~ \"` due to Snowflake limitation. Please execute with --full-refresh to drop the table and recreate in the new catalog.'\"\n      )\n    %}\n\n  {% else %}\n    {#-- Create the temp relation, either as a view or as a temp table --#}\n    {% if tmp_relation_type == 'view' %}\n        {%- call statement('create_tmp_relation') -%}\n          {{ snowflake__create_view_as_with_temp_flag(tmp_relation, compiled_code, True) }}\n        {%- endcall -%}\n    {% else %}\n        {%- call statement('create_tmp_relation', language=language) -%}\n          {{ create_table_as(True, tmp_relation, compiled_code, language) }}\n        {%- endcall -%}\n    {% endif %}\n\n    {% do adapter.expand_target_column_types(\n           from_relation=tmp_relation,\n           to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': tmp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n\n    {%- call statement('main') -%}\n      {{ strategy_sql_macro_func(strategy_arg_dict) }}\n    {%- endcall -%}\n  {% endif %}\n\n  {% do drop_relation_if_exists(tmp_relation) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {% set target_relation = target_relation.incorporate(type='table') %}\n\n  {% set should_revoke =\n   should_revoke(existing_relation.is_table, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% do unset_query_tag(original_query_tag) %}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.should_full_refresh", "macro.dbt.load_relation", "macro.dbt_snowflake.dbt_snowflake_get_tmp_relation_type", "macro.dbt.make_temp_relation", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.drop_relation_if_exists", "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro.dbt.process_schema_changes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7866418, "supported_languages": ["sql", "python"]}, "macro.dbt_snowflake.snowflake__get_incremental_default_sql": {"name": "snowflake__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental.sql", "original_file_path": "macros/materializations/incremental.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_default_sql", "macro_sql": "{% macro snowflake__get_incremental_default_sql(arg_dict) %}\n  {{ return(get_incremental_merge_sql(arg_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.786815, "supported_languages": null}, "macro.dbt_snowflake.materialization_snapshot_snowflake": {"name": "materialization_snapshot_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/snapshot.sql", "original_file_path": "macros/materializations/snapshot.sql", "unique_id": "macro.dbt_snowflake.materialization_snapshot_snowflake", "macro_sql": "{% materialization snapshot, adapter='snowflake' %}\n    {% set original_query_tag = set_query_tag() %}\n    {% set relations = materialization_snapshot_default() %}\n\n    {% do unset_query_tag(original_query_tag) %}\n\n    {{ return(relations) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.materialization_snapshot_default", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.787127, "supported_languages": ["sql"]}, "macro.dbt_snowflake.materialization_dynamic_table_snowflake": {"name": "materialization_dynamic_table_snowflake", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.materialization_dynamic_table_snowflake", "macro_sql": "{% materialization dynamic_table, adapter='snowflake' %}\n\n    {% set query_tag = set_query_tag() %}\n\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.DynamicTable) %}\n\n    {{ run_hooks(pre_hooks) }}\n\n    {% set build_sql = dynamic_table_get_build_sql(existing_relation, target_relation) %}\n\n    {% if build_sql == '' %}\n        {{ dynamic_table_execute_no_op(target_relation) }}\n    {% else %}\n        {{ dynamic_table_execute_build_sql(build_sql, existing_relation, target_relation) }}\n    {% endif %}\n\n    {{ run_hooks(post_hooks) }}\n\n    {% do unset_query_tag(query_tag) %}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.load_cached_relation", "macro.dbt.run_hooks", "macro.dbt_snowflake.dynamic_table_get_build_sql", "macro.dbt_snowflake.dynamic_table_execute_no_op", "macro.dbt_snowflake.dynamic_table_execute_build_sql", "macro.dbt_snowflake.unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.788218, "supported_languages": ["sql"]}, "macro.dbt_snowflake.dynamic_table_get_build_sql": {"name": "dynamic_table_get_build_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_get_build_sql", "macro_sql": "{% macro dynamic_table_get_build_sql(existing_relation, target_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_dynamic_table %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = snowflake__get_dynamic_table_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"No configuration changes were identified on: `\" ~ target_relation ~ \"`. Continuing.\") }}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = snowflake__get_alter_dynamic_table_as_sql(existing_relation, configuration_changes, target_relation, sql) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'continue', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario: `\" ~ on_configuration_change ~ \"`\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_sql", "macro.dbt.get_replace_sql", "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes", "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.789282, "supported_languages": null}, "macro.dbt_snowflake.dynamic_table_execute_no_op": {"name": "dynamic_table_execute_no_op", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_execute_no_op", "macro_sql": "{% macro dynamic_table_execute_no_op(relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.789481, "supported_languages": null}, "macro.dbt_snowflake.dynamic_table_execute_build_sql": {"name": "dynamic_table_execute_build_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.dynamic_table_execute_build_sql", "macro_sql": "{% macro dynamic_table_execute_build_sql(build_sql, existing_relation, target_relation) %}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.789873, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes": {"name": "snowflake__get_dynamic_table_configuration_changes", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/dynamic_table.sql", "original_file_path": "macros/materializations/dynamic_table.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_dynamic_table_configuration_changes", "macro_sql": "{% macro snowflake__get_dynamic_table_configuration_changes(existing_relation, new_config) -%}\n    {% set _existing_dynamic_table = snowflake__describe_dynamic_table(existing_relation) %}\n    {% set _configuration_changes = existing_relation.dynamic_table_config_changeset(_existing_dynamic_table, new_config.model) %}\n    {% do return(_configuration_changes) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__describe_dynamic_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.790108, "supported_languages": null}, "macro.dbt_snowflake.snowflake__can_clone_table": {"name": "snowflake__can_clone_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_snowflake.snowflake__can_clone_table", "macro_sql": "{% macro snowflake__can_clone_table() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7902982, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_or_replace_clone": {"name": "snowflake__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/clone.sql", "original_file_path": "macros/materializations/clone.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_or_replace_clone", "macro_sql": "{% macro snowflake__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace\n      {{ \"transient\" if config.get(\"transient\", true) }}\n      table {{ this_relation }}\n      clone {{ defer_relation }}\n      {{ \"copy grants\" if config.get(\"copy_grants\", false) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.790535, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_merge_sql": {"name": "snowflake__get_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_merge_sql", "macro_sql": "{% macro snowflake__get_merge_sql(target, source_sql, unique_key, dest_columns, incremental_predicates) -%}\n\n    {#\n       Workaround for Snowflake not being happy with a merge on a constant-false predicate.\n       When no unique_key is provided, this macro will do a regular insert. If a unique_key\n       is provided, then this macro will do a proper merge instead.\n    #}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute='name')) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {%- set dml -%}\n    {%- if unique_key is none -%}\n\n        {{ sql_header if sql_header is not none }}\n\n        insert into {{ target }} ({{ dest_cols_csv }})\n        (\n            select {{ dest_cols_csv }}\n            from {{ source_sql }}\n        )\n\n    {%- else -%}\n\n        {{ default__get_merge_sql(target, source_sql, unique_key, dest_columns, incremental_predicates) }}\n\n    {%- endif -%}\n    {%- endset -%}\n\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.default__get_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7915032, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql": {"name": "snowflake__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql", "macro_sql": "{% macro snowflake__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) %}\n    {% set dml = default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.791756, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_merge_sql": {"name": "snowflake__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_merge_sql", "macro_sql": "{% macro snowflake__snapshot_merge_sql(target, source, insert_cols) %}\n    {% set dml = default__snapshot_merge_sql(target, source, insert_cols) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.7919629, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_incremental_append_sql": {"name": "snowflake__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_append_sql", "macro_sql": "{% macro snowflake__get_incremental_append_sql(get_incremental_append_sql) %}\n    {% set dml = default__get_incremental_append_sql(get_incremental_append_sql) %}\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql", "macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.792135, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_incremental_microbatch_sql": {"name": "snowflake__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/merge.sql", "original_file_path": "macros/materializations/incremental/merge.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_incremental_microbatch_sql", "macro_sql": "{% macro snowflake__get_incremental_microbatch_sql(arg_dict) %}\n    {%- set target = arg_dict[\"target_relation\"] -%}\n    {%- set source = arg_dict[\"temp_relation\"] -%}\n    {%- set dest_columns = arg_dict[\"dest_columns\"] -%}\n    {%- set incremental_predicates = [] if arg_dict.get('incremental_predicates') is none else arg_dict.get('incremental_predicates') -%}\n\n    {#-- Add additional incremental_predicates to filter for batch --#}\n    {% if model.batch and model.batch.event_time_start -%}\n        {% do incremental_predicates.append(\"DBT_INTERNAL_TARGET.\" ~ model.config.event_time ~ \" >= to_timestamp_tz('\" ~ model.config.__dbt_internal_microbatch_event_time_start ~ \"')\") %}\n    {% endif %}\n    {% if model.batch and model.batch.event_time_end -%}\n        {% do incremental_predicates.append(\"DBT_INTERNAL_TARGET.\" ~ model.config.event_time ~ \" < to_timestamp_tz('\" ~ model.config.__dbt_internal_microbatch_event_time_end ~ \"')\") %}\n    {% endif %}\n    {% do arg_dict.update({'incremental_predicates': incremental_predicates}) %}\n\n    delete from {{ target }} DBT_INTERNAL_TARGET\n    where (\n    {% for predicate in incremental_predicates %}\n        {%- if not loop.first %}and {% endif -%} {{ predicate }}\n    {% endfor %}\n    );\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.793112, "supported_languages": null}, "macro.dbt_snowflake.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental/insert_overwrite.sql", "unique_id": "macro.dbt_snowflake.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) -%}\n  {{ adapter.dispatch('insert_overwrite_get_sql', 'dbt')(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"]) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__insert_overwrite_get_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.793552, "supported_languages": null}, "macro.dbt_snowflake.snowflake__insert_overwrite_get_sql": {"name": "snowflake__insert_overwrite_get_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/materializations/incremental/insert_overwrite.sql", "original_file_path": "macros/materializations/incremental/insert_overwrite.sql", "unique_id": "macro.dbt_snowflake.snowflake__insert_overwrite_get_sql", "macro_sql": "{% macro snowflake__insert_overwrite_get_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dml -%}\n\n    {%- set overwrite_columns = config.get('overwrite_columns', []) -%}\n\n    {{ config.get('sql_header', '') }}\n\n    {% set target_columns_list = '(' ~ ', '.join(overwrite_columns) ~ ')' if overwrite_columns else '' %}\n    {% set source_query_columns_list = ', '.join(overwrite_columns) if overwrite_columns else '*' %}\n    insert overwrite into {{ target.render() }} {{ target_columns_list }}\n        select {{ source_query_columns_list }}\n        from {{ source.render() }}\n\n    {%- endset -%}\n\n    {% do return(snowflake_dml_explicit_transaction(dml)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake_dml_explicit_transaction"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.794105, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_sql": {"name": "snowflake__get_drop_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_sql", "macro_sql": "{% macro snowflake__get_drop_sql(relation) %}\n\n    {% if relation.is_dynamic_table %}\n        {{ snowflake__get_drop_dynamic_table_sql(relation) }}\n\n    {% else %}\n        {{ default__get_drop_sql(relation) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql", "macro.dbt.default__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.794361, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_sql": {"name": "snowflake__get_replace_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_sql", "macro_sql": "{% macro snowflake__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {% if existing_relation.is_dynamic_table and target_relation.is_dynamic_table %}\n        {{ snowflake__get_replace_dynamic_table_sql(target_relation, sql) }}\n\n    {% else %}\n        {{ default__get_replace_sql(existing_relation, target_relation, sql) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql", "macro.dbt.default__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.794682, "supported_languages": null}, "macro.dbt_snowflake.snowflake__rename_relation": {"name": "snowflake__rename_relation", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__rename_relation", "macro_sql": "{% macro snowflake__rename_relation(from_relation, to_relation) -%}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ to_relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.794892, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_backup_sql": {"name": "snowflake__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_backup_sql", "macro_sql": "{%- macro snowflake__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    -- use `render` to ensure that the fully qualified name is used\n    {{ get_rename_sql(relation, backup_relation.render()) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.795181, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_sql": {"name": "snowflake__get_create_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_sql", "macro_sql": "{% macro snowflake__get_create_sql(relation, sql) %}\n\n    {% if relation.is_dynamic_table %}\n        {{ snowflake__get_create_dynamic_table_as_sql(relation, sql) }}\n\n    {% else %}\n        {{ default__get_create_sql(relation, sql) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql", "macro.dbt.default__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.795462, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_intermediate_sql": {"name": "snowflake__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_intermediate_sql", "macro_sql": "{%- macro snowflake__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- use `render` to ensure that the fully qualified name is used\n    {{ get_rename_sql(intermediate_relation, relation.render()) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.795685, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_table_sql": {"name": "snowflake__get_drop_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_table_sql", "macro_sql": "{% macro snowflake__get_drop_table_sql(relation) %}\n    drop table if exists {{ relation }} cascade\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.795802, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_table_sql": {"name": "snowflake__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_table_sql", "macro_sql": "{% macro snowflake__get_replace_table_sql(relation, sql) %}\n    {{ snowflake__create_table_as(False, relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.79596, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_table_sql": {"name": "snowflake__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_table_sql", "macro_sql": "{%- macro snowflake__get_rename_table_sql(relation, new_name) -%}\n    /*\n    Rename or move a table to the new name.\n\n    Args:\n        relation: SnowflakeRelation - relation to be renamed\n        new_name: Union[str, SnowflakeRelation] - new name for `relation`\n            if providing a string, the default database/schema will be used if that string is just an identifier\n            if providing a SnowflakeRelation, `render` will be used to produce a fully qualified name\n    Returns: templated string\n    */\n    alter table {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.796154, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_table_as": {"name": "snowflake__create_table_as", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_table_as", "macro_sql": "{% macro snowflake__create_table_as(temporary, relation, compiled_code, language='sql') -%}\n\n    {%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n    {%- if language == 'sql' -%}\n        {%- if temporary -%}\n            {{ snowflake__create_table_temporary_sql(relation, compiled_code) }}\n        {%- elif catalog_relation.catalog_type == 'INFO_SCHEMA' -%}\n            {{ snowflake__create_table_info_schema_sql(relation, compiled_code) }}\n        {%- elif catalog_relation.catalog_type == 'BUILT_IN' -%}\n            {{ snowflake__create_table_built_in_sql(relation, compiled_code) }}\n        {%- else -%}\n            {% do exceptions.raise_compiler_error('Unexpected model config for: ' ~ relation) %}\n        {%- endif -%}\n\n    {%- elif language == 'python' -%}\n        {%- if catalog_relation.catalog_type == 'BUILT_IN' %}\n            {% do exceptions.raise_compiler_error('Iceberg is incompatible with Python models. Please use a SQL model for the iceberg format.') %}\n        {%- else -%}\n            {{ py_write_table(compiled_code, relation) }}\n        {%- endif %}\n\n    {%- else -%}\n        {% do exceptions.raise_compiler_error(\"snowflake__create_table_as macro didn't get supported language, it got %s\" % language) %}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_temporary_sql", "macro.dbt_snowflake.snowflake__create_table_info_schema_sql", "macro.dbt_snowflake.snowflake__create_table_built_in_sql", "macro.dbt_snowflake.py_write_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.797879, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_table_temporary_sql": {"name": "snowflake__create_table_temporary_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_table_temporary_sql", "macro_sql": "{% macro snowflake__create_table_temporary_sql(relation, compiled_code) -%}\n{#-\n    Implements CREATE TEMPORARY TABLE and CREATE TEMPORARY TABLE ... AS SELECT:\n    https://docs.snowflake.com/en/sql-reference/sql/create-table\n    https://docs.snowflake.com/en/sql-reference/sql/create-table#create-table-as-select-also-referred-to-as-ctas\n-#}\n\n{%- set contract_config = config.get('contract') -%}\n{%- if contract_config.enforced -%}\n    {{- get_assert_columns_equivalent(compiled_code) -}}\n    {%- set compiled_code = get_select_subquery(compiled_code) -%}\n{%- endif -%}\n\n{%- set sql_header = config.get('sql_header', none) -%}\n{{ sql_header if sql_header is not none }}\n\ncreate or replace temporary table {{ relation }}\n    {%- if contract_config.enforced %}\n    {{ get_table_columns_and_constraints() }}\n    {%- endif %}\nas (\n    {{ compiled_code }}\n    )\n;\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_select_subquery", "macro.dbt.get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.798338, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_table_info_schema_sql": {"name": "snowflake__create_table_info_schema_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_table_info_schema_sql", "macro_sql": "{% macro snowflake__create_table_info_schema_sql(relation, compiled_code) -%}\n{#-\n    Implements CREATE TABLE and CREATE TABLE ... AS SELECT:\n    https://docs.snowflake.com/en/sql-reference/sql/create-table\n    https://docs.snowflake.com/en/sql-reference/sql/create-table#create-table-as-select-also-referred-to-as-ctas\n-#}\n\n{%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n{%- if catalog_relation.is_transient -%}\n    {%- set transient='transient ' -%}\n{%- else -%}\n    {%- set transient='' -%}\n{%- endif -%}\n\n{%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n{%- set row_access_policy = config.get('row_access_policy', default=none) -%}\n{%- set table_tag = config.get('table_tag', default=none) -%}\n\n{%- set contract_config = config.get('contract') -%}\n{%- if contract_config.enforced -%}\n    {{- get_assert_columns_equivalent(compiled_code) -}}\n    {%- set compiled_code = get_select_subquery(compiled_code) -%}\n{%- endif -%}\n\n{%- set sql_header = config.get('sql_header', none) -%}\n{{ sql_header if sql_header is not none }}\n\ncreate or replace {{ transient }}table {{ relation }}\n    {%- set contract_config = config.get('contract') -%}\n    {%- if contract_config.enforced %}\n    {{ get_table_columns_and_constraints() }}\n    {%- endif %}\n    {% if copy_grants -%} copy grants {%- endif %}\n    {% if row_access_policy -%} with row access policy {{ row_access_policy }} {%- endif %}\n    {% if table_tag -%} with tag ({{ table_tag }}) {%- endif %}\n    as (\n        {%- if catalog_relation.cluster_by is not none -%}\n        select * from (\n            {{ compiled_code }}\n        )\n        order by (\n            {{ catalog_relation.cluster_by }}\n        )\n        {%- else -%}\n        {{ compiled_code }}\n        {%- endif %}\n    )\n;\n\n{% if catalog_relation.cluster_by is not none -%}\nalter table {{ relation }} cluster by ({{ catalog_relation.cluster_by }});\n{%- endif -%}\n\n{% if catalog_relation.automatic_clustering and catalog_relation.cluster_by is not none %}\nalter table {{ relation }} resume recluster;\n{%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_select_subquery", "macro.dbt.get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.799607, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_table_built_in_sql": {"name": "snowflake__create_table_built_in_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_table_built_in_sql", "macro_sql": "{% macro snowflake__create_table_built_in_sql(relation, compiled_code) -%}\n{#-\n    Implements CREATE ICEBERG TABLE and CREATE ICEBERG TABLE ... AS SELECT (Snowflake as the Iceberg catalog):\n    https://docs.snowflake.com/en/sql-reference/sql/create-iceberg-table-snowflake\n\n    Limitations:\n    - Iceberg does not support temporary tables (use a standard Snowflake table)\n-#}\n\n{%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n{%- set copy_grants = config.get('copy_grants', default=false) -%}\n\n{%- set row_access_policy = config.get('row_access_policy', default=none) -%}\n{%- set table_tag = config.get('table_tag', default=none) -%}\n\n{%- set contract_config = config.get('contract') -%}\n{%- if contract_config.enforced -%}\n    {{- get_assert_columns_equivalent(compiled_code) -}}\n    {%- set compiled_code = get_select_subquery(compiled_code) -%}\n{%- endif -%}\n\n{%- set sql_header = config.get('sql_header', none) -%}\n{{ sql_header if sql_header is not none }}\n\ncreate or replace iceberg table {{ relation }}\n    {%- if contract_config.enforced %}\n    {{ get_table_columns_and_constraints() }}\n    {%- endif %}\n    {{ optional('external_volume', catalog_relation.external_volume, \"'\") }}\n    catalog = 'SNOWFLAKE'  -- required, and always SNOWFLAKE for built-in Iceberg tables\n    base_location = '{{ catalog_relation.base_location }}'\n    {{ optional('storage_serialization_policy', catalog_relation.storage_serialization_policy, \"'\")}}\n    {{ optional('max_data_extension_time_in_days', catalog_relation.max_data_extension_time_in_days)}}\n    {{ optional('data_retention_time_in_days', catalog_relation.data_retention_time_in_days)}}\n    {{ optional('change_tracking', catalog_relation.change_tracking)}}\n    {% if row_access_policy -%} with row access policy {{ row_access_policy }} {%- endif %}\n    {% if table_tag -%} with tag ({{ table_tag }}) {%- endif %}\n    {% if copy_grants -%} copy grants {%- endif %}\nas (\n    {%- if catalog_relation.cluster_by is not none -%}\n    select * from (\n        {{ compiled_code }}\n    )\n    order by (\n        {{ catalog_relation.cluster_by }}\n    )\n    {%- else -%}\n    {{ compiled_code }}\n    {%- endif %}\n    )\n;\n\n{% if catalog_relation.cluster_by is not none -%}\nalter iceberg table {{ relation }} cluster by ({{ catalog_relation.cluster_by }});\n{%- endif -%}\n\n{% if catalog_relation.automatic_clustering and catalog_relation.cluster_by is not none %}\nalter iceberg table {{ relation }} resume recluster;\n{%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_select_subquery", "macro.dbt.get_table_columns_and_constraints", "macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.801397, "supported_languages": null}, "macro.dbt_snowflake.py_write_table": {"name": "py_write_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt_snowflake.py_write_table", "macro_sql": "{% macro py_write_table(compiled_code, target_relation) %}\n\n{%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n{% if catalog_relation.is_transient %}\n    {%- set table_type='transient' -%}\n{% endif %}\n\n{{ compiled_code }}\n\n\ndef materialize(session, df, target_relation):\n    # make sure pandas exists\n    import importlib.util\n    package_name = 'pandas'\n    if importlib.util.find_spec(package_name):\n        import pandas\n        if isinstance(df, pandas.core.frame.DataFrame):\n            session.use_database(target_relation.database)\n            session.use_schema(target_relation.schema)\n            # session.write_pandas does not have overwrite function\n            df = session.createDataFrame(df)\n    {% set target_relation_name = resolve_model_name(target_relation) %}\n    df.write.mode(\"overwrite\").save_as_table('{{ target_relation_name }}', table_type='{{table_type}}')\n\n\ndef main(session):\n    dbt = dbtObj(session.table)\n    df = model(dbt, session)\n    materialize(session, df, dbt.this)\n    return \"OK\"\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.801832, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_view_sql": {"name": "snowflake__get_drop_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_view_sql", "macro_sql": "{% macro snowflake__get_drop_view_sql(relation) %}\n    drop view if exists {{ relation }} cascade\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.801992, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_view_sql": {"name": "snowflake__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_view_sql", "macro_sql": "{% macro snowflake__get_replace_view_sql(relation, sql) %}\n    {{ snowflake__create_view_as(relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8024771, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_rename_view_sql": {"name": "snowflake__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_rename_view_sql", "macro_sql": "{%- macro snowflake__get_rename_view_sql(relation, new_name) -%}\n    /*\n    Rename or move a view to the new name.\n\n    Args:\n        relation: SnowflakeRelation - relation to be renamed\n        new_name: Union[str, SnowflakeRelation] - new name for `relation`\n            if providing a string, the default database/schema will be used if that string is just an identifier\n            if providing a SnowflakeRelation, `render` will be used to produce a fully qualified name\n    Returns: templated string\n    */\n    alter view {{ relation }} rename to {{ new_name }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.802748, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag": {"name": "snowflake__create_view_as_with_temp_flag", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag", "macro_sql": "{% macro snowflake__create_view_as_with_temp_flag(relation, sql, is_temporary=False) -%}\n  {%- set secure = config.get('secure', default=false) -%}\n  {%- set copy_grants = config.get('copy_grants', default=false) -%}\n  {%- set row_access_policy = config.get('row_access_policy', default=none) -%}\n  {%- set table_tag = config.get('table_tag', default=none) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create or replace {% if secure -%}\n    secure\n  {%- endif %} {% if is_temporary -%}\n    temporary\n  {%- endif %} view {{ relation }}\n  {% if config.persist_column_docs() -%}\n    {% set model_columns = model.columns %}\n    {% set query_columns = get_columns_in_query(sql) %}\n    {{ get_persist_docs_column_list(model_columns, query_columns) }}\n\n  {%- endif %}\n  {%- set contract_config = config.get('contract') -%}\n  {%- if contract_config.enforced -%}\n    {{ get_assert_columns_equivalent(sql) }}\n  {%- endif %}\n  {% if copy_grants -%} copy grants {%- endif %}\n  {% if row_access_policy -%} with row access policy {{ row_access_policy }} {%- endif %}\n  {% if table_tag -%} with tag ({{ table_tag }}) {%- endif %}\n  as (\n    {{ sql }}\n  );\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt_snowflake.get_persist_docs_column_list", "macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8043242, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_view_as": {"name": "snowflake__create_view_as", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_view_as", "macro_sql": "{% macro snowflake__create_view_as(relation, sql) -%}\n  {{ snowflake__create_view_as_with_temp_flag(relation, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as_with_temp_flag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.804488, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_or_replace_view": {"name": "snowflake__create_or_replace_view", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_or_replace_view", "macro_sql": "{% macro snowflake__create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and not old_relation.is_view -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8054242, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql": {"name": "snowflake__get_drop_dynamic_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/drop.sql", "original_file_path": "macros/relations/dynamic_table/drop.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_drop_dynamic_table_sql", "macro_sql": "{% macro snowflake__get_drop_dynamic_table_sql(relation) %}\n    drop dynamic table if exists {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.805589, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql": {"name": "snowflake__get_replace_dynamic_table_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/replace.sql", "original_file_path": "macros/relations/dynamic_table/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_replace_dynamic_table_sql", "macro_sql": "{% macro snowflake__get_replace_dynamic_table_sql(relation, sql) -%}\n{#-\n    Produce DDL that replaces a dynamic table with a new dynamic table\n\n    Args:\n    - relation: Union[SnowflakeRelation, str]\n        - SnowflakeRelation - required for relation.render()\n        - str - is already the rendered relation name\n    - sql: str - the code defining the model\n    Globals:\n    - config: NodeConfig - contains the attribution required to produce a SnowflakeDynamicTableConfig\n    Returns:\n        A valid DDL statement which will result in a new dynamic table.\n-#}\n\n    {%- set dynamic_table = relation.from_config(config.model) -%}\n    {%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n    {%- if catalog_relation.catalog_type == 'INFO_SCHEMA' -%}\n        {{ snowflake__replace_dynamic_table_info_schema_sql(dynamic_table, relation, sql) }}\n    {%- elif catalog_relation.catalog_type == 'BUILT_IN' -%}\n        {{ snowflake__replace_dynamic_table_built_in_sql(dynamic_table, relation, sql) }}\n    {%- else -%}\n        {% do exceptions.raise_compiler_error('Unexpected model config for: ' ~ relation) %}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__replace_dynamic_table_info_schema_sql", "macro.dbt_snowflake.snowflake__replace_dynamic_table_built_in_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.807147, "supported_languages": null}, "macro.dbt_snowflake.snowflake__replace_dynamic_table_info_schema_sql": {"name": "snowflake__replace_dynamic_table_info_schema_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/replace.sql", "original_file_path": "macros/relations/dynamic_table/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__replace_dynamic_table_info_schema_sql", "macro_sql": "{% macro snowflake__replace_dynamic_table_info_schema_sql(dynamic_table, relation, sql) -%}\n{#-\n    Produce DDL that replaces an info schema dynamic table with a new info schema dynamic table\n\n    This follows the syntax outlined here:\n    https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#syntax\n\n    Args:\n    - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n    - relation: Union[SnowflakeRelation, str]\n        - SnowflakeRelation - required for relation.render()\n        - str - is already the rendered relation name\n    - sql: str - the code defining the model\n    Returns:\n        A valid DDL statement which will result in a new dynamic info schema table.\n-#}\n\ncreate or replace dynamic table {{ relation }}\n    target_lag = '{{ dynamic_table.target_lag }}'\n    warehouse = {{ dynamic_table.snowflake_warehouse }}\n    {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n    {{ optional('initialize', dynamic_table.initialize) }}\n    {{ optional('with row access policy', dynamic_table.row_access_policy, equals_char='') }}\n    {{ optional('with tag', dynamic_table.table_tag, quote_char='(', equals_char='') }}\n    as (\n        {{ sql }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.807621, "supported_languages": null}, "macro.dbt_snowflake.snowflake__replace_dynamic_table_built_in_sql": {"name": "snowflake__replace_dynamic_table_built_in_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/replace.sql", "original_file_path": "macros/relations/dynamic_table/replace.sql", "unique_id": "macro.dbt_snowflake.snowflake__replace_dynamic_table_built_in_sql", "macro_sql": "{% macro snowflake__replace_dynamic_table_built_in_sql(dynamic_table, relation, sql) -%}\n{#-\n    Produce DDL that replaces a dynamic iceberg table with a new dynamic iceberg table\n\n    This follows the syntax outlined here:\n    https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#create-dynamic-iceberg-table\n\n    Args:\n    - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n    - relation: Union[SnowflakeRelation, str]\n        - SnowflakeRelation - required for relation.render()\n        - str - is already the rendered relation name\n    - sql: str - the code defining the model\n    Returns:\n        A valid DDL statement which will result in a new dynamic iceberg table.\n-#}\n\n{%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\ncreate or replace dynamic iceberg table {{ relation }}\n    target_lag = '{{ dynamic_table.target_lag }}'\n    warehouse = {{ dynamic_table.snowflake_warehouse }}\n    {{ optional('external_volume', catalog_relation.external_volume, \"'\") }}\n    catalog = 'snowflake'\n    base_location = '{{ catalog_relation.base_location }}'\n    {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n    {{ optional('initialize', dynamic_table.initialize) }}\n    {{ optional('row_access_policy', dynamic_table.row_access_policy) }}\n    {{ optional('table_tag', dynamic_table.table_tag) }}\n    as (\n        {{ sql }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.808259, "supported_languages": null}, "macro.dbt_snowflake.snowflake__describe_dynamic_table": {"name": "snowflake__describe_dynamic_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/describe.sql", "original_file_path": "macros/relations/dynamic_table/describe.sql", "unique_id": "macro.dbt_snowflake.snowflake__describe_dynamic_table", "macro_sql": "{% macro snowflake__describe_dynamic_table(relation) %}\n    {%- set results = adapter.describe_dynamic_table(relation) -%}\n    {%- do return(results) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.808504, "supported_languages": null}, "macro.dbt_snowflake.snowflake__refresh_dynamic_table": {"name": "snowflake__refresh_dynamic_table", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/refresh.sql", "original_file_path": "macros/relations/dynamic_table/refresh.sql", "unique_id": "macro.dbt_snowflake.snowflake__refresh_dynamic_table", "macro_sql": "{% macro snowflake__refresh_dynamic_table(relation) -%}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n\n    alter dynamic table {{ relation }} refresh\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.808691, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql": {"name": "snowflake__get_alter_dynamic_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/alter.sql", "original_file_path": "macros/relations/dynamic_table/alter.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_alter_dynamic_table_as_sql", "macro_sql": "{% macro snowflake__get_alter_dynamic_table_as_sql(\n    existing_relation,\n    configuration_changes,\n    target_relation,\n    sql\n) -%}\n    {{- log('Applying ALTER to: ' ~ existing_relation) -}}\n\n    {% if configuration_changes.requires_full_refresh %}\n        {{- get_replace_sql(existing_relation, target_relation, sql) -}}\n\n    {% else %}\n\n        {%- set target_lag = configuration_changes.target_lag -%}\n        {%- if target_lag -%}{{- log('Applying UPDATE TARGET_LAG to: ' ~ existing_relation) -}}{%- endif -%}\n        {%- set snowflake_warehouse = configuration_changes.snowflake_warehouse -%}\n        {%- if snowflake_warehouse -%}{{- log('Applying UPDATE WAREHOUSE to: ' ~ existing_relation) -}}{%- endif -%}\n\n        alter dynamic table {{ existing_relation }} set\n            {% if target_lag %}target_lag = '{{ target_lag.context }}'{% endif %}\n            {% if snowflake_warehouse %}warehouse = {{ snowflake_warehouse.context }}{% endif %}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8094442, "supported_languages": null}, "macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql": {"name": "snowflake__get_create_dynamic_table_as_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/create.sql", "original_file_path": "macros/relations/dynamic_table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__get_create_dynamic_table_as_sql", "macro_sql": "{% macro snowflake__get_create_dynamic_table_as_sql(relation, sql) -%}\n\n    {%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n    {%- set dynamic_table = relation.from_config(config.model) -%}\n\n    {%- if catalog_relation.catalog_type == 'INFO_SCHEMA' -%}\n        {{ snowflake__create_dynamic_table_info_schema_sql(dynamic_table, relation, compiled_code) }}\n    {%- elif catalog_relation.catalog_type == 'BUILT_IN' -%}\n        {{ snowflake__create_dynamic_table_built_in_sql(dynamic_table, relation, compiled_code) }}\n    {%- else -%}\n        {% do exceptions.raise_compiler_error('Unexpected model config for: ' ~ relation) %}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_dynamic_table_info_schema_sql", "macro.dbt_snowflake.snowflake__create_dynamic_table_built_in_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8102772, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_dynamic_table_info_schema_sql": {"name": "snowflake__create_dynamic_table_info_schema_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/create.sql", "original_file_path": "macros/relations/dynamic_table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_dynamic_table_info_schema_sql", "macro_sql": "{% macro snowflake__create_dynamic_table_info_schema_sql(dynamic_table, relation, sql) -%}\n{#-\n    Produce DDL that creates an info schema dynamic table\n\n    Implements CREATE DYNAMIC TABLE:\n    https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#syntax\n\n    Args:\n    - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n    - relation: Union[SnowflakeRelation, str]\n        - SnowflakeRelation - required for relation.render()\n        - str - is already the rendered relation name\n    - sql: str - the code defining the model\n    Returns:\n        A valid DDL statement which will result in a new dynamic info schema table.\n-#}\n\n    create dynamic table {{ relation }}\n        target_lag = '{{ dynamic_table.target_lag }}'\n        warehouse = {{ dynamic_table.snowflake_warehouse }}\n        {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n        {{ optional('initialize', dynamic_table.initialize) }}\n        {{ optional('with row access policy', dynamic_table.row_access_policy, equals_char='') }}\n        {{ optional('with tag', dynamic_table.table_tag, quote_char='(', equals_char='') }}\n        as (\n            {{ sql }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.810715, "supported_languages": null}, "macro.dbt_snowflake.snowflake__create_dynamic_table_built_in_sql": {"name": "snowflake__create_dynamic_table_built_in_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/relations/dynamic_table/create.sql", "original_file_path": "macros/relations/dynamic_table/create.sql", "unique_id": "macro.dbt_snowflake.snowflake__create_dynamic_table_built_in_sql", "macro_sql": "{% macro snowflake__create_dynamic_table_built_in_sql(dynamic_table, relation, sql) -%}\n{#-\n    Produce DDL that creates a dynamic iceberg table\n\n    Implements CREATE DYNAMIC ICEBERG TABLE (Snowflake as the Iceberg catalog):\n    https://docs.snowflake.com/en/sql-reference/sql/create-dynamic-table#create-dynamic-iceberg-table\n\n    Args:\n    - dynamic_table: SnowflakeDynamicTableConfig - contains all of the configuration for the dynamic table\n    - relation: Union[SnowflakeRelation, str]\n        - SnowflakeRelation - required for relation.render()\n        - str - is already the rendered relation name\n    - sql: str - the code defining the model\n    Returns:\n        A valid DDL statement which will result in a new dynamic iceberg table.\n-#}\n\n{%- set catalog_relation = adapter.build_catalog_relation(config.model) -%}\n\n    create dynamic iceberg table {{ relation }}\n        target_lag = '{{ dynamic_table.target_lag }}'\n        warehouse = {{ dynamic_table.snowflake_warehouse }}\n        {{ optional('external_volume', catalog_relation.external_volume, \"'\") }}\n        catalog = 'SNOWFLAKE'  -- required, and always SNOWFLAKE for built-in Iceberg tables\n        base_location = '{{ catalog_relation.base_location }}'\n        {{ optional('refresh_mode', dynamic_table.refresh_mode) }}\n        {{ optional('initialize', dynamic_table.initialize) }}\n        {{ optional('row_access_policy', dynamic_table.row_access_policy) }}\n        {{ optional('table_tag', dynamic_table.table_tag) }}\n        as (\n            {{ sql }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.optional"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.81136, "supported_languages": null}, "macro.dbt_snowflake.optional": {"name": "optional", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/optional.sql", "original_file_path": "macros/utils/optional.sql", "unique_id": "macro.dbt_snowflake.optional", "macro_sql": "{% macro optional(name, value, quote_char = '', equals_char = '= ') %}\n{#-\n--  Insert optional DDL parameters only when their value is provided; makes DDL statements more readable\n--\n--  Args:\n--  - name: the name of the DDL option\n--  - value: the value of the DDL option, may be None\n--  - quote_char: the quote character to use (e.g. '\"', '(', etc.), leave blank if unnecessary\n--  - equals_char: the equals character to use (e.g. '= ')\n--  Returns:\n--      If the value is not None (e.g. provided by the user), return the option setting DDL\n--      If the value is None, return an empty string\n-#}\n{%- set quote_char_right = ')' if quote_char == '(' else quote_char -%}\n{% if value is not none %}{{ name }} {{ equals_char }}{{ quote_char }}{{ value }}{{ quote_char_right }}{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.811887, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp": {"name": "snowflake__current_timestamp", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp", "macro_sql": "{% macro snowflake__current_timestamp() -%}\n  convert_timezone('UTC', current_timestamp())\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.812122, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_string_as_time": {"name": "snowflake__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_string_as_time", "macro_sql": "{% macro snowflake__snapshot_string_as_time(timestamp) -%}\n  {%- set result = \"to_timestamp_ntz('\" ~ timestamp ~ \"')\" -%}\n  {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.812311, "supported_languages": null}, "macro.dbt_snowflake.snowflake__snapshot_get_time": {"name": "snowflake__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__snapshot_get_time", "macro_sql": "{% macro snowflake__snapshot_get_time() -%}\n  to_timestamp_ntz({{ current_timestamp() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.812424, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp_backcompat": {"name": "snowflake__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp_backcompat", "macro_sql": "{% macro snowflake__current_timestamp_backcompat() %}\n  current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.81252, "supported_languages": null}, "macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat": {"name": "snowflake__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/timestamps.sql", "original_file_path": "macros/utils/timestamps.sql", "unique_id": "macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro snowflake__current_timestamp_in_utc_backcompat() %}\n  convert_timezone('UTC', {{ snowflake__current_timestamp_backcompat() }})::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_backcompat", "macro.dbt_expectations.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8126369, "supported_languages": null}, "macro.dbt_snowflake.snowflake__escape_single_quotes": {"name": "snowflake__escape_single_quotes", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt_snowflake.snowflake__escape_single_quotes", "macro_sql": "{% macro snowflake__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8128169, "supported_languages": null}, "macro.dbt_snowflake.snowflake__right": {"name": "snowflake__right", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt_snowflake.snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0\n        then ''\n    else\n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8130019, "supported_languages": null}, "macro.dbt_snowflake.snowflake__safe_cast": {"name": "snowflake__safe_cast", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt_snowflake.snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    {% if type|upper == \"GEOMETRY\" -%}\n        try_to_geometry({{field}})\n    {% elif type|upper == \"GEOGRAPHY\" -%}\n        try_to_geography({{field}})\n    {% elif type|upper != \"VARIANT\" -%}\n        {#-- Snowflake try_cast does not support casting to variant, and expects the field as a string --#}\n        {% set field_as_string =  dbt.string_literal(field) if field is number else field %}\n        try_cast({{field_as_string}} as {{type}})\n    {% else -%}\n        {{ adapter.dispatch('cast', 'dbt')(field, type) }}\n    {% endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.cast", "macro.dbt_snowflake.snowflake__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.813598, "supported_languages": null}, "macro.dbt_snowflake.snowflake__cast": {"name": "snowflake__cast", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt_snowflake.snowflake__cast", "macro_sql": "{% macro snowflake__cast(field, type) %}\n    {% if (type|upper == \"GEOGRAPHY\") -%}\n        to_geography({{field}})\n    {% elif (type|upper == \"GEOMETRY\") -%}\n        to_geometry({{field}})\n    {% else -%}\n        cast({{field}} as {{type}})\n    {% endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.813959, "supported_languages": null}, "macro.dbt_snowflake.snowflake__bool_or": {"name": "snowflake__bool_or", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt_snowflake.snowflake__bool_or", "macro_sql": "{% macro snowflake__bool_or(expression) -%}\n\n    boolor_agg({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.814083, "supported_languages": null}, "macro.dbt_snowflake.snowflake__array_construct": {"name": "snowflake__array_construct", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt_snowflake.snowflake__array_construct", "macro_sql": "{% macro snowflake__array_construct(inputs, data_type) -%}\n    array_construct( {{ inputs|join(' , ') }} )\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.814235, "supported_languages": null}, "macro.dbt_snowflake.snowflake__list_relations_without_caching": {"name": "snowflake__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/metadata/list_relations_without_caching.sql", "original_file_path": "macros/metadata/list_relations_without_caching.sql", "unique_id": "macro.dbt_snowflake.snowflake__list_relations_without_caching", "macro_sql": "{% macro snowflake__list_relations_without_caching(schema_relation, max_iter=10000, max_results_per_iter=10000) %}\n\n    {%- if schema_relation is string -%}\n        {%- set schema = schema_relation -%}\n    {%- else -%}\n        {%- set schema = schema_relation.include(identifier=False) -%}\n    {%- endif -%}\n\n    {%- set max_results_per_iter = adapter.config.flags.get('list_relations_per_page', max_results_per_iter) -%}\n    {%- set max_iter = adapter.config.flags.get('list_relations_page_limit', max_iter) -%}\n    {%- set too_many_relations_msg -%}\n        dbt is currently configured to list a maximum of {{ max_results_per_iter * max_iter }} objects per schema.\n        {{ schema }} exceeds this limit. If this is expected, you may configure this limit\n        by setting list_relations_per_page and list_relations_page_limit in your project flags.\n        It is recommended to start by increasing list_relations_page_limit.\n    {%- endset -%}\n\n    {%- set paginated_state = namespace(paginated_results=[], watermark=none) -%}\n\n    {#-\n        loop an extra time to catch the breach of max iterations\n        Note: while range is 0-based, loop.index starts at 1\n    -#}\n    {%- for _ in range(max_iter + 1) -%}\n\n        {#-\n            raise a warning and break if we still didn't exit and we're beyond the max iterations limit\n            Note: while range is 0-based, loop.index starts at 1\n        -#}\n        {%- if loop.index == max_iter + 1 -%}\n            {%- do exceptions.warn(too_many_relations_msg) -%}\n            {%- break -%}\n        {%- endif -%}\n\n        {%- set show_objects_sql = snowflake__show_objects_sql(schema, max_results_per_iter, paginated_state.watermark) -%}\n        {%- set paginated_result = run_query(show_objects_sql) -%}\n        {%- do paginated_state.paginated_results.append(paginated_result) -%}\n        {%- set paginated_state.watermark = paginated_result.columns.get('name').values()[-1] -%}\n\n        {#- we got less results than the max_results_per_iter (includes 0), meaning we reached the end -#}\n        {%- if (paginated_result | length) < max_results_per_iter -%}\n            {%- break -%}\n        {%- endif -%}\n\n    {%- endfor -%}\n\n    {#- grab the first table in the paginated results to access the `merge` method -#}\n    {%- set agate_table = paginated_state.paginated_results[0] -%}\n    {%- do return(agate_table.merge(paginated_state.paginated_results)) -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__show_objects_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.815884, "supported_languages": null}, "macro.dbt_snowflake.snowflake__show_objects_sql": {"name": "snowflake__show_objects_sql", "resource_type": "macro", "package_name": "dbt_snowflake", "path": "macros/metadata/list_relations_without_caching.sql", "original_file_path": "macros/metadata/list_relations_without_caching.sql", "unique_id": "macro.dbt_snowflake.snowflake__show_objects_sql", "macro_sql": "{% macro snowflake__show_objects_sql(schema, max_results_per_iter=10000, watermark=none) %}\n\n{%- set _sql -%}\nshow objects in {{ schema }}\n    limit {{ max_results_per_iter }}\n    {% if watermark is not none -%} from '{{ watermark }}' {%- endif %}\n;\n{%- endset -%}\n\n{%- do return(_sql) -%}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8161979, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.816949, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.817119, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.81724, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8173592, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.817478, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.817734, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8179798, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.818228, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.81859, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    {%- set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() -%}\n\n    merge into {{ target.render() }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.{{ columns.dbt_scd_id }} = DBT_INTERNAL_DEST.{{ columns.dbt_scd_id }}\n\n    when matched\n     {% if config.get(\"dbt_valid_to_current\") %}\n\t{% set source_unique_key = (\"DBT_INTERNAL_DEST.\" ~ columns.dbt_valid_to) | trim %}\n\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\tand ({{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null)\n\n     {% else %}\n       and DBT_INTERNAL_DEST.{{ columns.dbt_valid_to }} is null\n     {% endif %}\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set {{ columns.dbt_valid_to }} = DBT_INTERNAL_SOURCE.{{ columns.dbt_valid_to }}\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.819272, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.821367, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.821517, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.821701, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set primary_key = config.get('unique_key') %}\n    {% set updated_at = config.get('updated_at') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.{{ columns.dbt_valid_from }} < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.822499, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8226402, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.822783, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.823914, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, model_config, target_exists) %}\n    {# The model_config parameter is no longer used, but is passed in anyway for compatibility. #}\n    {% set check_cols_config = config.get('check_cols') %}\n    {% set primary_key = config.get('unique_key') %}\n    {% set hard_deletes = adapter.get_hard_deletes_behavior(config) %}\n    {% set invalidate_hard_deletes = hard_deletes == 'invalidate' %}\n    {% set updated_at = config.get('updated_at') or snapshot_get_time() %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_args = api.Relation.scd_args(primary_key, updated_at) %}\n    {% set scd_id_expr = snapshot_hash_arguments(scd_args) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes,\n        \"hard_deletes\": hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8250759, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.826846, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation.render() }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.827091, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.827229, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.827302, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8274229, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.827515, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.827685, "supported_languages": null}, "macro.dbt.get_snapshot_table_column_names": {"name": "get_snapshot_table_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_snapshot_table_column_names", "macro_sql": "{% macro get_snapshot_table_column_names() %}\n    {{ return({'dbt_valid_to': 'dbt_valid_to', 'dbt_valid_from': 'dbt_valid_from', 'dbt_scd_id': 'dbt_scd_id', 'dbt_updated_at': 'dbt_updated_at', 'dbt_is_deleted': 'dbt_is_deleted'}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.82789, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n    {% if strategy.hard_deletes == 'new_record' %}\n        {% set new_scd_id = snapshot_hash_arguments([columns.dbt_scd_id, snapshot_get_time()]) %}\n    {% endif %}\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from {{ target_relation }}\n        where\n            {% if config.get('dbt_valid_to_current') %}\n\t\t{% set source_unique_key = columns.dbt_valid_to | trim %}\n\t\t{% set target_unique_key = config.get('dbt_valid_to_current') | trim %}\n\n\t\t{# The exact equals semantics between NULL values depends on the current behavior flag set. Also, update records if the source field is null #}\n                ( {{ equals(source_unique_key, target_unique_key) }} or {{ source_unique_key }} is null )\n            {% else %}\n                {{ columns.dbt_valid_to }} is null\n            {% endif %}\n\n    ),\n\n    insertions_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ get_dbt_valid_to_current(strategy, columns) }},\n            {{ strategy.scd_id }} as {{ columns.dbt_scd_id }}\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }},\n            {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n            {{ strategy.updated_at }} as {{ columns.dbt_valid_to }}\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n\n    deletes_source_data as (\n\n        select *, {{ unique_key_fields(strategy.unique_key) }}\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            ,'False' as {{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"snapshotted_data\") }}\n            or ({{ unique_key_is_not_null(strategy.unique_key, \"snapshotted_data\") }} and (\n               {{ strategy.row_changed }} {%- if strategy.hard_deletes == 'new_record' -%} or snapshotted_data.{{ columns.dbt_is_deleted }} = 'True' {% endif %}\n            )\n\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n\n        from updates_source_data as source_data\n        join snapshotted_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where (\n            {{ strategy.row_changed }}  {%- if strategy.hard_deletes == 'new_record' -%} or snapshotted_data.{{ columns.dbt_is_deleted }} = 'True' {% endif %}\n        )\n    )\n\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    ,\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_to }},\n            snapshotted_data.{{ columns.dbt_scd_id }}\n          {%- if strategy.hard_deletes == 'new_record' -%}\n            , snapshotted_data.{{ columns.dbt_is_deleted }}\n          {%- endif %}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n            where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n    )\n    {%- endif %}\n\n    {%- if strategy.hard_deletes == 'new_record' %}\n        {% set source_sql_cols = get_column_schema_from_query(source_sql) %}\n    ,\n    deletion_records as (\n\n        select\n            'insert' as dbt_change_type,\n            {%- for col in source_sql_cols -%}\n            snapshotted_data.{{ adapter.quote(col.column) }},\n            {% endfor -%}\n            {%- if strategy.unique_key | is_list -%}\n                {%- for key in strategy.unique_key -%}\n            snapshotted_data.{{ key }} as dbt_unique_key_{{ loop.index }},\n                {% endfor -%}\n            {%- else -%}\n            snapshotted_data.dbt_unique_key as dbt_unique_key,\n            {% endif -%}\n            {{ snapshot_get_time() }} as {{ columns.dbt_valid_from }},\n            {{ snapshot_get_time() }} as {{ columns.dbt_updated_at }},\n            snapshotted_data.{{ columns.dbt_valid_to }} as {{ columns.dbt_valid_to }},\n            {{ new_scd_id }} as {{ columns.dbt_scd_id }},\n            'True' as {{ columns.dbt_is_deleted }}\n        from snapshotted_data\n        left join deletes_source_data as source_data\n            on {{ unique_key_join_on(strategy.unique_key, \"snapshotted_data\", \"source_data\") }}\n        where {{ unique_key_is_null(strategy.unique_key, \"source_data\") }}\n\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.hard_deletes == 'invalidate' or strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletes\n    {%- endif %}\n    {%- if strategy.hard_deletes == 'new_record' %}\n    union all\n    select * from deletion_records\n    {%- endif %}\n\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_hash_arguments", "macro.dbt.snapshot_get_time", "macro.dbt.unique_key_fields", "macro.dbt.equals", "macro.dbt.get_dbt_valid_to_current", "macro.dbt.unique_key_join_on", "macro.dbt.unique_key_is_null", "macro.dbt.unique_key_is_not_null", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8308601, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8310459, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n    {% set columns = config.get('snapshot_table_column_names') or get_snapshot_table_column_names() %}\n\n    select *,\n        {{ strategy.scd_id }} as {{ columns.dbt_scd_id }},\n        {{ strategy.updated_at }} as {{ columns.dbt_updated_at }},\n        {{ strategy.updated_at }} as {{ columns.dbt_valid_from }},\n        {{ get_dbt_valid_to_current(strategy, columns) }}\n      {%- if strategy.hard_deletes == 'new_record' -%}\n        , 'False' as {{ columns.dbt_is_deleted }}\n      {% endif -%}\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_snapshot_table_column_names", "macro.dbt.get_dbt_valid_to_current"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.831466, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.83181, "supported_languages": null}, "macro.dbt.get_updated_at_column_data_type": {"name": "get_updated_at_column_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_updated_at_column_data_type", "macro_sql": "{% macro get_updated_at_column_data_type(snapshot_sql) %}\n    {% set snapshot_sql_column_schema = get_column_schema_from_query(snapshot_sql) %}\n    {% set dbt_updated_at_data_type = null %}\n    {% set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {% set ns.dbt_updated_at_data_type = null -%}\n    {% for column in snapshot_sql_column_schema %}\n    {%   if ((column.column == 'dbt_updated_at') or (column.column == 'DBT_UPDATED_AT')) %}\n    {%     set ns.dbt_updated_at_data_type = column.dtype %}\n    {%   endif %}\n    {% endfor %}\n    {{ return(ns.dbt_updated_at_data_type or none)  }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.832296, "supported_languages": null}, "macro.dbt.check_time_data_types": {"name": "check_time_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.check_time_data_types", "macro_sql": "{% macro check_time_data_types(sql) %}\n  {% set dbt_updated_at_data_type = get_updated_at_column_data_type(sql) %}\n  {% set snapshot_get_time_data_type = get_snapshot_get_time_data_type() %}\n  {% if snapshot_get_time_data_type is not none and dbt_updated_at_data_type is not none and snapshot_get_time_data_type != dbt_updated_at_data_type %}\n  {%   if exceptions.warn_snapshot_timestamp_data_types %}\n  {{     exceptions.warn_snapshot_timestamp_data_types(snapshot_get_time_data_type, dbt_updated_at_data_type) }}\n  {%   endif %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_updated_at_column_data_type", "macro.dbt.get_snapshot_get_time_data_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.832646, "supported_languages": null}, "macro.dbt.get_dbt_valid_to_current": {"name": "get_dbt_valid_to_current", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_dbt_valid_to_current", "macro_sql": "{% macro get_dbt_valid_to_current(strategy, columns) %}\n  {% set dbt_valid_to_current = config.get('dbt_valid_to_current') or \"null\" %}\n  coalesce(nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}), {{dbt_valid_to_current}})\n  as {{ columns.dbt_valid_to }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.832872, "supported_languages": null}, "macro.dbt.unique_key_fields": {"name": "unique_key_fields", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_fields", "macro_sql": "{% macro unique_key_fields(unique_key) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n            {{ key }} as dbt_unique_key_{{ loop.index }}\n            {%- if not loop.last %} , {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ unique_key }} as dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.833153, "supported_languages": null}, "macro.dbt.unique_key_join_on": {"name": "unique_key_join_on", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_join_on", "macro_sql": "{% macro unique_key_join_on(unique_key, identifier, from_identifier) %}\n    {% if unique_key | is_list %}\n        {% for key in unique_key %}\n\t    {% set source_unique_key = (identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {% set target_unique_key = (from_identifier ~ \".dbt_unique_key_\" ~ loop.index) | trim %}\n\t    {{ equals(source_unique_key, target_unique_key) }}\n            {%- if not loop.last %} and {%- endif %}\n        {% endfor %}\n    {% else %}\n        {{ identifier }}.dbt_unique_key = {{ from_identifier }}.dbt_unique_key\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8336158, "supported_languages": null}, "macro.dbt.unique_key_is_null": {"name": "unique_key_is_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_null", "macro_sql": "{% macro unique_key_is_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8337889, "supported_languages": null}, "macro.dbt.unique_key_is_not_null": {"name": "unique_key_is_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.unique_key_is_not_null", "macro_sql": "{% macro unique_key_is_not_null(unique_key, identifier) %}\n    {% if unique_key | is_list %}\n        {{ identifier }}.dbt_unique_key_1 is not null\n    {% else %}\n        {{ identifier }}.dbt_unique_key is not null\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.833961, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {# The model['config'] parameter below is no longer used, but passing anyway for compatibility #}\n  {# It was a dictionary of config, instead of the config object from the context #}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", model['config'], target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set build_or_select_sql = build_sql %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {% set columns = config.get(\"snapshot_table_column_names\") or get_snapshot_table_column_names() %}\n\n      {{ adapter.assert_valid_snapshot_target_given_strategy(target_relation, columns, strategy) }}\n\n      {% set build_or_select_sql = snapshot_staging_table(strategy, sql, target_relation) %}\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set remove_columns = ['dbt_change_type', 'DBT_CHANGE_TYPE', 'dbt_unique_key', 'DBT_UNIQUE_KEY'] %}\n      {% if unique_key | is_list %}\n          {% for key in strategy.unique_key %}\n              {{ remove_columns.append('dbt_unique_key_' + loop.index|string) }}\n              {{ remove_columns.append('DBT_UNIQUE_KEY_' + loop.index|string) }}\n          {% endfor %}\n      {% endif %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'in', remove_columns)\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n\n  {{ check_time_data_types(build_or_select_sql) }}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.get_snapshot_table_column_names", "macro.dbt.snapshot_staging_table", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.check_time_data_types", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8372312, "supported_languages": ["sql"]}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n  {% set limit = config.get('limit') %}\n\n  {% set sql_with_limit %}\n    {{ get_limit_subquery_sql(sql, limit) }}\n  {% endset %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n    {% set store_failures_as = config.get('store_failures_as') %}\n    -- if `--store-failures` is invoked via command line and `store_failures_as` is not set,\n    -- config.get('store_failures_as', 'table') returns None, not 'table'\n    {% if store_failures_as == none %}{% set store_failures_as = 'table' %}{% endif %}\n    {% if store_failures_as not in ['table', 'view'] %}\n        {{ exceptions.raise_compiler_error(\n            \"'\" ~ store_failures_as ~ \"' is not a valid value for `store_failures_as`. \"\n            \"Accepted values are: ['ephemeral', 'table', 'view']\"\n        ) }}\n    {% endif %}\n\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type=store_failures_as) -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ get_create_sql(target_relation, sql_with_limit) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {# Since the test failures have already been saved to the database, reuse that result rather than querying again #}\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql_with_limit %}\n\n  {% endif %}\n\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {# The limit has already been included above, and we do not want to duplicate it again. We also want to be safe for macro overrides treating `limit` as a required parameter. #}\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit=none)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql", "macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.get_create_sql", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.839114, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.839581, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.839835, "supported_languages": null}, "macro.dbt.get_unit_test_sql": {"name": "get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_unit_test_sql", "macro_sql": "{% macro get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n  {{ adapter.dispatch('get_unit_test_sql', 'dbt')(main_sql, expected_fixture_sql, expected_column_names) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_unit_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.84, "supported_languages": null}, "macro.dbt.default__get_unit_test_sql": {"name": "default__get_unit_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_unit_test_sql", "macro_sql": "{% macro default__get_unit_test_sql(main_sql, expected_fixture_sql, expected_column_names) -%}\n-- Build actual result given inputs\nwith dbt_internal_unit_test_actual as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%},{% endif %}{%- endfor -%}, {{ dbt.string_literal(\"actual\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ main_sql }}\n  ) _dbt_internal_unit_test_actual\n),\n-- Build expected result\ndbt_internal_unit_test_expected as (\n  select\n    {% for expected_column_name in expected_column_names %}{{expected_column_name}}{% if not loop.last -%}, {% endif %}{%- endfor -%}, {{ dbt.string_literal(\"expected\") }} as {{ adapter.quote(\"actual_or_expected\") }}\n  from (\n    {{ expected_fixture_sql }}\n  ) _dbt_internal_unit_test_expected\n)\n-- Union actual and expected results\nselect * from dbt_internal_unit_test_actual\nunion all\nselect * from dbt_internal_unit_test_expected\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.840489, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.840754, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.841057, "supported_languages": null}, "macro.dbt.materialization_unit_default": {"name": "materialization_unit_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/unit.sql", "original_file_path": "macros/materializations/tests/unit.sql", "unique_id": "macro.dbt.materialization_unit_default", "macro_sql": "{%- materialization unit, default -%}\n\n  {% set relations = [] %}\n\n  {% set expected_rows = config.get('expected_rows') %}\n  {% set expected_sql = config.get('expected_sql') %}\n  {% set tested_expected_column_names = expected_rows[0].keys() if (expected_rows | length ) > 0 else get_columns_in_query(sql) %} %}\n\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {% do run_query(get_create_table_as_sql(True, temp_relation, get_empty_subquery_sql(sql))) %}\n  {%- set columns_in_relation = adapter.get_columns_in_relation(temp_relation) -%}\n  {%- set column_name_to_data_types = {} -%}\n  {%- for column in columns_in_relation -%}\n  {%-   do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n  {%- endfor -%}\n\n  {% if not expected_sql %}\n  {%   set expected_sql = get_expected_sql(expected_rows, column_name_to_data_types) %}\n  {% endif %}\n  {% set unit_test_sql = get_unit_test_sql(sql, expected_sql, tested_expected_column_names) %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ unit_test_sql }}\n\n  {%- endcall %}\n\n  {% do adapter.drop_relation(temp_relation) %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query", "macro.dbt.make_temp_relation", "macro.dbt.run_query", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_empty_subquery_sql", "macro.dbt.get_expected_sql", "macro.dbt.get_unit_test_sql", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8422852, "supported_languages": ["sql"]}, "macro.dbt.materialization_materialized_view_default": {"name": "materialization_materialized_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialization_materialized_view_default", "macro_sql": "{% materialization materialized_view, default %}\n    {% set existing_relation = load_cached_relation(this) %}\n    {% set target_relation = this.incorporate(type=this.MaterializedView) %}\n    {% set intermediate_relation = make_intermediate_relation(target_relation) %}\n    {% set backup_relation_type = target_relation.MaterializedView if existing_relation is none else existing_relation.type %}\n    {% set backup_relation = make_backup_relation(target_relation, backup_relation_type) %}\n\n    {{ materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) }}\n\n        {% set build_sql = materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n        {% if build_sql == '' %}\n            {{ materialized_view_execute_no_op(target_relation) }}\n        {% else %}\n            {{ materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) }}\n        {% endif %}\n\n    {{ materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) }}\n\n    {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.materialized_view_setup", "macro.dbt.materialized_view_get_build_sql", "macro.dbt.materialized_view_execute_no_op", "macro.dbt.materialized_view_execute_build_sql", "macro.dbt.materialized_view_teardown"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.843619, "supported_languages": ["sql"]}, "macro.dbt.materialized_view_setup": {"name": "materialized_view_setup", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_setup", "macro_sql": "{% macro materialized_view_setup(backup_relation, intermediate_relation, pre_hooks) %}\n\n    -- backup_relation and intermediate_relation should not already exist in the database\n    -- it's possible these exist because of a previous run that exited unexpectedly\n    {% set preexisting_backup_relation = load_cached_relation(backup_relation) %}\n    {% set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) %}\n\n    -- drop the temp relations if they exist already in the database\n    {{ drop_relation_if_exists(preexisting_backup_relation) }}\n    {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n\n    {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.843929, "supported_languages": null}, "macro.dbt.materialized_view_teardown": {"name": "materialized_view_teardown", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_teardown", "macro_sql": "{% macro materialized_view_teardown(backup_relation, intermediate_relation, post_hooks) %}\n\n    -- drop the temp relations if they exist to leave the database clean for the next run\n    {{ drop_relation_if_exists(backup_relation) }}\n    {{ drop_relation_if_exists(intermediate_relation) }}\n\n    {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.844136, "supported_languages": null}, "macro.dbt.materialized_view_get_build_sql": {"name": "materialized_view_get_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_get_build_sql", "macro_sql": "{% macro materialized_view_get_build_sql(existing_relation, target_relation, backup_relation, intermediate_relation) %}\n\n    {% set full_refresh_mode = should_full_refresh() %}\n\n    -- determine the scenario we're in: create, full_refresh, alter, refresh data\n    {% if existing_relation is none %}\n        {% set build_sql = get_create_materialized_view_as_sql(target_relation, sql) %}\n    {% elif full_refresh_mode or not existing_relation.is_materialized_view %}\n        {% set build_sql = get_replace_sql(existing_relation, target_relation, sql) %}\n    {% else %}\n\n        -- get config options\n        {% set on_configuration_change = config.get('on_configuration_change') %}\n        {% set configuration_changes = get_materialized_view_configuration_changes(existing_relation, config) %}\n\n        {% if configuration_changes is none %}\n            {% set build_sql = refresh_materialized_view(target_relation) %}\n\n        {% elif on_configuration_change == 'apply' %}\n            {% set build_sql = get_alter_materialized_view_as_sql(target_relation, configuration_changes, sql, existing_relation, backup_relation, intermediate_relation) %}\n        {% elif on_configuration_change == 'continue' %}\n            {% set build_sql = '' %}\n            {{ exceptions.warn(\"Configuration changes were identified and `on_configuration_change` was set to `continue` for `\" ~ target_relation.render() ~ \"`\") }}\n        {% elif on_configuration_change == 'fail' %}\n            {{ exceptions.raise_fail_fast_error(\"Configuration changes were identified and `on_configuration_change` was set to `fail` for `\" ~ target_relation.render() ~ \"`\") }}\n\n        {% else %}\n            -- this only happens if the user provides a value other than `apply`, 'skip', 'fail'\n            {{ exceptions.raise_compiler_error(\"Unexpected configuration scenario\") }}\n\n        {% endif %}\n\n    {% endif %}\n\n    {% do return(build_sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.get_create_materialized_view_as_sql", "macro.dbt.get_replace_sql", "macro.dbt.get_materialized_view_configuration_changes", "macro.dbt.refresh_materialized_view", "macro.dbt.get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.845191, "supported_languages": null}, "macro.dbt.materialized_view_execute_no_op": {"name": "materialized_view_execute_no_op", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_no_op", "macro_sql": "{% macro materialized_view_execute_no_op(target_relation) %}\n    {% do store_raw_result(\n        name=\"main\",\n        message=\"skip \" ~ target_relation,\n        code=\"skip\",\n        rows_affected=\"-1\"\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.845384, "supported_languages": null}, "macro.dbt.materialized_view_execute_build_sql": {"name": "materialized_view_execute_build_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/materialized_view.sql", "original_file_path": "macros/materializations/models/materialized_view.sql", "unique_id": "macro.dbt.materialized_view_execute_build_sql", "macro_sql": "{% macro materialized_view_execute_build_sql(build_sql, existing_relation, target_relation, post_hooks) %}\n\n    -- `BEGIN` happens here:\n    {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n    {% set grant_config = config.get('grants') %}\n\n    {% call statement(name=\"main\") %}\n        {{ build_sql }}\n    {% endcall %}\n\n    {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n    {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n    {% do persist_docs(target_relation, model) %}\n\n    {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n    {{ adapter.commit() }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.845902, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view.sql", "original_file_path": "macros/materializations/models/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.847647, "supported_languages": ["sql"]}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table.sql", "original_file_path": "macros/materializations/models/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  {% do create_indexes(intermediate_relation) %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n     /* Do the equivalent of rename_if_exists. 'existing_relation' could have been dropped\n        since the variable was first set. */\n    {% set existing_relation = load_cached_relation(existing_relation) %}\n    {% if existing_relation is not none %}\n        {{ adapter.rename_relation(existing_relation, backup_relation) }}\n    {% endif %}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.849393, "supported_languages": ["sql"]}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.850094, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.85054, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8510778, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.851275, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.851852, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.853315, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set source_unique_key = (\"DBT_INTERNAL_SOURCE.\" ~ unique_key) | trim %}\n\t    {% set target_unique_key = (\"DBT_INTERNAL_DEST.\" ~ unique_key) | trim %}\n\t    {% set unique_key_match = equals(source_unique_key, target_unique_key) | trim %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns", "macro.dbt.equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.854759, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.854984, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is string %}\n        {% set unique_key = [unique_key] %}\n        {% endif %}\n\n        {%- set unique_key_str = unique_key|join(', ') -%}\n\n        delete from {{ target }} as DBT_INTERNAL_DEST\n        where ({{ unique_key_str }}) in (\n            select distinct {{ unique_key_str }}\n            from {{ source }} as DBT_INTERNAL_SOURCE\n        )\n        {%- if incremental_predicates %}\n            {% for predicate in incremental_predicates %}\n                and {{ predicate }}\n            {% endfor %}\n        {%- endif -%};\n\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8555698, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8557901, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.856318, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.856829, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.857376, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.857567, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.857721, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8579571, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8581078, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.858345, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.858496, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.858707, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8588538, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.858976, "supported_languages": null}, "macro.dbt.get_incremental_microbatch_sql": {"name": "get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_microbatch_sql", "macro_sql": "{% macro get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_microbatch_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_incremental_microbatch_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.859126, "supported_languages": null}, "macro.dbt.default__get_incremental_microbatch_sql": {"name": "default__get_incremental_microbatch_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_microbatch_sql", "macro_sql": "{% macro default__get_incremental_microbatch_sql(arg_dict) %}\n\n  {{ exceptions.raise_not_implemented('microbatch materialization strategy not implemented for adapter ' + adapter.type()) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8592582, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.859485, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n  {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n      {% set relation_for_indexes = target_relation %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set relation_for_indexes = intermediate_relation %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% set relation_for_indexes = temp_relation %}\n    {% set contract_config = config.get('contract') %}\n    {% if not contract_config or not contract_config.enforced %}\n      {% do adapter.expand_target_column_types(\n               from_relation=temp_relation,\n               to_relation=target_relation) %}\n    {% endif %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(relation_for_indexes) %}\n  {% endif %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8632529, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8643122, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.865275, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8662322, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8669178, "supported_languages": null}, "macro.dbt.can_clone_table": {"name": "can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.can_clone_table", "macro_sql": "{% macro can_clone_table() %}\n    {{ return(adapter.dispatch('can_clone_table', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__can_clone_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.867125, "supported_languages": null}, "macro.dbt.default__can_clone_table": {"name": "default__can_clone_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/can_clone_table.sql", "original_file_path": "macros/materializations/models/clone/can_clone_table.sql", "unique_id": "macro.dbt.default__can_clone_table", "macro_sql": "{% macro default__can_clone_table() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8672209, "supported_languages": null}, "macro.dbt.create_or_replace_clone": {"name": "create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.create_or_replace_clone", "macro_sql": "{% macro create_or_replace_clone(this_relation, defer_relation) %}\n    {{ return(adapter.dispatch('create_or_replace_clone', 'dbt')(this_relation, defer_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_or_replace_clone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.867454, "supported_languages": null}, "macro.dbt.default__create_or_replace_clone": {"name": "default__create_or_replace_clone", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/create_or_replace_clone.sql", "original_file_path": "macros/materializations/models/clone/create_or_replace_clone.sql", "unique_id": "macro.dbt.default__create_or_replace_clone", "macro_sql": "{% macro default__create_or_replace_clone(this_relation, defer_relation) %}\n    create or replace table {{ this_relation.render() }} clone {{ defer_relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.867594, "supported_languages": null}, "macro.dbt.materialization_clone_default": {"name": "materialization_clone_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/clone/clone.sql", "original_file_path": "macros/materializations/models/clone/clone.sql", "unique_id": "macro.dbt.materialization_clone_default", "macro_sql": "{%- materialization clone, default -%}\n\n  {%- set relations = {'relations': []} -%}\n\n  {%- if not defer_relation -%}\n      -- nothing to do\n      {{ log(\"No relation found in state manifest for \" ~ model.unique_id, info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n\n  {%- if existing_relation and not flags.FULL_REFRESH -%}\n      -- noop!\n      {{ log(\"Relation \" ~ existing_relation ~ \" already exists\", info=True) }}\n      {{ return(relations) }}\n  {%- endif -%}\n\n  {%- set other_existing_relation = load_cached_relation(defer_relation) -%}\n\n  -- If this is a database that can do zero-copy cloning of tables, and the other relation is a table, then this will be a table\n  -- Otherwise, this will be a view\n\n  {% set can_clone_table = can_clone_table() %}\n\n  {%- if other_existing_relation and other_existing_relation.type == 'table' and can_clone_table -%}\n\n      {%- set target_relation = this.incorporate(type='table') -%}\n      {% if existing_relation is not none and not existing_relation.is_table %}\n        {{ log(\"Dropping relation \" ~ existing_relation.render() ~ \" because it is of type \" ~ existing_relation.type) }}\n        {{ drop_relation_if_exists(existing_relation) }}\n      {% endif %}\n\n      -- as a general rule, data platforms that can clone tables can also do atomic 'create or replace'\n      {% call statement('main') %}\n          {% if target_relation and defer_relation and target_relation == defer_relation %}\n              {{ log(\"Target relation and defer relation are the same, skipping clone for relation: \" ~ target_relation.render()) }}\n          {% else %}\n              {{ create_or_replace_clone(target_relation, defer_relation) }}\n          {% endif %}\n\n      {% endcall %}\n\n      {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n      {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n      {% do persist_docs(target_relation, model) %}\n\n      {{ return({'relations': [target_relation]}) }}\n\n  {%- else -%}\n\n      {%- set target_relation = this.incorporate(type='view') -%}\n\n      -- reuse the view materialization\n      -- TODO: support actual dispatch for materialization macros\n      -- Tracking ticket: https://github.com/dbt-labs/dbt-core/issues/7799\n      {% set search_name = \"materialization_view_\" ~ adapter.type() %}\n      {% if not search_name in context %}\n          {% set search_name = \"materialization_view_default\" %}\n      {% endif %}\n      {% set materialization_macro = context[search_name] %}\n      {% set relations = materialization_macro() %}\n      {{ return(relations) }}\n\n  {%- endif -%}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.can_clone_table", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_or_replace_clone", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.86961, "supported_languages": ["sql"]}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparison later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation.render())) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.871646, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.872581, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.873319, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.873515, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation.render() %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.873918, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8740768, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.874187, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8743029, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.874397, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8745222, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.874618, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8750012, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.875154, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.876118, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.876451, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.87676, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.877142, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.877357, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8775911, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8778949, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.878102, "supported_languages": null}, "macro.dbt.get_drop_sql": {"name": "get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.get_drop_sql", "macro_sql": "{%- macro get_drop_sql(relation) -%}\n    {{- log('Applying DROP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8784661, "supported_languages": null}, "macro.dbt.default__get_drop_sql": {"name": "default__get_drop_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__get_drop_sql", "macro_sql": "{%- macro default__get_drop_sql(relation) -%}\n\n    {%- if relation.is_view -%}\n        {{ drop_view(relation) }}\n\n    {%- elif relation.is_table -%}\n        {{ drop_table(relation) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ drop_materialized_view(relation) }}\n\n    {%- else -%}\n        drop {{ relation.type }} if exists {{ relation.render() }} cascade\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.drop_view", "macro.dbt.drop_table", "macro.dbt.drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.878777, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n    {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.878926, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        {{ get_drop_sql(relation) }}\n    {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.879086, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop.sql", "original_file_path": "macros/relations/drop.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.879242, "supported_languages": null}, "macro.dbt.get_replace_sql": {"name": "get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.get_replace_sql", "macro_sql": "{% macro get_replace_sql(existing_relation, target_relation, sql) %}\n    {{- log('Applying REPLACE to: ' ~ existing_relation) -}}\n    {{- adapter.dispatch('get_replace_sql', 'dbt')(existing_relation, target_relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.87972, "supported_languages": null}, "macro.dbt.default__get_replace_sql": {"name": "default__get_replace_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/replace.sql", "original_file_path": "macros/relations/replace.sql", "unique_id": "macro.dbt.default__get_replace_sql", "macro_sql": "{% macro default__get_replace_sql(existing_relation, target_relation, sql) %}\n\n    {# /* use a create or replace statement if possible */ #}\n\n    {% set is_replaceable = existing_relation.type == target_relation.type and existing_relation.can_be_replaced %}\n\n    {% if is_replaceable and existing_relation.is_view %}\n        {{ get_replace_view_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_table %}\n        {{ get_replace_table_sql(target_relation, sql) }}\n\n    {% elif is_replaceable and existing_relation.is_materialized_view %}\n        {{ get_replace_materialized_view_sql(target_relation, sql) }}\n\n    {# /* a create or replace statement is not possible, so try to stage and/or backup to be safe */ #}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one using a backup */ #}\n    {%- elif target_relation.can_be_renamed and existing_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* create target_relation as an intermediate relation, then swap it out with the existing one without using a backup */ #}\n    {%- elif target_relation.can_be_renamed -%}\n        {{ get_create_intermediate_sql(target_relation, sql) }};\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_rename_intermediate_sql(target_relation) }}\n\n    {# /* create target_relation in place by first backing up the existing relation */ #}\n    {%- elif existing_relation.can_be_renamed -%}\n        {{ get_create_backup_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }};\n        {{ get_drop_backup_sql(existing_relation) }}\n\n    {# /* no renaming is allowed, so just drop and create */ #}\n    {%- else -%}\n        {{ get_drop_sql(existing_relation) }};\n        {{ get_create_sql(target_relation, sql) }}\n\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_replace_view_sql", "macro.dbt.get_replace_table_sql", "macro.dbt.get_replace_materialized_view_sql", "macro.dbt.get_create_intermediate_sql", "macro.dbt.get_create_backup_sql", "macro.dbt.get_rename_intermediate_sql", "macro.dbt.get_drop_backup_sql", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.880673, "supported_languages": null}, "macro.dbt.get_create_intermediate_sql": {"name": "get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.get_create_intermediate_sql", "macro_sql": "{%- macro get_create_intermediate_sql(relation, sql) -%}\n    {{- log('Applying CREATE INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_intermediate_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_create_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.880961, "supported_languages": null}, "macro.dbt.default__get_create_intermediate_sql": {"name": "default__get_create_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_intermediate.sql", "original_file_path": "macros/relations/create_intermediate.sql", "unique_id": "macro.dbt.default__get_create_intermediate_sql", "macro_sql": "{%- macro default__get_create_intermediate_sql(relation, sql) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    -- drop any pre-existing intermediate\n    {{ get_drop_sql(intermediate_relation) }};\n\n    {{ get_create_sql(intermediate_relation, sql) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.881164, "supported_languages": null}, "macro.dbt.drop_schema_named": {"name": "drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.drop_schema_named", "macro_sql": "{% macro drop_schema_named(schema_name) %}\n    {{ return(adapter.dispatch('drop_schema_named', 'dbt') (schema_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema_named"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.88138, "supported_languages": null}, "macro.dbt.default__drop_schema_named": {"name": "default__drop_schema_named", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/schema.sql", "original_file_path": "macros/relations/schema.sql", "unique_id": "macro.dbt.default__drop_schema_named", "macro_sql": "{% macro default__drop_schema_named(schema_name) %}\n  {% set schema_relation = api.Relation.create(schema=schema_name) %}\n  {{ adapter.drop_schema(schema_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.881554, "supported_languages": null}, "macro.dbt.get_drop_backup_sql": {"name": "get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.get_drop_backup_sql", "macro_sql": "{%- macro get_drop_backup_sql(relation) -%}\n    {{- log('Applying DROP BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_drop_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_drop_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8818, "supported_languages": null}, "macro.dbt.default__get_drop_backup_sql": {"name": "default__get_drop_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/drop_backup.sql", "original_file_path": "macros/relations/drop_backup.sql", "unique_id": "macro.dbt.default__get_drop_backup_sql", "macro_sql": "{%- macro default__get_drop_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    {{ get_drop_sql(backup_relation) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.881973, "supported_languages": null}, "macro.dbt.get_rename_sql": {"name": "get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.get_rename_sql", "macro_sql": "{%- macro get_rename_sql(relation, new_name) -%}\n    {{- log('Applying RENAME to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_sql', 'dbt')(relation, new_name) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.default__get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.882352, "supported_languages": null}, "macro.dbt.default__get_rename_sql": {"name": "default__get_rename_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__get_rename_sql", "macro_sql": "{%- macro default__get_rename_sql(relation, new_name) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_rename_view_sql(relation, new_name) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_rename_table_sql(relation, new_name) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_rename_materialized_view_sql(relation, new_name) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_rename_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.get_rename_view_sql", "macro.dbt.get_rename_table_sql", "macro.dbt.get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8827012, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8828712, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename.sql", "original_file_path": "macros/relations/rename.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation.render() }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.883115, "supported_languages": null}, "macro.dbt.get_create_backup_sql": {"name": "get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.get_create_backup_sql", "macro_sql": "{%- macro get_create_backup_sql(relation) -%}\n    {{- log('Applying CREATE BACKUP to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_backup_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_backup_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.883373, "supported_languages": null}, "macro.dbt.default__get_create_backup_sql": {"name": "default__get_create_backup_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create_backup.sql", "original_file_path": "macros/relations/create_backup.sql", "unique_id": "macro.dbt.default__get_create_backup_sql", "macro_sql": "{%- macro default__get_create_backup_sql(relation) -%}\n\n    -- get the standard backup name\n    {% set backup_relation = make_backup_relation(relation, relation.type) %}\n\n    -- drop any pre-existing backup\n    {{ get_drop_sql(backup_relation) }};\n\n    {{ get_rename_sql(relation, backup_relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_backup_relation", "macro.dbt.get_drop_sql", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.883596, "supported_languages": null}, "macro.dbt.get_create_sql": {"name": "get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.get_create_sql", "macro_sql": "{%- macro get_create_sql(relation, sql) -%}\n    {{- log('Applying CREATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_create_sql', 'dbt')(relation, sql) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_create_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8839061, "supported_languages": null}, "macro.dbt.default__get_create_sql": {"name": "default__get_create_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/create.sql", "original_file_path": "macros/relations/create.sql", "unique_id": "macro.dbt.default__get_create_sql", "macro_sql": "{%- macro default__get_create_sql(relation, sql) -%}\n\n    {%- if relation.is_view -%}\n        {{ get_create_view_as_sql(relation, sql) }}\n\n    {%- elif relation.is_table -%}\n        {{ get_create_table_as_sql(False, relation, sql) }}\n\n    {%- elif relation.is_materialized_view -%}\n        {{ get_create_materialized_view_as_sql(relation, sql) }}\n\n    {%- else -%}\n        {{- exceptions.raise_compiler_error(\"`get_create_sql` has not been implemented for: \" ~ relation.type ) -}}\n\n    {%- endif -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.get_create_view_as_sql", "macro.dbt.get_create_table_as_sql", "macro.dbt.get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.884267, "supported_languages": null}, "macro.dbt.get_rename_intermediate_sql": {"name": "get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.get_rename_intermediate_sql", "macro_sql": "{%- macro get_rename_intermediate_sql(relation) -%}\n    {{- log('Applying RENAME INTERMEDIATE to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_rename_intermediate_sql', 'dbt')(relation) -}}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_intermediate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8845189, "supported_languages": null}, "macro.dbt.default__get_rename_intermediate_sql": {"name": "default__get_rename_intermediate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/rename_intermediate.sql", "original_file_path": "macros/relations/rename_intermediate.sql", "unique_id": "macro.dbt.default__get_rename_intermediate_sql", "macro_sql": "{%- macro default__get_rename_intermediate_sql(relation) -%}\n\n    -- get the standard intermediate name\n    {% set intermediate_relation = make_intermediate_relation(relation) %}\n\n    {{ get_rename_sql(intermediate_relation, relation.identifier) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.make_intermediate_relation", "macro.dbt.get_rename_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8846872, "supported_languages": null}, "macro.dbt.drop_materialized_view": {"name": "drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.drop_materialized_view", "macro_sql": "{% macro drop_materialized_view(relation) -%}\n    {{- adapter.dispatch('drop_materialized_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.88489, "supported_languages": null}, "macro.dbt.default__drop_materialized_view": {"name": "default__drop_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/drop.sql", "original_file_path": "macros/relations/materialized_view/drop.sql", "unique_id": "macro.dbt.default__drop_materialized_view", "macro_sql": "{% macro default__drop_materialized_view(relation) -%}\n    drop materialized view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.884993, "supported_languages": null}, "macro.dbt.get_replace_materialized_view_sql": {"name": "get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.get_replace_materialized_view_sql", "macro_sql": "{% macro get_replace_materialized_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_materialized_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_replace_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.885213, "supported_languages": null}, "macro.dbt.default__get_replace_materialized_view_sql": {"name": "default__get_replace_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/replace.sql", "original_file_path": "macros/relations/materialized_view/replace.sql", "unique_id": "macro.dbt.default__get_replace_materialized_view_sql", "macro_sql": "{% macro default__get_replace_materialized_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.885335, "supported_languages": null}, "macro.dbt.refresh_materialized_view": {"name": "refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.refresh_materialized_view", "macro_sql": "{% macro refresh_materialized_view(relation) %}\n    {{- log('Applying REFRESH to: ' ~ relation) -}}\n    {{- adapter.dispatch('refresh_materialized_view', 'dbt')(relation) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__refresh_materialized_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.885578, "supported_languages": null}, "macro.dbt.default__refresh_materialized_view": {"name": "default__refresh_materialized_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/refresh.sql", "original_file_path": "macros/relations/materialized_view/refresh.sql", "unique_id": "macro.dbt.default__refresh_materialized_view", "macro_sql": "{% macro default__refresh_materialized_view(relation) %}\n    {{ exceptions.raise_compiler_error(\"`refresh_materialized_view` has not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8856902, "supported_languages": null}, "macro.dbt.get_rename_materialized_view_sql": {"name": "get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.get_rename_materialized_view_sql", "macro_sql": "{% macro get_rename_materialized_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_materialized_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_rename_materialized_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.885906, "supported_languages": null}, "macro.dbt.default__get_rename_materialized_view_sql": {"name": "default__get_rename_materialized_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/rename.sql", "original_file_path": "macros/relations/materialized_view/rename.sql", "unique_id": "macro.dbt.default__get_rename_materialized_view_sql", "macro_sql": "{% macro default__get_rename_materialized_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_materialized_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.886027, "supported_languages": null}, "macro.dbt.get_alter_materialized_view_as_sql": {"name": "get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_alter_materialized_view_as_sql", "macro_sql": "{% macro get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{- log('Applying ALTER to: ' ~ relation) -}}\n    {{- adapter.dispatch('get_alter_materialized_view_as_sql', 'dbt')(\n        relation,\n        configuration_changes,\n        sql,\n        existing_relation,\n        backup_relation,\n        intermediate_relation\n    ) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_alter_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.886487, "supported_languages": null}, "macro.dbt.default__get_alter_materialized_view_as_sql": {"name": "default__get_alter_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_alter_materialized_view_as_sql", "macro_sql": "{% macro default__get_alter_materialized_view_as_sql(\n    relation,\n    configuration_changes,\n    sql,\n    existing_relation,\n    backup_relation,\n    intermediate_relation\n) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.886642, "supported_languages": null}, "macro.dbt.get_materialized_view_configuration_changes": {"name": "get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.get_materialized_view_configuration_changes", "macro_sql": "{% macro get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    /* {#\n    It's recommended that configuration changes be formatted as follows:\n    {\"<change_category>\": [{\"action\": \"<name>\", \"context\": ...}]}\n\n    For example:\n    {\n        \"indexes\": [\n            {\"action\": \"drop\", \"context\": \"index_abc\"},\n            {\"action\": \"create\", \"context\": {\"columns\": [\"column_1\", \"column_2\"], \"type\": \"hash\", \"unique\": True}},\n        ],\n    }\n\n    Either way, `get_materialized_view_configuration_changes` needs to align with `get_alter_materialized_view_as_sql`.\n    #} */\n    {{- log('Determining configuration changes on: ' ~ existing_relation) -}}\n    {%- do return(adapter.dispatch('get_materialized_view_configuration_changes', 'dbt')(existing_relation, new_config)) -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_materialized_view_configuration_changes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.886872, "supported_languages": null}, "macro.dbt.default__get_materialized_view_configuration_changes": {"name": "default__get_materialized_view_configuration_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/alter.sql", "original_file_path": "macros/relations/materialized_view/alter.sql", "unique_id": "macro.dbt.default__get_materialized_view_configuration_changes", "macro_sql": "{% macro default__get_materialized_view_configuration_changes(existing_relation, new_config) %}\n    {{ exceptions.raise_compiler_error(\"Materialized views have not been implemented for this adapter.\") }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.886993, "supported_languages": null}, "macro.dbt.get_create_materialized_view_as_sql": {"name": "get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.get_create_materialized_view_as_sql", "macro_sql": "{% macro get_create_materialized_view_as_sql(relation, sql) -%}\n    {{- adapter.dispatch('get_create_materialized_view_as_sql', 'dbt')(relation, sql) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_materialized_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.887213, "supported_languages": null}, "macro.dbt.default__get_create_materialized_view_as_sql": {"name": "default__get_create_materialized_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/materialized_view/create.sql", "original_file_path": "macros/relations/materialized_view/create.sql", "unique_id": "macro.dbt.default__get_create_materialized_view_as_sql", "macro_sql": "{% macro default__get_create_materialized_view_as_sql(relation, sql) -%}\n    {{ exceptions.raise_compiler_error(\n        \"`get_create_materialized_view_as_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.887331, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8879611, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.888057, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.888492, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8889039, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8890162, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n\n  {#-- First ensure the user has defined 'columns' in yaml specification --#}\n  {%- set user_defined_columns = model['columns'] -%}\n  {%- if not user_defined_columns -%}\n      {{ exceptions.raise_contract_error([], []) }}\n  {%- endif -%}\n\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql, config.get('sql_header', none)) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(user_defined_columns)) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.890037, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.890434, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/column/columns_spec_ddl.sql", "original_file_path": "macros/relations/column/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.890785, "supported_languages": null}, "macro.dbt.drop_table": {"name": "drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.drop_table", "macro_sql": "{% macro drop_table(relation) -%}\n    {{- adapter.dispatch('drop_table', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8910348, "supported_languages": null}, "macro.dbt.default__drop_table": {"name": "default__drop_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/drop.sql", "original_file_path": "macros/relations/table/drop.sql", "unique_id": "macro.dbt.default__drop_table", "macro_sql": "{% macro default__drop_table(relation) -%}\n    drop table if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.891146, "supported_languages": null}, "macro.dbt.get_replace_table_sql": {"name": "get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.get_replace_table_sql", "macro_sql": "{% macro get_replace_table_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_table_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.891428, "supported_languages": null}, "macro.dbt.default__get_replace_table_sql": {"name": "default__get_replace_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/replace.sql", "original_file_path": "macros/relations/table/replace.sql", "unique_id": "macro.dbt.default__get_replace_table_sql", "macro_sql": "{% macro default__get_replace_table_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.891552, "supported_languages": null}, "macro.dbt.get_rename_table_sql": {"name": "get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.get_rename_table_sql", "macro_sql": "{% macro get_rename_table_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_table_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_table_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.891776, "supported_languages": null}, "macro.dbt.default__get_rename_table_sql": {"name": "default__get_rename_table_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/rename.sql", "original_file_path": "macros/relations/table/rename.sql", "unique_id": "macro.dbt.default__get_rename_table_sql", "macro_sql": "{% macro default__get_rename_table_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_table_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8918972, "supported_languages": null}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.892413, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.892564, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8929112, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced and (not temporary) %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.893468, "supported_languages": null}, "macro.dbt.default__get_column_names": {"name": "default__get_column_names", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_column_names", "macro_sql": "{% macro default__get_column_names() %}\n  {#- loop through user_provided_columns to get column names -#}\n    {%- set user_provided_columns = model['columns'] -%}\n    {%- for i in user_provided_columns %}\n      {%- set col = user_provided_columns[i] -%}\n      {%- set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] -%}\n      {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8938491, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.893999, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/table/create.sql", "original_file_path": "macros/relations/table/create.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select {{ adapter.dispatch('get_column_names', 'dbt')() }}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_column_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.894141, "supported_languages": null}, "macro.dbt.drop_view": {"name": "drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.drop_view", "macro_sql": "{% macro drop_view(relation) -%}\n    {{- adapter.dispatch('drop_view', 'dbt')(relation) -}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_view"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.894347, "supported_languages": null}, "macro.dbt.default__drop_view": {"name": "default__drop_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/drop.sql", "original_file_path": "macros/relations/view/drop.sql", "unique_id": "macro.dbt.default__drop_view", "macro_sql": "{% macro default__drop_view(relation) -%}\n    drop view if exists {{ relation.render() }} cascade\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.894448, "supported_languages": null}, "macro.dbt.get_replace_view_sql": {"name": "get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.get_replace_view_sql", "macro_sql": "{% macro get_replace_view_sql(relation, sql) %}\n    {{- adapter.dispatch('get_replace_view_sql', 'dbt')(relation, sql) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_replace_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8948932, "supported_languages": null}, "macro.dbt.default__get_replace_view_sql": {"name": "default__get_replace_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__get_replace_view_sql", "macro_sql": "{% macro default__get_replace_view_sql(relation, sql) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_replace_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.895017, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.895908, "supported_languages": null}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.896071, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/replace.sql", "original_file_path": "macros/relations/view/replace.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation.render() ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.896266, "supported_languages": null}, "macro.dbt.get_rename_view_sql": {"name": "get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.get_rename_view_sql", "macro_sql": "{% macro get_rename_view_sql(relation, new_name) %}\n    {{- adapter.dispatch('get_rename_view_sql', 'dbt')(relation, new_name) -}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_rename_view_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.896488, "supported_languages": null}, "macro.dbt.default__get_rename_view_sql": {"name": "default__get_rename_view_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/rename.sql", "original_file_path": "macros/relations/view/rename.sql", "unique_id": "macro.dbt.default__get_rename_view_sql", "macro_sql": "{% macro default__get_rename_view_sql(relation, new_name) %}\n    {{ exceptions.raise_compiler_error(\n        \"`get_rename_view_sql` has not been implemented for this adapter.\"\n    ) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.896608, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8969119, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.897042, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8971882, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/relations/view/create.sql", "original_file_path": "macros/relations/view/create.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation.render() }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.897543, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.897795, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.898037, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.898227, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.898649, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.8996952, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.900158, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.900396, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.901026, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partition start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9020019, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.902614, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.902806, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.903002, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9030662, "supported_languages": null}, "macro.dbt.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.903504, "supported_languages": null}, "macro.dbt.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.90398, "supported_languages": null}, "macro.dbt.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9041731, "supported_languages": null}, "macro.dbt.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_spine.sql", "original_file_path": "macros/utils/date_spine.sql", "unique_id": "macro.dbt.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n    {# call as follows:\n\n    date_spine(\n        \"day\",\n        \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n        \"dbt.dateadd(week, 1, current_date)\"\n    ) #}\n\n\n    with rawdata as (\n\n        {{dbt.generate_series(\n            dbt.get_intervals_between(start_date, end_date, datepart)\n        )}}\n\n    ),\n\n    all_periods as (\n\n        select (\n            {{\n                dbt.dateadd(\n                    datepart,\n                    \"row_number() over (order by 1) - 1\",\n                    start_date\n                )\n            }}\n        ) as date_{{datepart}}\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_{{datepart}} <= {{ end_date }}\n\n    )\n\n    select * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.generate_series", "macro.dbt.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.904474, "supported_languages": null}, "macro.dbt.date": {"name": "date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.date", "macro_sql": "{% macro date(year, month, day) %}\n  {{ return(adapter.dispatch('date', 'dbt') (year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9047391, "supported_languages": null}, "macro.dbt.default__date": {"name": "default__date", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date.sql", "original_file_path": "macros/utils/date.sql", "unique_id": "macro.dbt.default__date", "macro_sql": "{% macro default__date(year, month, day) -%}\n    {%- set dt = modules.datetime.date(year, month, day) -%}\n    {%- set iso_8601_formatted_date = dt.strftime('%Y-%m-%d') -%}\n    to_date('{{ iso_8601_formatted_date }}', 'YYYY-MM-DD')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.90497, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9052212, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.905356, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.905555, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9056551, "supported_languages": null}, "macro.dbt.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.906016, "supported_languages": null}, "macro.dbt.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.906357, "supported_languages": null}, "macro.dbt.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.906506, "supported_languages": null}, "macro.dbt.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/generate_series.sql", "original_file_path": "macros/utils/generate_series.sql", "unique_id": "macro.dbt.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.906919, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.907126, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9072142, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.907468, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9076018, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.907787, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.90785, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.908073, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9081879, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.908415, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9085271, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9089038, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.909236, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.909494, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.90963, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.909864, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9102888, "supported_languages": null}, "macro.dbt.equals": {"name": "equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.equals", "macro_sql": "{% macro equals(expr1, expr2) %}\n    {{ return(adapter.dispatch('equals', 'dbt') (expr1, expr2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__equals"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9105558, "supported_languages": null}, "macro.dbt.default__equals": {"name": "default__equals", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/equals.sql", "original_file_path": "macros/utils/equals.sql", "unique_id": "macro.dbt.default__equals", "macro_sql": "{% macro default__equals(expr1, expr2) -%}\n{%- if adapter.behavior.enable_truthy_nulls_equals_macro.no_warn %}\n    case when (({{ expr1 }} = {{ expr2 }}) or ({{ expr1 }} is null and {{ expr2 }} is null))\n        then 0\n        else 1\n    end = 0\n{%- else -%}\n    ({{ expr1 }} = {{ expr2 }})\n{%- endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.910799, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.911007, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.911137, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9113321, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9114602, "supported_languages": null}, "macro.dbt.cast": {"name": "cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.cast", "macro_sql": "{% macro cast(field, type) %}\n  {{ return(adapter.dispatch('cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9116852, "supported_languages": null}, "macro.dbt.default__cast": {"name": "default__cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast.sql", "original_file_path": "macros/utils/cast.sql", "unique_id": "macro.dbt.default__cast", "macro_sql": "{% macro default__cast(field, type) %}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.911791, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.91199, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.912076, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9123, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9124138, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9126139, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.912701, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9133089, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.913431, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9135659, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.913687, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.913815, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.913942, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.914072, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.914219, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9143481, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.914469, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.914598, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.914714, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9148421, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9149618, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.915186, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.915296, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.915498, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.915584, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.915843, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.916055, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9161758, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.916564, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.916702, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 + {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.916887, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.917113, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.917221, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9175282, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9177291, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.917964, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9180741, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.918334, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.918486, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.918615, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.918761, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.919153, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9192781, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.919394, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.91948, "supported_languages": null}, "macro.dbt.get_snapshot_get_time_data_type": {"name": "get_snapshot_get_time_data_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.get_snapshot_get_time_data_type", "macro_sql": "{% macro get_snapshot_get_time_data_type() %}\n    {% set snapshot_time = adapter.dispatch('snapshot_get_time', 'dbt')() %}\n    {% set time_data_type_sql = 'select ' ~ snapshot_time ~ ' as dbt_snapshot_time' %}\n    {% set snapshot_time_column_schema = get_column_schema_from_query(time_data_type_sql) %}\n    {% set time_data_type = snapshot_time_column_schema[0].dtype %}\n    {{ return(time_data_type or none) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt_snowflake.snowflake__snapshot_get_time", "macro.dbt.get_column_schema_from_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9198148, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9199529, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.920015, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.920146, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_snowflake.snowflake__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.920279, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9206772, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.92079, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.920918, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.921242, "supported_languages": null}, "macro.dbt.get_drop_index_sql": {"name": "get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_drop_index_sql", "macro_sql": "{% macro get_drop_index_sql(relation, index_name) -%}\n    {{ adapter.dispatch('get_drop_index_sql', 'dbt')(relation, index_name) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_drop_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.921393, "supported_languages": null}, "macro.dbt.default__get_drop_index_sql": {"name": "default__get_drop_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_drop_index_sql", "macro_sql": "{% macro default__get_drop_index_sql(relation, index_name) -%}\n    {{ exceptions.raise_compiler_error(\"`get_drop_index_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9215062, "supported_languages": null}, "macro.dbt.get_show_indexes_sql": {"name": "get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_show_indexes_sql", "macro_sql": "{% macro get_show_indexes_sql(relation) -%}\n    {{ adapter.dispatch('get_show_indexes_sql', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_indexes_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.92163, "supported_languages": null}, "macro.dbt.default__get_show_indexes_sql": {"name": "default__get_show_indexes_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_show_indexes_sql", "macro_sql": "{% macro default__get_show_indexes_sql(relation) -%}\n    {{ exceptions.raise_compiler_error(\"`get_show_indexes_sql has not been implemented for this adapter.\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.921731, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9223099, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9224472, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {#-- This ensures microbatch batches get unique temp relations to avoid clobbering --#}\n  {% if suffix == '__dbt_tmp' and model.batch %}\n    {% set suffix = suffix ~ '_' ~ model.batch.id %}\n  {% endif %}\n\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.922762, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9230049, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.923203, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.92346, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.923885, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation.render() }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.924033, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.924234, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9246778, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.924868, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9249809, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.925359, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9256918, "supported_languages": null}, "macro.dbt.collect_freshness_custom_sql": {"name": "collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness_custom_sql", "macro_sql": "{% macro collect_freshness_custom_sql(source, loaded_at_query) %}\n  {{ return(adapter.dispatch('collect_freshness_custom_sql', 'dbt')(source, loaded_at_query))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness_custom_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.925863, "supported_languages": null}, "macro.dbt.default__collect_freshness_custom_sql": {"name": "default__collect_freshness_custom_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness_custom_sql", "macro_sql": "{% macro default__collect_freshness_custom_sql(source, loaded_at_query) %}\n  {% call statement('collect_freshness_custom_sql', fetch_result=True, auto_begin=False) -%}\n  with source_query as (\n    {{ loaded_at_query }}\n  )\n  select\n    (select * from source_query) as max_loaded_at,\n    {{ current_timestamp() }} as snapshotted_at\n  {% endcall %}\n  {{ return(load_result('collect_freshness_custom_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9261172, "supported_languages": null}, "macro.dbt.validate_sql": {"name": "validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.validate_sql", "macro_sql": "{% macro validate_sql(sql) -%}\n  {{ return(adapter.dispatch('validate_sql', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__validate_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9263942, "supported_languages": null}, "macro.dbt.default__validate_sql": {"name": "default__validate_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/validate_sql.sql", "original_file_path": "macros/adapters/validate_sql.sql", "unique_id": "macro.dbt.default__validate_sql", "macro_sql": "{% macro default__validate_sql(sql) -%}\n  {% call statement('validate_sql') -%}\n    explain {{ sql }}\n  {% endcall %}\n  {{ return(load_result('validate_sql')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9266958, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.927833, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.927947, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9280908, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.92819, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9284742, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.928627, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation.render() }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.92873, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9289138, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation.render() }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.929088, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.929277, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation.render() }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.929444, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9296288, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9301848, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.930341, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.930549, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9307368, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation.render() ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.93167, "supported_languages": null}, "macro.dbt.get_show_sql": {"name": "get_show_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_show_sql", "macro_sql": "{% macro get_show_sql(compiled_code, sql_header, limit) -%}\n  {%- if sql_header is not none -%}\n  {{ sql_header }}\n  {%- endif %}\n  {{ get_limit_subquery_sql(compiled_code, limit) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_limit_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.932019, "supported_languages": null}, "macro.dbt.get_limit_subquery_sql": {"name": "get_limit_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.get_limit_subquery_sql", "macro_sql": "\n{%- macro get_limit_subquery_sql(sql, limit) -%}\n  {{ adapter.dispatch('get_limit_sql', 'dbt')(sql, limit) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_limit_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.932171, "supported_languages": null}, "macro.dbt.default__get_limit_sql": {"name": "default__get_limit_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/show.sql", "original_file_path": "macros/adapters/show.sql", "unique_id": "macro.dbt.default__get_limit_sql", "macro_sql": "{% macro default__get_limit_sql(sql, limit) %}\n  {{ sql }}\n  {% if limit is not none %}\n  limit {{ limit }}\n  {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9323268, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.932693, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.932838, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.933003, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.93314, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.933355, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.933743, "supported_languages": null}, "macro.dbt.get_catalog_relations": {"name": "get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_relations", "macro_sql": "{% macro get_catalog_relations(information_schema, relations) -%}\n  {{ return(adapter.dispatch('get_catalog_relations', 'dbt')(information_schema, relations)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9346719, "supported_languages": null}, "macro.dbt.default__get_catalog_relations": {"name": "default__get_catalog_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_relations", "macro_sql": "{% macro default__get_catalog_relations(information_schema, relations) -%}\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog_relations not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.934916, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9351108, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.935355, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.93553, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.935711, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.935891, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.936106, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.936286, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.936555, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.936743, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.936911, "supported_languages": null}, "macro.dbt.get_catalog_for_single_relation": {"name": "get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog_for_single_relation", "macro_sql": "{% macro get_catalog_for_single_relation(relation) %}\n  {{ return(adapter.dispatch('get_catalog_for_single_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_catalog_for_single_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.937075, "supported_languages": null}, "macro.dbt.default__get_catalog_for_single_relation": {"name": "default__get_catalog_for_single_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog_for_single_relation", "macro_sql": "{% macro default__get_catalog_for_single_relation(relation) %}\n  {{ exceptions.raise_not_implemented(\n    'get_catalog_for_single_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9372401, "supported_languages": null}, "macro.dbt.get_relations": {"name": "get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relations", "macro_sql": "{% macro get_relations() %}\n  {{ return(adapter.dispatch('get_relations', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9373891, "supported_languages": null}, "macro.dbt.default__get_relations": {"name": "default__get_relations", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relations", "macro_sql": "{% macro default__get_relations() %}\n  {{ exceptions.raise_not_implemented(\n    'get_relations macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.937521, "supported_languages": null}, "macro.dbt.get_relation_last_modified": {"name": "get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_relation_last_modified", "macro_sql": "{% macro get_relation_last_modified(information_schema, relations) %}\n  {{ return(adapter.dispatch('get_relation_last_modified', 'dbt')(information_schema, relations)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_relation_last_modified"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9376929, "supported_languages": null}, "macro.dbt.default__get_relation_last_modified": {"name": "default__get_relation_last_modified", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_relation_last_modified", "macro_sql": "{% macro default__get_relation_last_modified(information_schema, relations) %}\n  {{ exceptions.raise_not_implemented(\n    'get_relation_last_modified macro not implemented for adapter ' + adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.937854, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.938897, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9390411, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.939313, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql, select_sql_header=none) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql, select_sql_header)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.939523, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql, select_sql_header=none) %}\n    {%- if select_sql_header is not none -%}\n    {{ select_sql_header }}\n    {%- endif -%}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.939708, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.939863, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    {%- set col_naked_numeric = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {%- do col_err.append(col['name']) -%}\n      {#-- If this column's type is just 'numeric' then it is missing precision/scale, raise a warning --#}\n      {%- elif col['data_type'].strip().lower() in ('numeric', 'decimal', 'number') -%}\n        {%- do col_naked_numeric.append(col['name']) -%}\n      {%- endif -%}\n      {% set col_name = adapter.quote(col['name']) if col.get('quote') else col['name'] %}\n      {{ cast('null', col['data_type']) }} as {{ col_name }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- elif (col_naked_numeric | length) > 0 -%}\n      {{ exceptions.warn(\"Detected columns with numeric type and unspecified precision/scale, this can lead to unintended rounding: \" ~ col_naked_numeric ~ \"`\") }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.940892, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql, select_sql_header=none) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql, select_sql_header) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.941195, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.94137, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.941688, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.941907, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation.render() }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation.render() }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation.render() }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation.render() }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9424498, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.snowflake__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.942694, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation.render() }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9437351, "supported_languages": null}, "macro.dbt.get_fixture_sql": {"name": "get_fixture_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_fixture_sql", "macro_sql": "{% macro get_fixture_sql(rows, column_name_to_data_types) %}\n-- Fixture for {{ model.name }}\n{% set default_row = {} %}\n\n{%- if not column_name_to_data_types -%}\n{#-- Use defer_relation IFF it is available in the manifest and 'this' is missing from the database --#}\n{%-   set this_or_defer_relation = defer_relation if (defer_relation and not load_relation(this)) else this -%}\n{%-   set columns_in_relation = adapter.get_columns_in_relation(this_or_defer_relation) -%}\n\n{%-   set column_name_to_data_types = {} -%}\n{%-   for column in columns_in_relation -%}\n{#-- This needs to be a case-insensitive comparison --#}\n{%-     do column_name_to_data_types.update({column.name|lower: column.data_type}) -%}\n{%-   endfor -%}\n{%- endif -%}\n\n{%- if not column_name_to_data_types -%}\n    {{ exceptions.raise_compiler_error(\"Not able to get columns for unit test '\" ~ model.name ~ \"' from relation \" ~ this ~ \" because the relation doesn't exist\") }}\n{%- endif -%}\n\n{%- for column_name, column_type in column_name_to_data_types.items() -%}\n    {%- do default_row.update({column_name: (safe_cast(\"null\", column_type) | trim )}) -%}\n{%- endfor -%}\n\n{{ validate_fixture_rows(rows, row_number) }}\n\n{%- for row in rows -%}\n{%-   set formatted_row = format_row(row, column_name_to_data_types) -%}\n{%-   set default_row_copy = default_row.copy() -%}\n{%-   do default_row_copy.update(formatted_row) -%}\nselect\n{%-   for column_name, column_value in default_row_copy.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%-   endfor %}\n{%-   if not loop.last %}\nunion all\n{%    endif %}\n{%- endfor -%}\n\n{%- if (rows | length) == 0 -%}\n    select\n    {%- for column_name, column_value in default_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%},{%- endif %}\n    {%- endfor %}\n    limit 0\n{%- endif -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.safe_cast", "macro.dbt.validate_fixture_rows", "macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.946471, "supported_languages": null}, "macro.dbt.get_expected_sql": {"name": "get_expected_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.get_expected_sql", "macro_sql": "{% macro get_expected_sql(rows, column_name_to_data_types) %}\n\n{%- if (rows | length) == 0 -%}\n    select * from dbt_internal_unit_test_actual\n    limit 0\n{%- else -%}\n{%- for row in rows -%}\n{%- set formatted_row = format_row(row, column_name_to_data_types) -%}\nselect\n{%- for column_name, column_value in formatted_row.items() %} {{ column_value }} as {{ column_name }}{% if not loop.last -%}, {%- endif %}\n{%- endfor %}\n{%- if not loop.last %}\nunion all\n{% endif %}\n{%- endfor -%}\n{%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.format_row"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.947018, "supported_languages": null}, "macro.dbt.format_row": {"name": "format_row", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.format_row", "macro_sql": "\n\n{%- macro format_row(row, column_name_to_data_types) -%}\n    {#-- generate case-insensitive formatted row --#}\n    {% set formatted_row = {} %}\n    {%- for column_name, column_value in row.items() -%}\n        {% set column_name = column_name|lower %}\n\n        {%- if column_name not in column_name_to_data_types %}\n            {#-- if user-provided row contains column name that relation does not contain, raise an error --#}\n            {% set fixture_name = \"expected output\" if model.resource_type == 'unit_test' else (\"'\" ~ model.name ~ \"'\") %}\n            {{ exceptions.raise_compiler_error(\n                \"Invalid column name: '\" ~ column_name ~ \"' in unit test fixture for \" ~ fixture_name ~ \".\"\n                \"\\nAccepted columns for \" ~ fixture_name ~ \" are: \" ~ (column_name_to_data_types.keys()|list)\n            ) }}\n        {%- endif -%}\n\n        {%- set column_type = column_name_to_data_types[column_name] %}\n\n        {#-- sanitize column_value: wrap yaml strings in quotes, apply cast --#}\n        {%- set column_value_clean = column_value -%}\n        {%- if column_value is string -%}\n            {%- set column_value_clean = dbt.string_literal(dbt.escape_single_quotes(column_value)) -%}\n        {%- elif column_value is none -%}\n            {%- set column_value_clean = 'null' -%}\n        {%- endif -%}\n\n        {%- set row_update = {column_name: safe_cast(column_value_clean, column_type) } -%}\n        {%- do formatted_row.update(row_update) -%}\n    {%- endfor -%}\n    {{ return(formatted_row) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.string_literal", "macro.dbt.escape_single_quotes", "macro.dbt.safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.947993, "supported_languages": null}, "macro.dbt.validate_fixture_rows": {"name": "validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.validate_fixture_rows", "macro_sql": "{%- macro validate_fixture_rows(rows, row_number) -%}\n  {{ return(adapter.dispatch('validate_fixture_rows', 'dbt')(rows, row_number)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__validate_fixture_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9481971, "supported_languages": null}, "macro.dbt.default__validate_fixture_rows": {"name": "default__validate_fixture_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/unit_test_sql/get_fixture_sql.sql", "original_file_path": "macros/unit_test_sql/get_fixture_sql.sql", "unique_id": "macro.dbt.default__validate_fixture_rows", "macro_sql": "{%- macro default__validate_fixture_rows(rows, row_number) -%}\n  {# This is an abstract method for adapter overrides as needed #}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.948288, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.948976, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9491131, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n\n        {#\n            We want to get the string of the returned relation by calling .render() in order to skip sample/empty\n            mode rendering logic. However, people override the default ref macro, and often return a string instead\n            of a relation (like the ref macro does by default). Thus, to make sure we dont blow things up, we have\n            to ensure the resolved relation has a .render() method.\n        #}\n        {%- if resolved.render is defined and resolved.render is callable -%}\n            {%- set resolved = resolved.render() -%}\n        {%- endif -%}\n\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.949955, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.950366, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.950867, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.951353, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.951457, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.951871, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.952087, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.952343, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.952588, "supported_languages": null}, "macro.dbt_utils.get_url_host": {"name": "get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.952855, "supported_languages": null}, "macro.dbt_utils.default__get_url_host": {"name": "default__get_url_host", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "unique_id": "macro.dbt_utils.default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt.split_part(\n        dbt.split_part(\n            dbt.replace(\n                dbt.replace(\n                    dbt.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt.safe_cast(\n        parsed,\n        dbt.type_string()\n        )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part", "macro.dbt.replace", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.953242, "supported_languages": null}, "macro.dbt_utils.get_url_path": {"name": "get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.953535, "supported_languages": null}, "macro.dbt_utils.default__get_url_path": {"name": "default__get_url_path", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "unique_id": "macro.dbt_utils.default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url =\n        dbt.replace(\n            dbt.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{ dbt.position(\"'/'\", stripped_url) }}, 0),\n            {{ dbt.position(\"'?'\", stripped_url) }} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt.split_part(\n            dbt.right(\n                stripped_url,\n                dbt.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ),\n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt.safe_cast(\n        parsed_path,\n        dbt.type_string()\n    )}}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.position", "macro.dbt.split_part", "macro.dbt.right", "macro.dbt.length", "macro.dbt.safe_cast", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.954062, "supported_languages": null}, "macro.dbt_utils.get_url_parameter": {"name": "get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.954317, "supported_languages": null}, "macro.dbt_utils.default__get_url_parameter": {"name": "default__get_url_parameter", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "unique_id": "macro.dbt_utils.default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt.split_part(dbt.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.954582, "supported_languages": null}, "macro.dbt_utils.test_fewer_rows_than": {"name": "test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.955083, "supported_languages": null}, "macro.dbt_utils.default__test_fewer_rows_than": {"name": "default__test_fewer_rows_than", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/fewer_rows_than.sql", "original_file_path": "macros/generic_tests/fewer_rows_than.sql", "unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model, group_by_columns) %}\n\n{{ config(fail_calc = 'sum(coalesce(row_count_delta, 0))') }}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in equal_rowcount. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_fewer_rows_than'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_our_model \n    from {{ model }}\n    {{ groupby_gb_cols }}\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_fewer_rows_than,\n      count(*) as count_comparison_model \n    from {{ compare_model }}\n    {{ groupby_gb_cols }}\n\n),\ncounts as (\n\n    select\n\n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_our_model,\n        count_comparison_model\n    from a\n    full join b on \n    a.id_dbtutils_test_fewer_rows_than = b.id_dbtutils_test_fewer_rows_than\n    {{ join_gb_cols }}\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.955931, "supported_languages": null}, "macro.dbt_utils.test_equal_rowcount": {"name": "test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.956438, "supported_languages": null}, "macro.dbt_utils.default__test_equal_rowcount": {"name": "default__test_equal_rowcount", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equal_rowcount.sql", "original_file_path": "macros/generic_tests/equal_rowcount.sql", "unique_id": "macro.dbt_utils.default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model, group_by_columns) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'sum(coalesce(diff_count, 0))') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(', ') + ', ' %}\n  {% set join_gb_cols %}\n    {% for c in group_by_columns %}\n      and a.{{c}} = b.{{c}}\n    {% endfor %}\n  {% endset %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n{#-- We must add a fake join key in case additional grouping variables are not provided --#}\n{#-- Redshift does not allow for dynamically created join conditions (e.g. full join on 1 = 1 --#}\n{#-- The same logic is used in fewer_rows_than. In case of changes, maintain consistent logic --#}\n{% set group_by_columns = ['id_dbtutils_test_equal_rowcount'] + group_by_columns %}\n{% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n\nwith a as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_a \n    from {{ model }}\n    {{groupby_gb_cols}}\n\n\n),\nb as (\n\n    select \n      {{select_gb_cols}}\n      1 as id_dbtutils_test_equal_rowcount,\n      count(*) as count_b \n    from {{ compare_model }}\n    {{groupby_gb_cols}}\n\n),\nfinal as (\n\n    select\n    \n        {% for c in group_by_columns -%}\n          a.{{c}} as {{c}}_a,\n          b.{{c}} as {{c}}_b,\n        {% endfor %}\n\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n\n    from a\n    full join b\n    on\n    a.id_dbtutils_test_equal_rowcount = b.id_dbtutils_test_equal_rowcount\n    {{join_gb_cols}}\n\n\n)\n\nselect * from final\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.957313, "supported_languages": null}, "macro.dbt_utils.test_relationships_where": {"name": "test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.957716, "supported_languages": null}, "macro.dbt_utils.default__test_relationships_where": {"name": "default__test_relationships_where", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/relationships_where.sql", "original_file_path": "macros/generic_tests/relationships_where.sql", "unique_id": "macro.dbt_utils.default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9580002, "supported_languages": null}, "macro.dbt_utils.test_recency": {"name": "test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.test_recency", "macro_sql": "{% test recency(model, field, datepart, interval, ignore_time_component=False, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval, ignore_time_component, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9584389, "supported_languages": null}, "macro.dbt_utils.default__test_recency": {"name": "default__test_recency", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/recency.sql", "original_file_path": "macros/generic_tests/recency.sql", "unique_id": "macro.dbt_utils.default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval, ignore_time_component, group_by_columns) %}\n\n{% set threshold = 'cast(' ~ dbt.dateadd(datepart, interval * -1, dbt.current_timestamp()) ~ ' as ' ~ ('date' if ignore_time_component else dbt.type_timestamp()) ~ ')'  %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nwith recency as (\n\n    select \n\n      {{ select_gb_cols }}\n      {% if ignore_time_component %}\n        cast(max({{ field }}) as date) as most_recent\n      {%- else %}\n        max({{ field }}) as most_recent\n      {%- endif %}\n\n    from {{ model }}\n\n    {{ groupby_gb_cols }}\n\n)\n\nselect\n\n    {{ select_gb_cols }}\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.current_timestamp", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.959116, "supported_languages": null}, "macro.dbt_utils.test_not_constant": {"name": "test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.test_not_constant", "macro_sql": "{% test not_constant(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9594529, "supported_languages": null}, "macro.dbt_utils.default__test_not_constant": {"name": "default__test_not_constant", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_constant.sql", "original_file_path": "macros/generic_tests/not_constant.sql", "unique_id": "macro.dbt_utils.default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name, group_by_columns) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    {{select_gb_cols}}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\n  {{groupby_gb_cols}}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.959831, "supported_languages": null}, "macro.dbt_utils.test_accepted_range": {"name": "test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.960227, "supported_languages": null}, "macro.dbt_utils.default__test_accepted_range": {"name": "default__test_accepted_range", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/accepted_range.sql", "original_file_path": "macros/generic_tests/accepted_range.sql", "unique_id": "macro.dbt_utils.default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.960617, "supported_languages": null}, "macro.dbt_utils.test_not_accepted_values": {"name": "test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.960962, "supported_languages": null}, "macro.dbt_utils.default__test_not_accepted_values": {"name": "default__test_not_accepted_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_accepted_values.sql", "original_file_path": "macros/generic_tests/not_accepted_values.sql", "unique_id": "macro.dbt_utils.default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.961283, "supported_languages": null}, "macro.dbt_utils.test_at_least_one": {"name": "test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name, group_by_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.961683, "supported_languages": null}, "macro.dbt_utils.default__test_at_least_one": {"name": "default__test_at_least_one", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/at_least_one.sql", "original_file_path": "macros/generic_tests/at_least_one.sql", "unique_id": "macro.dbt_utils.default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name, group_by_columns) %}\n\n{% set pruned_cols = [column_name] %}\n\n{% if group_by_columns|length() > 0 %}\n\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n  {% set pruned_cols = group_by_columns %}\n\n  {% if column_name not in pruned_cols %}\n    {% do pruned_cols.append(column_name) %}\n  {% endif %}\n\n{% endif %}\n\n{% set select_pruned_cols = pruned_cols|join(' ,') %}\n\nselect *\nfrom (\n    with pruned_rows as (\n      select\n        {{ select_pruned_cols }}\n      from {{ model }}\n      {% if group_by_columns|length() == 0 %}\n        where {{ column_name }} is not null\n        limit 1\n      {% endif %}\n    )\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      {{select_gb_cols}}\n      count({{ column_name }}) as filler_column\n\n    from pruned_rows\n\n    {{groupby_gb_cols}}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.962386, "supported_languages": null}, "macro.dbt_utils.test_unique_combination_of_columns": {"name": "test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.962752, "supported_languages": null}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"name": "default__test_unique_combination_of_columns", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/unique_combination_of_columns.sql", "original_file_path": "macros/generic_tests/unique_combination_of_columns.sql", "unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.963271, "supported_languages": null}, "macro.dbt_utils.test_cardinality_equality": {"name": "test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.963596, "supported_languages": null}, "macro.dbt_utils.default__test_cardinality_equality": {"name": "default__test_cardinality_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/cardinality_equality.sql", "original_file_path": "macros/generic_tests/cardinality_equality.sql", "unique_id": "macro.dbt_utils.default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.963881, "supported_languages": null}, "macro.dbt_utils.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None) %}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.964184, "supported_languages": null}, "macro.dbt_utils.default__test_expression_is_true": {"name": "default__test_expression_is_true", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/expression_is_true.sql", "original_file_path": "macros/generic_tests/expression_is_true.sql", "unique_id": "macro.dbt_utils.default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else \"1\" %}\n\nselect\n    {{ column_list }}\nfrom {{ model }}\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9644852, "supported_languages": null}, "macro.dbt_utils.test_not_null_proportion": {"name": "test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model, group_by_columns = []) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, group_by_columns, **kwargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.964854, "supported_languages": null}, "macro.dbt_utils.default__test_not_null_proportion": {"name": "default__test_not_null_proportion", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_null_proportion.sql", "original_file_path": "macros/generic_tests/not_null_proportion.sql", "unique_id": "macro.dbt_utils.default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model, group_by_columns) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(' ,') + ', ' %}\n  {% set groupby_gb_cols = 'group by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith validation as (\n  select\n    {{select_gb_cols}}\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as {{ dbt.type_numeric() }}) as not_null_proportion\n  from {{ model }}\n  {{groupby_gb_cols}}\n),\nvalidation_errors as (\n  select\n    {{select_gb_cols}}\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.965535, "supported_languages": null}, "macro.dbt_utils.test_sequential_values": {"name": "test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart, group_by_columns)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.965989, "supported_languages": null}, "macro.dbt_utils.default__test_sequential_values": {"name": "default__test_sequential_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/sequential_values.sql", "original_file_path": "macros/generic_tests/sequential_values.sql", "unique_id": "macro.dbt_utils.default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None, group_by_columns = []) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\n{% if group_by_columns|length() > 0 %}\n  {% set select_gb_cols = group_by_columns|join(',') + ', ' %}\n  {% set partition_gb_cols = 'partition by ' + group_by_columns|join(',') %}\n{% endif %}\n\nwith windowed as (\n\n    select\n        {{ select_gb_cols }}\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            {{partition_gb_cols}}\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt.type_timestamp() }})= cast({{ dbt.dateadd(datepart, interval, previous_column_name) }} as {{ dbt.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt.type_timestamp", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.966729, "supported_languages": null}, "macro.dbt_utils.test_equality": {"name": "test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None, exclude_columns=None, precision = None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns, exclude_columns, precision)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9677608, "supported_languages": null}, "macro.dbt_utils.default__test_equality": {"name": "default__test_equality", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/equality.sql", "original_file_path": "macros/generic_tests/equality.sql", "unique_id": "macro.dbt_utils.default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None, exclude_columns=None, precision = None) %}\n\n{%- if compare_columns and exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\"Both a compare and an ignore list were provided to the `equality` macro. Only one is allowed\") }}\n{%- endif -%}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{# Ensure there are no extra columns in the compare_model vs model #}\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- do dbt_utils._is_ephemeral(compare_model, 'test_equality') -%}\n\n    {%- set model_columns = adapter.get_columns_in_relation(model) -%}\n    {%- set compare_model_columns = adapter.get_columns_in_relation(compare_model) -%}\n\n\n    {%- if exclude_columns -%}\n        {#-- Lower case ignore columns for easier comparison --#}\n        {%- set exclude_columns = exclude_columns | map(\"lower\") | list %}\n\n        {# Filter out the excluded columns #}\n        {%- set include_columns = [] %}\n        {%- set include_model_columns = [] %}\n        {%- for column in model_columns -%}\n            {%- if column.name | lower not in exclude_columns -%}\n                {% do include_columns.append(column) %}\n            {%- endif %}\n        {%- endfor %}\n        {%- for column in compare_model_columns -%}\n            {%- if column.name | lower not in exclude_columns -%}\n                {% do include_model_columns.append(column) %}\n            {%- endif %}\n        {%- endfor %}\n\n        {%- set compare_columns_set = set(include_columns | map(attribute='quoted') | map(\"lower\")) %}\n        {%- set compare_model_columns_set = set(include_model_columns | map(attribute='quoted') | map(\"lower\")) %}\n    {%- else -%}\n        {%- set compare_columns_set = set(model_columns | map(attribute='quoted') | map(\"lower\")) %}\n        {%- set compare_model_columns_set = set(compare_model_columns | map(attribute='quoted') | map(\"lower\")) %}\n    {%- endif -%}\n\n    {% if compare_columns_set != compare_model_columns_set %}\n        {{ exceptions.raise_compiler_error(compare_model ~\" has less columns than \" ~ model ~ \", please ensure they have the same columns or use the `compare_columns` or `exclude_columns` arguments to subset them.\") }}\n    {% endif %}\n\n\n{% endif %}\n\n{%- if not precision -%}\n    {%- if not compare_columns -%}\n        {# \n            You cannot get the columns in an ephemeral model (due to not existing in the information schema),\n            so if the user does not provide an explicit list of columns we must error in the case it is ephemeral\n        #}\n        {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n        {%- set compare_columns = adapter.get_columns_in_relation(model)-%}\n\n        {%- if exclude_columns -%}\n            {#-- Lower case ignore columns for easier comparison --#}\n            {%- set exclude_columns = exclude_columns | map(\"lower\") | list %}\n\n            {# Filter out the excluded columns #}\n            {%- set include_columns = [] %}\n            {%- for column in compare_columns -%}\n                {%- if column.name | lower not in exclude_columns -%}\n                    {% do include_columns.append(column) %}\n                {%- endif %}\n            {%- endfor %}\n\n            {%- set compare_columns = include_columns | map(attribute='quoted') %}\n        {%- else -%} {# Compare columns provided #}\n            {%- set compare_columns = compare_columns | map(attribute='quoted') %}\n        {%- endif -%}\n    {%- endif -%}\n\n    {% set compare_cols_csv = compare_columns | join(', ') %}\n\n{% else %} {# Precision required #}\n    {#-\n        If rounding is required, we need to get the types, so it cannot be ephemeral even if they provide column names\n    -#}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set columns = adapter.get_columns_in_relation(model) -%}\n\n    {% set columns_list = [] %}\n    {%- for col in columns -%}\n        {%- if (\n                (col.name|lower in compare_columns|map('lower') or not compare_columns) and\n                (col.name|lower not in exclude_columns|map('lower') or not exclude_columns)\n                ) -%}\n            {# Databricks double type is not picked up by any number type checks in dbt #}\n            {%- if col.is_float() or col.is_numeric() or col.data_type == 'double' -%}\n                {# Cast is required due to postgres not having round for a double precision number #}\n                {%- do columns_list.append('round(cast(' ~ col.quoted ~ ' as ' ~ dbt.type_numeric() ~ '),' ~ precision ~ ') as ' ~ col.quoted) -%}\n            {%- else -%} {# Non-numeric type #}\n                {%- do columns_list.append(col.quoted) -%}\n            {%- endif -%}\n        {% endif %}\n    {%- endfor -%}\n\n    {% set compare_cols_csv = columns_list | join(', ') %}\n\n{% endif %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_numeric", "macro.dbt.except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.971164, "supported_languages": null}, "macro.dbt_utils.test_not_empty_string": {"name": "test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.test_not_empty_string", "macro_sql": "{% test not_empty_string(model, column_name, trim_whitespace=true) %}\n\n  {{ return(adapter.dispatch('test_not_empty_string', 'dbt_utils')(model, column_name, trim_whitespace)) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_not_empty_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.971561, "supported_languages": null}, "macro.dbt_utils.default__test_not_empty_string": {"name": "default__test_not_empty_string", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/not_empty_string.sql", "original_file_path": "macros/generic_tests/not_empty_string.sql", "unique_id": "macro.dbt_utils.default__test_not_empty_string", "macro_sql": "{% macro default__test_not_empty_string(model, column_name, trim_whitespace=true) %}\n\n    with\n    \n    all_values as (\n\n        select \n\n\n            {% if trim_whitespace == true -%}\n\n                trim({{ column_name }}) as {{ column_name }}\n\n            {%- else -%}\n\n                {{ column_name }}\n\n            {%- endif %}\n            \n        from {{ model }}\n\n    ),\n\n    errors as (\n\n        select * from all_values\n        where {{ column_name }} = ''\n\n    )\n\n    select * from errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.971828, "supported_languages": null}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"name": "test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9725928, "supported_languages": null}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"name": "default__test_mutually_exclusive_ranges", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/generic_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/generic_tests/mutually_exclusive_ranges.sql", "unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}, {{ upper_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc, {{ upper_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions more cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.973866, "supported_languages": null}, "macro.dbt_utils.pretty_log_format": {"name": "pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.974097, "supported_languages": null}, "macro.dbt_utils.default__pretty_log_format": {"name": "default__pretty_log_format", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "unique_id": "macro.dbt_utils.default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9742348, "supported_languages": null}, "macro.dbt_utils._is_relation": {"name": "_is_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_relation.sql", "original_file_path": "macros/jinja_helpers/_is_relation.sql", "unique_id": "macro.dbt_utils._is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.974608, "supported_languages": null}, "macro.dbt_utils.pretty_time": {"name": "pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.974832, "supported_languages": null}, "macro.dbt_utils.default__pretty_time": {"name": "default__pretty_time", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "unique_id": "macro.dbt_utils.default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9749901, "supported_languages": null}, "macro.dbt_utils.log_info": {"name": "log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.975196, "supported_languages": null}, "macro.dbt_utils.default__log_info": {"name": "default__log_info", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "unique_id": "macro.dbt_utils.default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.975334, "supported_languages": null}, "macro.dbt_utils.slugify": {"name": "slugify", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "unique_id": "macro.dbt_utils.slugify", "macro_sql": "{% macro slugify(string) %}\n\n{% if not string %}\n{{ return('') }}\n{% endif %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n{#- Prepends \"_\" if string begins with a number -#}\n{% set string = modules.re.sub('^[0-9]', '_' + string[0], string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.975944, "supported_languages": null}, "macro.dbt_utils._is_ephemeral": {"name": "_is_ephemeral", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/jinja_helpers/_is_ephemeral.sql", "original_file_path": "macros/jinja_helpers/_is_ephemeral.sql", "unique_id": "macro.dbt_utils._is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.976542, "supported_languages": null}, "macro.dbt_utils.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.976966, "supported_languages": null}, "macro.dbt_utils.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9774458, "supported_languages": null}, "macro.dbt_utils.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.977631, "supported_languages": null}, "macro.dbt_utils.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "unique_id": "macro.dbt_utils.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.977927, "supported_languages": null}, "macro.dbt_utils.safe_subtract": {"name": "safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.safe_subtract", "macro_sql": "{%- macro safe_subtract(field_list) -%}\n    {{ return(adapter.dispatch('safe_subtract', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_subtract"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.978202, "supported_languages": null}, "macro.dbt_utils.default__safe_subtract": {"name": "default__safe_subtract", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_subtract.sql", "original_file_path": "macros/sql/safe_subtract.sql", "unique_id": "macro.dbt_utils.default__safe_subtract", "macro_sql": "\n\n{%- macro default__safe_subtract(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_subtract` macro takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' -\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.978663, "supported_languages": null}, "macro.dbt_utils.nullcheck_table": {"name": "nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.978913, "supported_languages": null}, "macro.dbt_utils.default__nullcheck_table": {"name": "default__nullcheck_table", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "unique_id": "macro.dbt_utils.default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9791942, "supported_languages": null}, "macro.dbt_utils.get_relations_by_pattern": {"name": "get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.979949, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_pattern": {"name": "default__get_relations_by_pattern", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.980649, "supported_languages": null}, "macro.dbt_utils.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.981028, "supported_languages": null}, "macro.dbt_utils.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9813702, "supported_languages": null}, "macro.dbt_utils.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.981523, "supported_languages": null}, "macro.dbt_utils.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "unique_id": "macro.dbt_utils.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9819489, "supported_languages": null}, "macro.dbt_utils.get_relations_by_prefix": {"name": "get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9823518, "supported_languages": null}, "macro.dbt_utils.default__get_relations_by_prefix": {"name": "default__get_relations_by_prefix", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9830358, "supported_languages": null}, "macro.dbt_utils.get_tables_by_prefix_sql": {"name": "get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.983339, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"name": "default__get_tables_by_prefix_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.983563, "supported_languages": null}, "macro.dbt_utils.star": {"name": "star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix, quote_identifiers)) }}\r\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9843168, "supported_languages": null}, "macro.dbt_utils.default__star": {"name": "default__star", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "unique_id": "macro.dbt_utils.default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='', quote_identifiers=True) -%}\r\n    {%- do dbt_utils._is_relation(from, 'star') -%}\r\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\r\n\r\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\r\n    {%- if not execute -%}\r\n        {% do return('*') %}\r\n    {%- endif -%}\r\n\r\n    {% set cols = dbt_utils.get_filtered_columns_in_relation(from, except) %}\r\n\r\n    {%- if cols|length <= 0 -%}\r\n        {% if flags.WHICH == 'compile' %}\r\n            {% set response %}\r\n*\r\n/* No columns were returned. Maybe the relation doesn't exist yet \r\nor all columns were excluded. This star is only output during  \r\ndbt compile, and exists to keep SQLFluff happy. */\r\n            {% endset %}\r\n            {% do return(response) %}\r\n        {% else %}\r\n            {% do return(\"/* no columns returned from star() macro */\") %}\r\n        {% endif %}\r\n    {%- else -%}\r\n        {%- for col in cols %}\r\n            {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}\r\n                {%- if quote_identifiers -%}\r\n                    {{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' %} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {%- else -%}\r\n                    {{ col|trim }} {%- if prefix!='' or suffix!='' %} as {{ (prefix ~ col ~ suffix)|trim }} {%- endif -%}\r\n                {% endif %}\r\n            {%- if not loop.last %},{{ '\\n  ' }}{%- endif -%}\r\n        {%- endfor -%}\r\n    {% endif %}\r\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.985557, "supported_languages": null}, "macro.dbt_utils.unpivot": {"name": "unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', quote_identifiers=False) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, quote_identifiers)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.986242, "supported_languages": null}, "macro.dbt_utils.default__unpivot": {"name": "default__unpivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "unique_id": "macro.dbt_utils.default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', quote_identifiers=False) -%}\n\n    {% if not relation %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    {%- set current_col_name = adapter.quote(col.column) if quote_identifiers else col.column -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ adapter.quote(exclude_col) if quote_identifiers else exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt.type_string() }}) as {{ adapter.quote(field_name) if quote_identifiers else field_name  }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt.cast_bool_to_text(current_col_name) }}\n             {% else %}\n           {{ current_col_name }}\n             {% endif %}\n           as {{ cast_to }}) as {{ adapter.quote(value_name) if quote_identifiers else value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.type_string", "macro.dbt.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.987742, "supported_languages": null}, "macro.dbt_utils.safe_divide": {"name": "safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.safe_divide", "macro_sql": "{% macro safe_divide(numerator, denominator) -%}\n  {{ return(adapter.dispatch('safe_divide', 'dbt_utils')(numerator, denominator)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_divide"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.987988, "supported_languages": null}, "macro.dbt_utils.default__safe_divide": {"name": "default__safe_divide", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_divide.sql", "original_file_path": "macros/sql/safe_divide.sql", "unique_id": "macro.dbt_utils.default__safe_divide", "macro_sql": "{% macro default__safe_divide(numerator, denominator) %}\n    ( {{ numerator }} ) / nullif( ( {{ denominator }} ), 0)\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.988101, "supported_languages": null}, "macro.dbt_utils.union_relations": {"name": "union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.989022, "supported_languages": null}, "macro.dbt_utils.default__union_relations": {"name": "default__union_relations", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "unique_id": "macro.dbt_utils.default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation', where=none) -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n    {%- set all_excludes = [] -%}\n    {%- set all_includes = [] -%}\n\n    {%- if exclude -%}\n        {%- for exc in exclude -%}\n            {%- do all_excludes.append(exc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- if include -%}\n        {%- for inc in include -%}\n            {%- do all_includes.append(inc | lower) -%}\n        {%- endfor -%}\n    {%- endif -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column | lower in all_excludes -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column | lower not in all_includes -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n    {%- set dbt_command = flags.WHICH -%}\n\n\n    {% if dbt_command in ['run', 'build'] %}\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                {%- if source_column_name is not none %}\n                cast({{ dbt.string_literal(relation) }} as {{ dbt.type_string() }}) as {{ source_column_name }},\n                {%- endif %}\n\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n\n            {% if where -%}\n            where {{ where }}\n            {%- endif %}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt.string_literal", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.991789, "supported_languages": null}, "macro.dbt_utils.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.992064, "supported_languages": null}, "macro.dbt_utils.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "unique_id": "macro.dbt_utils.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.992276, "supported_languages": null}, "macro.dbt_utils.deduplicate": {"name": "deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.deduplicate", "macro_sql": "{%- macro deduplicate(relation, partition_by, order_by) -%}\n    {{ return(adapter.dispatch('deduplicate', 'dbt_utils')(relation, partition_by, order_by)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.snowflake__deduplicate"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.992813, "supported_languages": null}, "macro.dbt_utils.default__deduplicate": {"name": "default__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.default__deduplicate", "macro_sql": "\n\n{%- macro default__deduplicate(relation, partition_by, order_by) -%}\n\n    with row_numbered as (\n        select\n            _inner.*,\n            row_number() over (\n                partition by {{ partition_by }}\n                order by {{ order_by }}\n            ) as rn\n        from {{ relation }} as _inner\n    )\n\n    select\n        distinct data.*\n    from {{ relation }} as data\n    {#\n    -- Not all DBs will support natural joins but the ones that do include:\n    -- Oracle, MySQL, SQLite, Redshift, Teradata, Materialize, Databricks\n    -- Apache Spark, SingleStore, Vertica\n    -- Those that do not appear to support natural joins include:\n    -- SQLServer, Trino, Presto, Rockset, Athena\n    #}\n    natural join row_numbered\n    where row_numbered.rn = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9930098, "supported_languages": null}, "macro.dbt_utils.redshift__deduplicate": {"name": "redshift__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.redshift__deduplicate", "macro_sql": "{% macro redshift__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }} as tt\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.993151, "supported_languages": null}, "macro.dbt_utils.postgres__deduplicate": {"name": "postgres__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.postgres__deduplicate", "macro_sql": "\n{%- macro postgres__deduplicate(relation, partition_by, order_by) -%}\n\n    select\n        distinct on ({{ partition_by }}) *\n    from {{ relation }}\n    order by {{ partition_by }}{{ ',' ~ order_by }}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.993311, "supported_languages": null}, "macro.dbt_utils.snowflake__deduplicate": {"name": "snowflake__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.snowflake__deduplicate", "macro_sql": "\n{%- macro snowflake__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.993454, "supported_languages": null}, "macro.dbt_utils.databricks__deduplicate": {"name": "databricks__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.databricks__deduplicate", "macro_sql": "\n{%- macro databricks__deduplicate(relation, partition_by, order_by) -%}\n\n    select *\n    from {{ relation }}\n    qualify\n        row_number() over (\n            partition by {{ partition_by }}\n            order by {{ order_by }}\n        ) = 1\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.993592, "supported_languages": null}, "macro.dbt_utils.bigquery__deduplicate": {"name": "bigquery__deduplicate", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/deduplicate.sql", "original_file_path": "macros/sql/deduplicate.sql", "unique_id": "macro.dbt_utils.bigquery__deduplicate", "macro_sql": "\n{%- macro bigquery__deduplicate(relation, partition_by, order_by) -%}\n\n    select unique.*\n    from (\n        select\n            array_agg (\n                original\n                order by {{ order_by }}\n                limit 1\n            )[offset(0)] unique\n        from {{ relation }} original\n        group by {{ partition_by }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.993736, "supported_languages": null}, "macro.dbt_utils.surrogate_key": {"name": "surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.994045, "supported_languages": null}, "macro.dbt_utils.default__surrogate_key": {"name": "default__surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "unique_id": "macro.dbt_utils.default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- set error_message = '\nWarning: `dbt_utils.surrogate_key` has been replaced by \\\n`dbt_utils.generate_surrogate_key`. The new macro treats null values \\\ndifferently to empty strings. To restore the behaviour of the original \\\nmacro, add a global variable in dbt_project.yml called \\\n`surrogate_key_treat_nulls_as_empty_strings` to your \\\ndbt_project.yml file with a value of True. \\\nThe {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.raise_compiler_error(error_message) -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.99425, "supported_languages": null}, "macro.dbt_utils.safe_add": {"name": "safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.safe_add", "macro_sql": "{%- macro safe_add(field_list) -%}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.994528, "supported_languages": null}, "macro.dbt_utils.default__safe_add": {"name": "default__safe_add", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "unique_id": "macro.dbt_utils.default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add(field_list) -%}\n\n{%- if field_list is not iterable or field_list is string or field_list is mapping -%}\n\n{%- set error_message = '\nWarning: the `safe_add` macro now takes a single list argument instead of \\\nstring arguments. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{%- endif -%}\n\n{% set fields = [] %}\n\n{%- for field in field_list -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.994984, "supported_languages": null}, "macro.dbt_utils.nullcheck": {"name": "nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.995248, "supported_languages": null}, "macro.dbt_utils.default__nullcheck": {"name": "default__nullcheck", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "unique_id": "macro.dbt_utils.default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9955242, "supported_languages": null}, "macro.dbt_utils.get_tables_by_pattern_sql": {"name": "get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.99624, "supported_languages": null}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"name": "default__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.996542, "supported_languages": null}, "macro.dbt_utils.redshift__get_tables_by_pattern_sql": {"name": "redshift__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.redshift__get_tables_by_pattern_sql", "macro_sql": "{% macro redshift__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% set sql %}\n        select distinct\n            table_schema as {{ adapter.quote('table_schema') }},\n            table_name as {{ adapter.quote('table_name') }},\n            {{ dbt_utils.get_table_types_sql() }}\n        from \"{{ database }}\".\"information_schema\".\"tables\"\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n        union all\n        select distinct\n            schemaname as {{ adapter.quote('table_schema') }},\n            tablename as {{ adapter.quote('table_name') }},\n            'external' as {{ adapter.quote('table_type') }}\n        from svv_external_tables\n        where redshift_database_name = '{{ database }}'\n        and schemaname ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n    {% endset %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.997102, "supported_languages": null}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"name": "bigquery__get_tables_by_pattern_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                {{ dbt_utils.get_table_types_sql() }}\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata", "macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.997709, "supported_languages": null}, "macro.dbt_utils._bigquery__get_matching_schemata": {"name": "_bigquery__get_matching_schemata", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.998131, "supported_languages": null}, "macro.dbt_utils.get_column_values": {"name": "get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default, where)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287420.9987662, "supported_languages": null}, "macro.dbt_utils.default__get_column_values": {"name": "default__get_column_values", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "unique_id": "macro.dbt_utils.default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none, where=none) -%}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {% set default = [] if not default %}\n        {{ return(default) }}\n    {% endif %}\n\n    {%- do dbt_utils._is_ephemeral(table, 'get_column_values') -%}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n\n            {% if where is not none %}\n            where {{ where }}\n            {% endif %}\n\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_ephemeral", "macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.00003, "supported_languages": null}, "macro.dbt_utils.pivot": {"name": "pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.000782, "supported_languages": null}, "macro.dbt_utils.default__pivot": {"name": "default__pivot", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "unique_id": "macro.dbt_utils.default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.001473, "supported_languages": null}, "macro.dbt_utils.get_filtered_columns_in_relation": {"name": "get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.get_filtered_columns_in_relation", "macro_sql": "{% macro get_filtered_columns_in_relation(from, except=[]) -%}\n    {{ return(adapter.dispatch('get_filtered_columns_in_relation', 'dbt_utils')(from, except)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_filtered_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0018299, "supported_languages": null}, "macro.dbt_utils.default__get_filtered_columns_in_relation": {"name": "default__get_filtered_columns_in_relation", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_filtered_columns_in_relation.sql", "original_file_path": "macros/sql/get_filtered_columns_in_relation.sql", "unique_id": "macro.dbt_utils.default__get_filtered_columns_in_relation", "macro_sql": "{% macro default__get_filtered_columns_in_relation(from, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'get_filtered_columns_in_relation') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'get_filtered_columns_in_relation') -%}\n\n    {# -- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {{ return(include_cols) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.002433, "supported_languages": null}, "macro.dbt_utils.width_bucket": {"name": "width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.snowflake__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0028229, "supported_languages": null}, "macro.dbt_utils.default__width_bucket": {"name": "default__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt.safe_cast(expr, dbt.type_numeric() ) }},\n                    {{ dbt.safe_cast(bin_size, dbt.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.safe_cast", "macro.dbt.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.003204, "supported_languages": null}, "macro.dbt_utils.snowflake__width_bucket": {"name": "snowflake__width_bucket", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/width_bucket.sql", "original_file_path": "macros/sql/width_bucket.sql", "unique_id": "macro.dbt_utils.snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.003365, "supported_languages": null}, "macro.dbt_utils.get_query_results_as_dict": {"name": "get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.00366, "supported_languages": null}, "macro.dbt_utils.default__get_query_results_as_dict": {"name": "default__get_query_results_as_dict", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0041568, "supported_languages": null}, "macro.dbt_utils.generate_surrogate_key": {"name": "generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.generate_surrogate_key", "macro_sql": "{%- macro generate_surrogate_key(field_list) -%}\n    {{ return(adapter.dispatch('generate_surrogate_key', 'dbt_utils')(field_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__generate_surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0044641, "supported_languages": null}, "macro.dbt_utils.default__generate_surrogate_key": {"name": "default__generate_surrogate_key", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/generate_surrogate_key.sql", "original_file_path": "macros/sql/generate_surrogate_key.sql", "unique_id": "macro.dbt_utils.default__generate_surrogate_key", "macro_sql": "\n\n{%- macro default__generate_surrogate_key(field_list) -%}\n\n{%- if var('surrogate_key_treat_nulls_as_empty_strings', False) -%}\n    {%- set default_null_value = \"\" -%}\n{%- else -%}\n    {%- set default_null_value = '_dbt_utils_surrogate_key_null_' -%}\n{%- endif -%}\n\n{%- set fields = [] -%}\n\n{%- for field in field_list -%}\n\n    {%- do fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt.type_string() ~ \"), '\" ~ default_null_value  ~\"')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- do fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{ dbt.hash(dbt.concat(fields)) }}\n\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_string", "macro.dbt.hash", "macro.dbt.concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0049841, "supported_languages": null}, "macro.dbt_utils.get_table_types_sql": {"name": "get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.005284, "supported_languages": null}, "macro.dbt_utils.default__get_table_types_sql": {"name": "default__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.005405, "supported_languages": null}, "macro.dbt_utils.postgres__get_table_types_sql": {"name": "postgres__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0055199, "supported_languages": null}, "macro.dbt_utils.databricks__get_table_types_sql": {"name": "databricks__get_table_types_sql", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "unique_id": "macro.dbt_utils.databricks__get_table_types_sql", "macro_sql": "{% macro databricks__get_table_types_sql() %}\n            case table_type\n                when 'MANAGED' then 'table'\n                when 'BASE TABLE' then 'table'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as {{ adapter.quote('table_type') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0056372, "supported_languages": null}, "macro.dbt_utils.get_single_value": {"name": "get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.get_single_value", "macro_sql": "{% macro get_single_value(query, default=none) %}\n    {{ return(adapter.dispatch('get_single_value', 'dbt_utils')(query, default)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__get_single_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.00598, "supported_languages": null}, "macro.dbt_utils.default__get_single_value": {"name": "default__get_single_value", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/get_single_value.sql", "original_file_path": "macros/sql/get_single_value.sql", "unique_id": "macro.dbt_utils.default__get_single_value", "macro_sql": "{% macro default__get_single_value(query, default) %}\n\n{# This macro returns the (0, 0) record in a query, i.e. the first row of the first column #}\n\n    {%- call statement('get_query_result', fetch_result=True, auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {%- if execute -%}\n\n        {% set r = load_result('get_query_result').table.columns[0].values() %}\n        {% if r | length == 0 %}\n            {% do print('Query `' ~ query ~ '` returned no rows. Using the default value: ' ~ default) %}\n            {% set sql_result = default %}\n        {% else %}\n            {% set sql_result = r[0] %}\n        {% endif %}\n        \n    {%- else -%}\n    \n        {% set sql_result = default %}\n    \n    {%- endif -%}\n\n    {% do return(sql_result) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0065951, "supported_languages": null}, "macro.dbt_utils.degrees_to_radians": {"name": "degrees_to_radians", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.006984, "supported_languages": null}, "macro.dbt_utils.haversine_distance": {"name": "haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.007211, "supported_languages": null}, "macro.dbt_utils.default__haversine_distance": {"name": "default__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.007684, "supported_languages": null}, "macro.dbt_utils.bigquery__haversine_distance": {"name": "bigquery__haversine_distance", "resource_type": "macro", "package_name": "dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "unique_id": "macro.dbt_utils.bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.008349, "supported_languages": null}, "macro.dbt_date.get_date_dimension": {"name": "get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.get_date_dimension", "macro_sql": "{% macro get_date_dimension(start_date, end_date) %}\n    {{ adapter.dispatch(\"get_date_dimension\", \"dbt_date\")(start_date, end_date) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_date_dimension"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.009645, "supported_languages": null}, "macro.dbt_date.default__get_date_dimension": {"name": "default__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.default__get_date_dimension", "macro_sql": "{% macro default__get_date_dimension(start_date, end_date) %}\n    with\n        base_dates as ({{ dbt_date.get_base_dates(start_date, end_date) }}),\n        dates_with_prior_year_dates as (\n\n            select\n                cast(d.date_day as date) as date_day,\n                cast(\n                    {{ dbt.dateadd(\"year\", -1, \"d.date_day\") }} as date\n                ) as prior_year_date_day,\n                cast(\n                    {{ dbt.dateadd(\"day\", -364, \"d.date_day\") }} as date\n                ) as prior_year_over_year_date_day\n            from base_dates d\n\n        )\n    select\n        d.date_day,\n        {{ dbt_date.yesterday(\"d.date_day\") }} as prior_date_day,\n        {{ dbt_date.tomorrow(\"d.date_day\") }} as next_date_day,\n        d.prior_year_date_day as prior_year_date_day,\n        d.prior_year_over_year_date_day,\n        {{ dbt_date.day_of_week(\"d.date_day\", isoweek=false) }} as day_of_week,\n        {{ dbt_date.day_of_week(\"d.date_day\", isoweek=true) }} as day_of_week_iso,\n        {{ dbt_date.day_name(\"d.date_day\", short=false) }} as day_of_week_name,\n        {{ dbt_date.day_name(\"d.date_day\", short=true) }} as day_of_week_name_short,\n        {{ dbt_date.day_of_month(\"d.date_day\") }} as day_of_month,\n        {{ dbt_date.day_of_year(\"d.date_day\") }} as day_of_year,\n\n        {{ dbt_date.week_start(\"d.date_day\") }} as week_start_date,\n        {{ dbt_date.week_end(\"d.date_day\") }} as week_end_date,\n        {{ dbt_date.week_start(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_week_start_date,\n        {{ dbt_date.week_end(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_week_end_date,\n        {{ dbt_date.week_of_year(\"d.date_day\") }} as week_of_year,\n\n        {{ dbt_date.iso_week_start(\"d.date_day\") }} as iso_week_start_date,\n        {{ dbt_date.iso_week_end(\"d.date_day\") }} as iso_week_end_date,\n        {{ dbt_date.iso_week_start(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_iso_week_start_date,\n        {{ dbt_date.iso_week_end(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_iso_week_end_date,\n        {{ dbt_date.iso_week_of_year(\"d.date_day\") }} as iso_week_of_year,\n        {{ dbt_date.iso_year_week(\"d.date_day\") }} as iso_year_week,\n\n        {{ dbt_date.week_of_year(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_week_of_year,\n        {{ dbt_date.iso_week_of_year(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_iso_week_of_year,\n\n        cast(\n            {{ dbt_date.date_part(\"month\", \"d.date_day\") }} as {{ dbt.type_int() }}\n        ) as month_of_year,\n        {{ dbt_date.month_name(\"d.date_day\", short=false) }} as month_name,\n        {{ dbt_date.month_name(\"d.date_day\", short=true) }} as month_name_short,\n\n        cast({{ dbt.date_trunc(\"month\", \"d.date_day\") }} as date) as month_start_date,\n        cast({{ last_day(\"d.date_day\", \"month\") }} as date) as month_end_date,\n\n        cast(\n            {{ dbt.date_trunc(\"month\", \"d.prior_year_date_day\") }} as date\n        ) as prior_year_month_start_date,\n        cast(\n            {{ last_day(\"d.prior_year_date_day\", \"month\") }} as date\n        ) as prior_year_month_end_date,\n\n        cast(\n            {{ dbt_date.date_part(\"quarter\", \"d.date_day\") }} as {{ dbt.type_int() }}\n        ) as quarter_of_year,\n        cast(\n            {{ dbt.date_trunc(\"quarter\", \"d.date_day\") }} as date\n        ) as quarter_start_date,\n        cast({{ last_day(\"d.date_day\", \"quarter\") }} as date) as quarter_end_date,\n\n        cast(\n            {{ dbt_date.date_part(\"year\", \"d.date_day\") }} as {{ dbt.type_int() }}\n        ) as year_number,\n        cast({{ dbt.date_trunc(\"year\", \"d.date_day\") }} as date) as year_start_date,\n        cast({{ last_day(\"d.date_day\", \"year\") }} as date) as year_end_date\n    from dates_with_prior_year_dates d\n    order by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.iso_year_week", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.011491, "supported_languages": null}, "macro.dbt_date.postgres__get_date_dimension": {"name": "postgres__get_date_dimension", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_date_dimension.sql", "original_file_path": "macros/get_date_dimension.sql", "unique_id": "macro.dbt_date.postgres__get_date_dimension", "macro_sql": "{% macro postgres__get_date_dimension(start_date, end_date) %}\n    with\n        base_dates as ({{ dbt_date.get_base_dates(start_date, end_date) }}),\n        dates_with_prior_year_dates as (\n\n            select\n                cast(d.date_day as date) as date_day,\n                cast(\n                    {{ dbt.dateadd(\"year\", -1, \"d.date_day\") }} as date\n                ) as prior_year_date_day,\n                cast(\n                    {{ dbt.dateadd(\"day\", -364, \"d.date_day\") }} as date\n                ) as prior_year_over_year_date_day\n            from base_dates d\n\n        )\n    select\n        d.date_day,\n        {{ dbt_date.yesterday(\"d.date_day\") }} as prior_date_day,\n        {{ dbt_date.tomorrow(\"d.date_day\") }} as next_date_day,\n        d.prior_year_date_day as prior_year_date_day,\n        d.prior_year_over_year_date_day,\n        {{ dbt_date.day_of_week(\"d.date_day\", isoweek=true) }} as day_of_week,\n\n        {{ dbt_date.day_name(\"d.date_day\", short=false) }} as day_of_week_name,\n        {{ dbt_date.day_name(\"d.date_day\", short=true) }} as day_of_week_name_short,\n        {{ dbt_date.day_of_month(\"d.date_day\") }} as day_of_month,\n        {{ dbt_date.day_of_year(\"d.date_day\") }} as day_of_year,\n\n        {{ dbt_date.week_start(\"d.date_day\") }} as week_start_date,\n        {{ dbt_date.week_end(\"d.date_day\") }} as week_end_date,\n        {{ dbt_date.week_start(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_week_start_date,\n        {{ dbt_date.week_end(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_week_end_date,\n        {{ dbt_date.week_of_year(\"d.date_day\") }} as week_of_year,\n\n        {{ dbt_date.iso_week_start(\"d.date_day\") }} as iso_week_start_date,\n        {{ dbt_date.iso_week_end(\"d.date_day\") }} as iso_week_end_date,\n        {{ dbt_date.iso_week_start(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_iso_week_start_date,\n        {{ dbt_date.iso_week_end(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_iso_week_end_date,\n        {{ dbt_date.iso_week_of_year(\"d.date_day\") }} as iso_week_of_year,\n\n        {{ dbt_date.week_of_year(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_week_of_year,\n        {{ dbt_date.iso_week_of_year(\"d.prior_year_over_year_date_day\") }}\n        as prior_year_iso_week_of_year,\n\n        cast(\n            {{ dbt_date.date_part(\"month\", \"d.date_day\") }} as {{ dbt.type_int() }}\n        ) as month_of_year,\n        {{ dbt_date.month_name(\"d.date_day\", short=false) }} as month_name,\n        {{ dbt_date.month_name(\"d.date_day\", short=true) }} as month_name_short,\n\n        cast({{ dbt.date_trunc(\"month\", \"d.date_day\") }} as date) as month_start_date,\n        cast({{ last_day(\"d.date_day\", \"month\") }} as date) as month_end_date,\n\n        cast(\n            {{ dbt.date_trunc(\"month\", \"d.prior_year_date_day\") }} as date\n        ) as prior_year_month_start_date,\n        cast(\n            {{ last_day(\"d.prior_year_date_day\", \"month\") }} as date\n        ) as prior_year_month_end_date,\n\n        cast(\n            {{ dbt_date.date_part(\"quarter\", \"d.date_day\") }} as {{ dbt.type_int() }}\n        ) as quarter_of_year,\n        cast(\n            {{ dbt.date_trunc(\"quarter\", \"d.date_day\") }} as date\n        ) as quarter_start_date,\n        {# last_day does not support quarter because postgresql does not support quarter interval. #}\n        cast(\n            {{\n                dbt.dateadd(\n                    \"day\",\n                    \"-1\",\n                    dbt.dateadd(\n                        \"month\", \"3\", dbt.date_trunc(\"quarter\", \"d.date_day\")\n                    ),\n                )\n            }} as date\n        ) as quarter_end_date,\n\n        cast(\n            {{ dbt_date.date_part(\"year\", \"d.date_day\") }} as {{ dbt.type_int() }}\n        ) as year_number,\n        cast({{ dbt.date_trunc(\"year\", \"d.date_day\") }} as date) as year_start_date,\n        cast({{ last_day(\"d.date_day\", \"year\") }} as date) as year_end_date\n    from dates_with_prior_year_dates d\n    order by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_base_dates", "macro.dbt.dateadd", "macro.dbt_date.yesterday", "macro.dbt_date.tomorrow", "macro.dbt_date.day_of_week", "macro.dbt_date.day_name", "macro.dbt_date.day_of_month", "macro.dbt_date.day_of_year", "macro.dbt_date.week_start", "macro.dbt_date.week_end", "macro.dbt_date.week_of_year", "macro.dbt_date.iso_week_start", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt.type_int", "macro.dbt_date.month_name", "macro.dbt.date_trunc", "macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.01369, "supported_languages": null}, "macro.dbt_date.get_base_dates": {"name": "get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.get_base_dates", "macro_sql": "{% macro get_base_dates(\n    start_date=None, end_date=None, n_dateparts=None, datepart=\"day\"\n) %}\n    {{\n        adapter.dispatch(\"get_base_dates\", \"dbt_date\")(\n            start_date, end_date, n_dateparts, datepart\n        )\n    }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_base_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.014407, "supported_languages": null}, "macro.dbt_date.default__get_base_dates": {"name": "default__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.default__get_base_dates", "macro_sql": "{% macro default__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n    {%- if start_date and end_date -%}\n        {%- set start_date = (\n            \"cast('\" ~ start_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"\n        ) -%}\n        {%- set end_date = (\n            \"cast('\" ~ end_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"\n        ) -%}\n\n    {%- elif n_dateparts and datepart -%}\n\n        {%- set start_date = dbt.dateadd(\n            datepart, -1 * n_dateparts, dbt_date.today()\n        ) -%}\n        {%- set end_date = dbt_date.tomorrow() -%}\n    {%- endif -%}\n\n    with\n        date_spine as (\n\n            {{\n                dbt_date.date_spine(\n                    datepart=datepart,\n                    start_date=start_date,\n                    end_date=end_date,\n                )\n            }}\n\n        )\n    select\n        cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\n    from date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp", "macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0150669, "supported_languages": null}, "macro.dbt_date.bigquery__get_base_dates": {"name": "bigquery__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.bigquery__get_base_dates", "macro_sql": "{% macro bigquery__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n    {%- if start_date and end_date -%}\n        {%- set start_date = \"cast('\" ~ start_date ~ \"' as datetime )\" -%}\n        {%- set end_date = \"cast('\" ~ end_date ~ \"' as datetime )\" -%}\n\n    {%- elif n_dateparts and datepart -%}\n\n        {%- set start_date = dbt.dateadd(\n            datepart, -1 * n_dateparts, dbt_date.today()\n        ) -%}\n        {%- set end_date = dbt_date.tomorrow() -%}\n    {%- endif -%}\n\n    with\n        date_spine as (\n\n            {{\n                dbt_date.date_spine(\n                    datepart=datepart,\n                    start_date=start_date,\n                    end_date=end_date,\n                )\n            }}\n\n        )\n    select\n        cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\n    from date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt_date.today", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine", "macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.015638, "supported_languages": null}, "macro.dbt_date.trino__get_base_dates": {"name": "trino__get_base_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/get_base_dates.sql", "original_file_path": "macros/get_base_dates.sql", "unique_id": "macro.dbt_date.trino__get_base_dates", "macro_sql": "{% macro trino__get_base_dates(start_date, end_date, n_dateparts, datepart) %}\n\n    {%- if start_date and end_date -%}\n        {%- set start_date = (\n            \"cast('\" ~ start_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"\n        ) -%}\n        {%- set end_date = (\n            \"cast('\" ~ end_date ~ \"' as \" ~ dbt.type_timestamp() ~ \")\"\n        ) -%}\n\n    {%- elif n_dateparts and datepart -%}\n\n        {%- set start_date = dbt.dateadd(datepart, -1 * n_dateparts, dbt_date.now()) -%}\n        {%- set end_date = dbt_date.tomorrow() -%}\n    {%- endif -%}\n\n    with\n        date_spine as (\n\n            {{\n                dbt_date.date_spine(\n                    datepart=datepart,\n                    start_date=start_date,\n                    end_date=end_date,\n                )\n            }}\n\n        )\n    select\n        cast(d.date_{{ datepart }} as {{ dbt.type_timestamp() }}) as date_{{ datepart }}\n    from date_spine d\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp", "macro.dbt.dateadd", "macro.dbt_date.now", "macro.dbt_date.tomorrow", "macro.dbt_date.date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0162811, "supported_languages": null}, "macro.dbt_date.get_intervals_between": {"name": "get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{\n        return(\n            adapter.dispatch(\"get_intervals_between\", \"dbt_date\")(\n                start_date, end_date, datepart\n            )\n        )\n    }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.016802, "supported_languages": null}, "macro.dbt_date.default__get_intervals_between": {"name": "default__get_intervals_between", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement(\"get_intervals_between\", fetch_result=True) %}\n\n        select {{ dbt.datediff(start_date, end_date, datepart) }}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result(\"get_intervals_between\") -%}\n\n    {%- if value_list and value_list[\"data\"] -%}\n        {%- set values = value_list[\"data\"] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%} {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0172899, "supported_languages": null}, "macro.dbt_date.date_spine": {"name": "date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{\n        return(\n            adapter.dispatch(\"date_spine\", \"dbt_date\")(datepart, start_date, end_date)\n        )\n    }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0174878, "supported_languages": null}, "macro.dbt_date.default__date_spine": {"name": "default__date_spine", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/date_spine.sql", "original_file_path": "macros/_utils/date_spine.sql", "unique_id": "macro.dbt_date.default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n    {# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dbt.dateadd(week, 1, current_date)\"\n) #}\n    with\n        rawdata as (\n\n            {{\n                dbt_date.generate_series(\n                    dbt_date.get_intervals_between(start_date, end_date, datepart)\n                )\n            }}\n\n        ),\n\n        all_periods as (\n\n            select\n                (\n                    {{\n                        dbt.dateadd(\n                            datepart,\n                            \"(row_number() over (order by 1) - 1)\",\n                            start_date,\n                        )\n                    }}\n                ) as date_{{ datepart }}\n            from rawdata\n\n        ),\n\n        filtered as (\n\n            select * from all_periods where date_{{ datepart }} <= {{ end_date }}\n\n        )\n\n    select *\n    from filtered\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.generate_series", "macro.dbt_date.get_intervals_between", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0177999, "supported_languages": null}, "macro.dbt_date.get_powers_of_two": {"name": "get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch(\"get_powers_of_two\", \"dbt_date\")(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.018219, "supported_languages": null}, "macro.dbt_date.default__get_powers_of_two": {"name": "default__get_powers_of_two", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n        {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n        {% if upper_bound <= 2**loop.index %} {{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.018569, "supported_languages": null}, "macro.dbt_date.generate_series": {"name": "generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch(\"generate_series\", \"dbt_date\")(upper_bound)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0188742, "supported_languages": null}, "macro.dbt_date.default__generate_series": {"name": "default__generate_series", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/generate_series.sql", "original_file_path": "macros/_utils/generate_series.sql", "unique_id": "macro.dbt_date.default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_date.get_powers_of_two(upper_bound) %}\n\n    with\n        p as (\n            select 0 as generated_number\n            union all\n            select 1\n        ),\n        unioned as (\n\n            select\n\n                {% for i in range(n) %}\n                    p{{ i }}.generated_number * power(2, {{ i }})\n                    {% if not loop.last %} + {% endif %}\n                {% endfor %}\n                + 1 as generated_number\n\n            from\n\n            {% for i in range(n) %}\n                    p as p{{ i }} {% if not loop.last %} cross join {% endif %}\n            {% endfor %}\n\n        )\n\n    select *\n    from unioned\n    where generated_number <= {{ upper_bound }}\n    order by generated_number\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.019503, "supported_languages": null}, "macro.dbt_date.get_localized_datepart_names": {"name": "get_localized_datepart_names", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/get_localized_datepart_names.sql", "original_file_path": "macros/_utils/get_localized_datepart_names.sql", "unique_id": "macro.dbt_date.get_localized_datepart_names", "macro_sql": "{% macro get_localized_datepart_names(language, datepart) %}\n    {{\n        return(\n            adapter.dispatch(\"get_localized_datepart_names\", \"dbt_date\")(\n                language, datepart\n            )\n        )\n    }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_localized_datepart_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.02424, "supported_languages": null}, "macro.dbt_date.default__get_localized_datepart_names": {"name": "default__get_localized_datepart_names", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/get_localized_datepart_names.sql", "original_file_path": "macros/_utils/get_localized_datepart_names.sql", "unique_id": "macro.dbt_date.default__get_localized_datepart_names", "macro_sql": "{% macro default__get_localized_datepart_names(language, datepart) %}\n    {% set datepart_names_by_language = {\n        \"en\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"Monday\",\n                    \"2\": \"Tuesday\",\n                    \"3\": \"Wednesday\",\n                    \"4\": \"Thursday\",\n                    \"5\": \"Friday\",\n                    \"6\": \"Saturday\",\n                    \"7\": \"Sunday\",\n                },\n                \"short\": {\n                    \"1\": \"Mon\",\n                    \"2\": \"Tue\",\n                    \"3\": \"Wed\",\n                    \"4\": \"Thu\",\n                    \"5\": \"Fri\",\n                    \"6\": \"Sat\",\n                    \"7\": \"Sun\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"January\",\n                    \"2\": \"February\",\n                    \"3\": \"March\",\n                    \"4\": \"April\",\n                    \"5\": \"May\",\n                    \"6\": \"June\",\n                    \"7\": \"July\",\n                    \"8\": \"August\",\n                    \"9\": \"September\",\n                    \"10\": \"October\",\n                    \"11\": \"November\",\n                    \"12\": \"December\",\n                },\n                \"short\": {\n                    \"1\": \"Jan\",\n                    \"2\": \"Feb\",\n                    \"3\": \"Mar\",\n                    \"4\": \"Apr\",\n                    \"5\": \"May\",\n                    \"6\": \"Jun\",\n                    \"7\": \"Jul\",\n                    \"8\": \"Aug\",\n                    \"9\": \"Sep\",\n                    \"10\": \"Oct\",\n                    \"11\": \"Nov\",\n                    \"12\": \"Dec\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"winter\",\n                \"2\": \"spring\",\n                \"3\": \"summer\",\n                \"4\": \"autumn\",\n            },\n        },\n        \"nl\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"maandag\",\n                    \"2\": \"dinsdag\",\n                    \"3\": \"woensdag\",\n                    \"4\": \"donderdag\",\n                    \"5\": \"vrijdag\",\n                    \"6\": \"zaterdag\",\n                    \"7\": \"zondag\",\n                },\n                \"short\": {\n                    \"1\": \"ma\",\n                    \"2\": \"di\",\n                    \"3\": \"wo\",\n                    \"4\": \"do\",\n                    \"5\": \"vr\",\n                    \"6\": \"za\",\n                    \"7\": \"zo\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"januari\",\n                    \"2\": \"februari\",\n                    \"3\": \"maart\",\n                    \"4\": \"april\",\n                    \"5\": \"mei\",\n                    \"6\": \"juni\",\n                    \"7\": \"juli\",\n                    \"8\": \"augustus\",\n                    \"9\": \"september\",\n                    \"10\": \"oktober\",\n                    \"11\": \"november\",\n                    \"12\": \"december\",\n                },\n                \"short\": {\n                    \"1\": \"jan\",\n                    \"2\": \"feb\",\n                    \"3\": \"mrt\",\n                    \"4\": \"apr\",\n                    \"5\": \"mei\",\n                    \"6\": \"jun\",\n                    \"7\": \"jul\",\n                    \"8\": \"aug\",\n                    \"9\": \"sep\",\n                    \"10\": \"okt\",\n                    \"11\": \"nov\",\n                    \"12\": \"dec\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"winter\",\n                \"2\": \"lente\",\n                \"3\": \"zomer\",\n                \"4\": \"herfst\",\n            },\n        },\n        \"de\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"Montag\",\n                    \"2\": \"Dienstag\",\n                    \"3\": \"Mittwoch\",\n                    \"4\": \"Donnerstag\",\n                    \"5\": \"Freitag\",\n                    \"6\": \"Samstag\",\n                    \"7\": \"Sonntag\",\n                },\n                \"short\": {\n                    \"1\": \"Mo\",\n                    \"2\": \"Di\",\n                    \"3\": \"Mi\",\n                    \"4\": \"Do\",\n                    \"5\": \"Fr\",\n                    \"6\": \"Sa\",\n                    \"7\": \"So\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"Januar\",\n                    \"2\": \"Februar\",\n                    \"3\": \"M\u00e4rz\",\n                    \"4\": \"April\",\n                    \"5\": \"Mai\",\n                    \"6\": \"Juni\",\n                    \"7\": \"Juli\",\n                    \"8\": \"August\",\n                    \"9\": \"September\",\n                    \"10\": \"Oktober\",\n                    \"11\": \"November\",\n                    \"12\": \"Dezember\",\n                },\n                \"short\": {\n                    \"1\": \"Jan\",\n                    \"2\": \"Feb\",\n                    \"3\": \"M\u00e4r\",\n                    \"4\": \"Apr\",\n                    \"5\": \"Mai\",\n                    \"6\": \"Jun\",\n                    \"7\": \"Jul\",\n                    \"8\": \"Aug\",\n                    \"9\": \"Sep\",\n                    \"10\": \"Okt\",\n                    \"11\": \"Nov\",\n                    \"12\": \"Dez\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"Winter\",\n                \"2\": \"Fr\u00fchling\",\n                \"3\": \"Sommer\",\n                \"4\": \"Herbst\",\n            },\n        },\n        \"fr\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"lundi\",\n                    \"2\": \"mardi\",\n                    \"3\": \"mercredi\",\n                    \"4\": \"jeudi\",\n                    \"5\": \"vendredi\",\n                    \"6\": \"samedi\",\n                    \"7\": \"dimanche\",\n                },\n                \"short\": {\n                    \"1\": \"lun\",\n                    \"2\": \"mar\",\n                    \"3\": \"mer\",\n                    \"4\": \"jeu\",\n                    \"5\": \"ven\",\n                    \"6\": \"sam\",\n                    \"7\": \"dim\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"janvier\",\n                    \"2\": \"f\u00e9vrier\",\n                    \"3\": \"mars\",\n                    \"4\": \"avril\",\n                    \"5\": \"mai\",\n                    \"6\": \"juin\",\n                    \"7\": \"juillet\",\n                    \"8\": \"ao\u00fbt\",\n                    \"9\": \"septembre\",\n                    \"10\": \"octobre\",\n                    \"11\": \"novembre\",\n                    \"12\": \"d\u00e9cembre\",\n                },\n                \"short\": {\n                    \"1\": \"janv\",\n                    \"2\": \"f\u00e9vr\",\n                    \"3\": \"mars\",\n                    \"4\": \"avr\",\n                    \"5\": \"mai\",\n                    \"6\": \"juin\",\n                    \"7\": \"juil\",\n                    \"8\": \"ao\u00fbt\",\n                    \"9\": \"sept\",\n                    \"10\": \"oct\",\n                    \"11\": \"nov\",\n                    \"12\": \"d\u00e9c\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"hiver\",\n                \"2\": \"printemps\",\n                \"3\": \"\u00e9t\u00e9\",\n                \"4\": \"automne\",\n            },\n        },\n        \"es\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"lunes\",\n                    \"2\": \"martes\",\n                    \"3\": \"mi\u00e9rcoles\",\n                    \"4\": \"jueves\",\n                    \"5\": \"viernes\",\n                    \"6\": \"s\u00e1bado\",\n                    \"7\": \"domingo\",\n                },\n                \"short\": {\n                    \"1\": \"lun\",\n                    \"2\": \"mar\",\n                    \"3\": \"mi\u00e9\",\n                    \"4\": \"jue\",\n                    \"5\": \"vie\",\n                    \"6\": \"s\u00e1b\",\n                    \"7\": \"dom\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"enero\",\n                    \"2\": \"febrero\",\n                    \"3\": \"marzo\",\n                    \"4\": \"abril\",\n                    \"5\": \"mayo\",\n                    \"6\": \"junio\",\n                    \"7\": \"julio\",\n                    \"8\": \"agosto\",\n                    \"9\": \"septiembre\",\n                    \"10\": \"octubre\",\n                    \"11\": \"noviembre\",\n                    \"12\": \"diciembre\",\n                },\n                \"short\": {\n                    \"1\": \"ene\",\n                    \"2\": \"feb\",\n                    \"3\": \"mar\",\n                    \"4\": \"abr\",\n                    \"5\": \"may\",\n                    \"6\": \"jun\",\n                    \"7\": \"jul\",\n                    \"8\": \"ago\",\n                    \"9\": \"sept\",\n                    \"10\": \"oct\",\n                    \"11\": \"nov\",\n                    \"12\": \"dic\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"invierno\",\n                \"2\": \"primavera\",\n                \"3\": \"verano\",\n                \"4\": \"oto\u00f1o\",\n            },\n        },\n        \"it\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"luned\u00ec\",\n                    \"2\": \"marted\u00ec\",\n                    \"3\": \"mercoled\u00ec\",\n                    \"4\": \"gioved\u00ec\",\n                    \"5\": \"venerd\u00ec\",\n                    \"6\": \"sabato\",\n                    \"7\": \"domenica\",\n                },\n                \"short\": {\n                    \"1\": \"lun\",\n                    \"2\": \"mar\",\n                    \"3\": \"mer\",\n                    \"4\": \"gio\",\n                    \"5\": \"ven\",\n                    \"6\": \"sab\",\n                    \"7\": \"dom\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"gennaio\",\n                    \"2\": \"febbraio\",\n                    \"3\": \"marzo\",\n                    \"4\": \"aprile\",\n                    \"5\": \"maggio\",\n                    \"6\": \"giugno\",\n                    \"7\": \"luglio\",\n                    \"8\": \"agosto\",\n                    \"9\": \"settembre\",\n                    \"10\": \"ottobre\",\n                    \"11\": \"novembre\",\n                    \"12\": \"dicembre\",\n                },\n                \"short\": {\n                    \"1\": \"gen\",\n                    \"2\": \"feb\",\n                    \"3\": \"mar\",\n                    \"4\": \"apr\",\n                    \"5\": \"mag\",\n                    \"6\": \"giu\",\n                    \"7\": \"lug\",\n                    \"8\": \"ago\",\n                    \"9\": \"set\",\n                    \"10\": \"ott\",\n                    \"11\": \"nov\",\n                    \"12\": \"dic\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"inverno\",\n                \"2\": \"primavera\",\n                \"3\": \"estate\",\n                \"4\": \"autunno\",\n            },\n        },\n        \"pt\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"segunda-feira\",\n                    \"2\": \"ter\u00e7a-feira\",\n                    \"3\": \"quarta-feira\",\n                    \"4\": \"quinta-feira\",\n                    \"5\": \"sexta-feira\",\n                    \"6\": \"s\u00e1bado\",\n                    \"7\": \"domingo\",\n                },\n                \"short\": {\n                    \"1\": \"seg\",\n                    \"2\": \"ter\",\n                    \"3\": \"qua\",\n                    \"4\": \"qui\",\n                    \"5\": \"sex\",\n                    \"6\": \"s\u00e1b\",\n                    \"7\": \"dom\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"janeiro\",\n                    \"2\": \"fevereiro\",\n                    \"3\": \"mar\u00e7o\",\n                    \"4\": \"abril\",\n                    \"5\": \"maio\",\n                    \"6\": \"junho\",\n                    \"7\": \"julho\",\n                    \"8\": \"agosto\",\n                    \"9\": \"setembro\",\n                    \"10\": \"outubro\",\n                    \"11\": \"novembro\",\n                    \"12\": \"dezembro\",\n                },\n                \"short\": {\n                    \"1\": \"jan\",\n                    \"2\": \"fev\",\n                    \"3\": \"mar\",\n                    \"4\": \"abr\",\n                    \"5\": \"mai\",\n                    \"6\": \"jun\",\n                    \"7\": \"jul\",\n                    \"8\": \"ago\",\n                    \"9\": \"set\",\n                    \"10\": \"out\",\n                    \"11\": \"nov\",\n                    \"12\": \"dez\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"inverno\",\n                \"2\": \"primavera\",\n                \"3\": \"ver\u00e3o\",\n                \"4\": \"outono\",\n            },\n        },\n        \"pl\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"poniedzia\u0142ek\",\n                    \"2\": \"wtorek\",\n                    \"3\": \"\u015broda\",\n                    \"4\": \"czwartek\",\n                    \"5\": \"pi\u0105tek\",\n                    \"6\": \"sobota\",\n                    \"7\": \"niedziela\",\n                },\n                \"short\": {\n                    \"1\": \"pon\",\n                    \"2\": \"wt\",\n                    \"3\": \"\u015br\",\n                    \"4\": \"czw\",\n                    \"5\": \"pt\",\n                    \"6\": \"sob\",\n                    \"7\": \"niedz\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"stycze\u0144\",\n                    \"2\": \"luty\",\n                    \"3\": \"marzec\",\n                    \"4\": \"kwiecie\u0144\",\n                    \"5\": \"maj\",\n                    \"6\": \"czerwiec\",\n                    \"7\": \"lipiec\",\n                    \"8\": \"sierpie\u0144\",\n                    \"9\": \"wrzesie\u0144\",\n                    \"10\": \"pa\u017adziernik\",\n                    \"11\": \"listopad\",\n                    \"12\": \"grudzie\u0144\",\n                },\n                \"short\": {\n                    \"1\": \"sty\",\n                    \"2\": \"lut\",\n                    \"3\": \"mar\",\n                    \"4\": \"kwi\",\n                    \"5\": \"maj\",\n                    \"6\": \"cze\",\n                    \"7\": \"lip\",\n                    \"8\": \"sie\",\n                    \"9\": \"wrz\",\n                    \"10\": \"pa\u017a\",\n                    \"11\": \"lis\",\n                    \"12\": \"gru\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"zima\",\n                \"2\": \"wiosna\",\n                \"3\": \"lato\",\n                \"4\": \"jesie\u0144\",\n            },\n        },\n        \"da\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"mandag\",\n                    \"2\": \"tirsdag\",\n                    \"3\": \"onsdag\",\n                    \"4\": \"torsdag\",\n                    \"5\": \"fredag\",\n                    \"6\": \"l\u00f8rdag\",\n                    \"7\": \"s\u00f8ndag\",\n                },\n                \"short\": {\n                    \"1\": \"man\",\n                    \"2\": \"tir\",\n                    \"3\": \"ons\",\n                    \"4\": \"tor\",\n                    \"5\": \"fre\",\n                    \"6\": \"l\u00f8r\",\n                    \"7\": \"s\u00f8n\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"januar\",\n                    \"2\": \"februar\",\n                    \"3\": \"marts\",\n                    \"4\": \"april\",\n                    \"5\": \"maj\",\n                    \"6\": \"juni\",\n                    \"7\": \"juli\",\n                    \"8\": \"august\",\n                    \"9\": \"september\",\n                    \"10\": \"oktober\",\n                    \"11\": \"november\",\n                    \"12\": \"december\",\n                },\n                \"short\": {\n                    \"1\": \"jan\",\n                    \"2\": \"feb\",\n                    \"3\": \"mar\",\n                    \"4\": \"apr\",\n                    \"5\": \"maj\",\n                    \"6\": \"jun\",\n                    \"7\": \"jul\",\n                    \"8\": \"aug\",\n                    \"9\": \"sep\",\n                    \"10\": \"okt\",\n                    \"11\": \"nov\",\n                    \"12\": \"dec\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"vinter\",\n                \"2\": \"for\u00e5r\",\n                \"3\": \"sommer\",\n                \"4\": \"efter\u00e5r\",\n            },\n        },\n        \"sv\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"m\u00e5ndag\",\n                    \"2\": \"tisdag\",\n                    \"3\": \"onsdag\",\n                    \"4\": \"torsdag\",\n                    \"5\": \"fredag\",\n                    \"6\": \"l\u00f6rdag\",\n                    \"7\": \"s\u00f6ndag\",\n                },\n                \"short\": {\n                    \"1\": \"m\u00e5n\",\n                    \"2\": \"tis\",\n                    \"3\": \"ons\",\n                    \"4\": \"tor\",\n                    \"5\": \"fre\",\n                    \"6\": \"l\u00f6r\",\n                    \"7\": \"s\u00f6n\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"januari\",\n                    \"2\": \"februari\",\n                    \"3\": \"mars\",\n                    \"4\": \"april\",\n                    \"5\": \"maj\",\n                    \"6\": \"juni\",\n                    \"7\": \"juli\",\n                    \"8\": \"augusti\",\n                    \"9\": \"september\",\n                    \"10\": \"oktober\",\n                    \"11\": \"november\",\n                    \"12\": \"december\",\n                },\n                \"short\": {\n                    \"1\": \"jan\",\n                    \"2\": \"feb\",\n                    \"3\": \"mar\",\n                    \"4\": \"apr\",\n                    \"5\": \"maj\",\n                    \"6\": \"jun\",\n                    \"7\": \"jul\",\n                    \"8\": \"aug\",\n                    \"9\": \"sep\",\n                    \"10\": \"okt\",\n                    \"11\": \"nov\",\n                    \"12\": \"dec\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"vinter\",\n                \"2\": \"v\u00e5r\",\n                \"3\": \"sommar\",\n                \"4\": \"h\u00f6st\",\n            },\n        },\n        \"tr\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"Pazartesi\",\n                    \"2\": \"Sal\u0131\",\n                    \"3\": \"\u00c7ar\u015famba\",\n                    \"4\": \"Per\u015fembe\",\n                    \"5\": \"Cuma\",\n                    \"6\": \"Cumartesi\",\n                    \"7\": \"Pazar\",\n                },\n                \"short\": {\n                    \"1\": \"Pzt\",\n                    \"2\": \"Sal\",\n                    \"3\": \"\u00c7ar\",\n                    \"4\": \"Per\",\n                    \"5\": \"Cum\",\n                    \"6\": \"Cmt\",\n                    \"7\": \"Paz\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"Ocak\",\n                    \"2\": \"\u015eubat\",\n                    \"3\": \"Mart\",\n                    \"4\": \"Nisan\",\n                    \"5\": \"May\u0131s\",\n                    \"6\": \"Haziran\",\n                    \"7\": \"Temmuz\",\n                    \"8\": \"A\u011fustos\",\n                    \"9\": \"Eyl\u00fcl\",\n                    \"10\": \"Ekim\",\n                    \"11\": \"Kas\u0131m\",\n                    \"12\": \"Aral\u0131k\",\n                },\n                \"short\": {\n                    \"1\": \"Oca\",\n                    \"2\": \"\u015eub\",\n                    \"3\": \"Mar\",\n                    \"4\": \"Nis\",\n                    \"5\": \"May\",\n                    \"6\": \"Haz\",\n                    \"7\": \"Tem\",\n                    \"8\": \"A\u011fu\",\n                    \"9\": \"Eyl\",\n                    \"10\": \"Eki\",\n                    \"11\": \"Kas\",\n                    \"12\": \"Ara\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"k\u0131\u015f\",\n                \"2\": \"ilkbahar\",\n                \"3\": \"yaz\",\n                \"4\": \"sonbahar\",\n            },\n        },\n        \"cs\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"pond\u011bl\u00ed\",\n                    \"2\": \"\u00fater\u00fd\",\n                    \"3\": \"st\u0159eda\",\n                    \"4\": \"\u010dtvrtek\",\n                    \"5\": \"p\u00e1tek\",\n                    \"6\": \"sobota\",\n                    \"7\": \"ned\u011ble\",\n                },\n                \"short\": {\n                    \"1\": \"po\",\n                    \"2\": \"\u00fat\",\n                    \"3\": \"st\",\n                    \"4\": \"\u010dt\",\n                    \"5\": \"p\u00e1\",\n                    \"6\": \"so\",\n                    \"7\": \"ne\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"leden\",\n                    \"2\": \"\u00fanor\",\n                    \"3\": \"b\u0159ezen\",\n                    \"4\": \"duben\",\n                    \"5\": \"kv\u011bten\",\n                    \"6\": \"\u010derven\",\n                    \"7\": \"\u010dervenec\",\n                    \"8\": \"srpen\",\n                    \"9\": \"z\u00e1\u0159\u00ed\",\n                    \"10\": \"\u0159\u00edjen\",\n                    \"11\": \"listopad\",\n                    \"12\": \"prosinec\",\n                },\n                \"short\": {\n                    \"1\": \"led\",\n                    \"2\": \"\u00fano\",\n                    \"3\": \"b\u0159e\",\n                    \"4\": \"dub\",\n                    \"5\": \"kv\u011b\",\n                    \"6\": \"\u010der\",\n                    \"7\": \"\u010dvc\",\n                    \"8\": \"srp\",\n                    \"9\": \"z\u00e1\u0159\",\n                    \"10\": \"\u0159\u00edj\",\n                    \"11\": \"lis\",\n                    \"12\": \"pro\",\n                },\n            },\n            \"seasons\": {\"1\": \"zima\", \"2\": \"jaro\", \"3\": \"l\u00e9to\", \"4\": \"podzim\"},\n        },\n        \"fi\": {\n            \"weekdays\": {\n                \"long\": {\n                    \"1\": \"maanantai\",\n                    \"2\": \"tiistai\",\n                    \"3\": \"keskiviikko\",\n                    \"4\": \"torstai\",\n                    \"5\": \"perjantai\",\n                    \"6\": \"lauantai\",\n                    \"7\": \"sunnuntai\",\n                },\n                \"short\": {\n                    \"1\": \"ma\",\n                    \"2\": \"ti\",\n                    \"3\": \"ke\",\n                    \"4\": \"to\",\n                    \"5\": \"pe\",\n                    \"6\": \"la\",\n                    \"7\": \"su\",\n                },\n            },\n            \"months\": {\n                \"long\": {\n                    \"1\": \"tammikuu\",\n                    \"2\": \"helmikuu\",\n                    \"3\": \"maaliskuu\",\n                    \"4\": \"huhtikuu\",\n                    \"5\": \"toukokuu\",\n                    \"6\": \"kes\u00e4kuu\",\n                    \"7\": \"hein\u00e4kuu\",\n                    \"8\": \"elokuu\",\n                    \"9\": \"syyskuu\",\n                    \"10\": \"lokakuu\",\n                    \"11\": \"marraskuu\",\n                    \"12\": \"joulukuu\",\n                },\n                \"short\": {\n                    \"1\": \"tammi\",\n                    \"2\": \"helmi\",\n                    \"3\": \"maalis\",\n                    \"4\": \"huhti\",\n                    \"5\": \"touko\",\n                    \"6\": \"kes\u00e4\",\n                    \"7\": \"hein\u00e4\",\n                    \"8\": \"elo\",\n                    \"9\": \"syys\",\n                    \"10\": \"loka\",\n                    \"11\": \"marras\",\n                    \"12\": \"joulu\",\n                },\n            },\n            \"seasons\": {\n                \"1\": \"talvi\",\n                \"2\": \"kev\u00e4t\",\n                \"3\": \"kes\u00e4\",\n                \"4\": \"syksy\",\n            },\n        },\n    } %}\n\n    {{ return(datepart_names_by_language[language][datepart]) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0391822, "supported_languages": null}, "macro.dbt_date.date": {"name": "date", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.date", "macro_sql": "{% macro date(year, month, day) %}\n    {{ return(modules.datetime.date(year, month, day)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.039634, "supported_languages": null}, "macro.dbt_date.datetime": {"name": "datetime", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/_utils/modules_datetime.sql", "original_file_path": "macros/_utils/modules_datetime.sql", "unique_id": "macro.dbt_date.datetime", "macro_sql": "{% macro datetime(\n    year, month, day, hour=0, minute=0, second=0, microsecond=0, tz=None\n) %}\n    {% set tz = tz if tz else var(\"dbt_date:time_zone\") %}\n    {{\n        return(\n            modules.datetime.datetime(\n                year=year,\n                month=month,\n                day=day,\n                hour=hour,\n                minute=minute,\n                second=second,\n                microsecond=microsecond,\n                tzinfo=modules.pytz.timezone(tz),\n            )\n        )\n    }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.040125, "supported_languages": null}, "macro.dbt_date.get_fiscal_year_dates": {"name": "get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.get_fiscal_year_dates", "macro_sql": "{% macro get_fiscal_year_dates(\n    dates, year_end_month=12, week_start_day=1, shift_year=1\n) %}\n    {{\n        adapter.dispatch(\"get_fiscal_year_dates\", \"dbt_date\")(\n            dates, year_end_month, week_start_day, shift_year\n        )\n    }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__get_fiscal_year_dates"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.040819, "supported_languages": null}, "macro.dbt_date.default__get_fiscal_year_dates": {"name": "default__get_fiscal_year_dates", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_year_dates.sql", "original_file_path": "macros/fiscal_date/get_fiscal_year_dates.sql", "unique_id": "macro.dbt_date.default__get_fiscal_year_dates", "macro_sql": "{% macro default__get_fiscal_year_dates(\n    dates, year_end_month, week_start_day, shift_year\n) %}\n    -- this gets all the dates within a fiscal year\n    -- determined by the given year-end-month\n    -- ending on the saturday closest to that month's end date\n    with\n        fsc_date_dimension as (select * from {{ dates }}),\n        year_month_end as (\n\n            select\n                d.year_number - {{ shift_year }} as fiscal_year_number, d.month_end_date\n            from fsc_date_dimension d\n            where d.month_of_year = {{ year_end_month }}\n            group by 1, 2\n\n        ),\n        weeks as (\n\n            select\n                d.year_number,\n                d.month_of_year,\n                d.date_day as week_start_date,\n                cast({{ dbt.dateadd(\"day\", 6, \"d.date_day\") }} as date) as week_end_date\n            from fsc_date_dimension d\n            where d.day_of_week = {{ week_start_day }}\n\n        ),\n        -- get all the weeks that start in the month the year ends\n        year_week_ends as (\n\n            select\n                d.year_number - {{ shift_year }} as fiscal_year_number, d.week_end_date\n            from weeks d\n            where d.month_of_year = {{ year_end_month }}\n            group by 1, 2\n\n        ),\n        -- then calculate which Saturday is closest to month end\n        weeks_at_month_end as (\n\n            select\n                d.fiscal_year_number,\n                d.week_end_date,\n                m.month_end_date,\n                rank() over (\n                    partition by d.fiscal_year_number\n                    order by\n                        abs(\n                            {{\n                                dbt.datediff(\n                                    \"d.week_end_date\", \"m.month_end_date\", \"day\"\n                                )\n                            }}\n                        )\n\n                ) as closest_to_month_end\n            from year_week_ends d\n            join year_month_end m on d.fiscal_year_number = m.fiscal_year_number\n        ),\n        fiscal_year_range as (\n\n            select\n                w.fiscal_year_number,\n                cast(\n                    {{\n                        dbt.dateadd(\n                            \"day\",\n                            1,\n                            \"lag(w.week_end_date) over(order by w.week_end_date)\",\n                        )\n                    }} as date\n                ) as fiscal_year_start_date,\n                w.week_end_date as fiscal_year_end_date\n            from weeks_at_month_end w\n            where w.closest_to_month_end = 1\n\n        ),\n        fiscal_year_dates as (\n\n            select\n                d.date_day,\n                m.fiscal_year_number,\n                m.fiscal_year_start_date,\n                m.fiscal_year_end_date,\n                w.week_start_date,\n                w.week_end_date,\n                -- we reset the weeks of the year starting with the merch year start\n                -- date\n                dense_rank() over (\n                    partition by m.fiscal_year_number order by w.week_start_date\n                ) as fiscal_week_of_year\n            from fsc_date_dimension d\n            join\n                fiscal_year_range m\n                on d.date_day\n                between m.fiscal_year_start_date and m.fiscal_year_end_date\n            join weeks w on d.date_day between w.week_start_date and w.week_end_date\n\n        )\n    select *\n    from fiscal_year_dates\n    order by 1\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0413702, "supported_languages": null}, "macro.dbt_date.get_fiscal_periods": {"name": "get_fiscal_periods", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/fiscal_date/get_fiscal_periods.sql", "original_file_path": "macros/fiscal_date/get_fiscal_periods.sql", "unique_id": "macro.dbt_date.get_fiscal_periods", "macro_sql": "{% macro get_fiscal_periods(dates, year_end_month, week_start_day, shift_year=1) %}\n    {#\nThis macro requires you to pass in a ref to a date dimension, created via\ndbt_date.get_date_dimension()s\n#}\n    with\n        fscl_year_dates_for_periods as (\n            {{\n                dbt_date.get_fiscal_year_dates(\n                    dates, year_end_month, week_start_day, shift_year\n                )\n            }}\n        ),\n        fscl_year_w13 as (\n\n            select\n                f.*,\n                -- We count the weeks in a 13 week period\n                -- and separate the 4-5-4 week sequences\n                mod(\n                    cast((f.fiscal_week_of_year - 1) as {{ dbt.type_int() }}), 13\n                ) as w13_number,\n                -- Chop weeks into 13 week merch quarters\n                cast(\n                    least(\n                        floor((f.fiscal_week_of_year - 1) / 13.0), 3\n                    ) as {{ dbt.type_int() }}\n                ) as quarter_number\n            from fscl_year_dates_for_periods f\n\n        ),\n        fscl_periods as (\n\n            select\n                f.date_day,\n                f.fiscal_year_number,\n                f.week_start_date,\n                f.week_end_date,\n                f.fiscal_week_of_year,\n                case\n                    -- we move week 53 into the 3rd period of the quarter\n                    when f.fiscal_week_of_year = 53\n                    then 3\n                    when f.w13_number between 0 and 3\n                    then 1\n                    when f.w13_number between 4 and 8\n                    then 2\n                    when f.w13_number between 9 and 12\n                    then 3\n                end as period_of_quarter,\n                f.quarter_number\n            from fscl_year_w13 f\n\n        ),\n        fscl_periods_quarters as (\n\n            select\n                f.*,\n                cast(\n                    (\n                        (f.quarter_number * 3) + f.period_of_quarter\n                    ) as {{ dbt.type_int() }}\n                ) as fiscal_period_number\n            from fscl_periods f\n\n        )\n    select\n        date_day,\n        fiscal_year_number,\n        week_start_date,\n        week_end_date,\n        fiscal_week_of_year,\n        dense_rank() over (\n            partition by fiscal_period_number order by fiscal_week_of_year\n        ) as fiscal_week_of_period,\n        fiscal_period_number,\n        quarter_number + 1 as fiscal_quarter_number,\n        period_of_quarter as fiscal_period_of_quarter\n    from fscl_periods_quarters\n    order by 1, 2\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_date.get_fiscal_year_dates", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.042051, "supported_languages": null}, "macro.dbt_date.tomorrow": {"name": "tomorrow", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/tomorrow.sql", "original_file_path": "macros/calendar_date/tomorrow.sql", "unique_id": "macro.dbt_date.tomorrow", "macro_sql": "{%- macro tomorrow(date=None, tz=None) -%}\n    {{ dbt_date.n_days_away(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0422451, "supported_languages": null}, "macro.dbt_date.next_week": {"name": "next_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_week.sql", "original_file_path": "macros/calendar_date/next_week.sql", "unique_id": "macro.dbt_date.next_week", "macro_sql": "{%- macro next_week(tz=None) -%} {{ dbt_date.n_weeks_away(1, tz) }} {%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0424051, "supported_languages": null}, "macro.dbt_date.next_month_name": {"name": "next_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_name.sql", "original_file_path": "macros/calendar_date/next_month_name.sql", "unique_id": "macro.dbt_date.next_month_name", "macro_sql": "{%- macro next_month_name(short=True, tz=None) -%}\n    {{ dbt_date.month_name(dbt_date.next_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.04261, "supported_languages": null}, "macro.dbt_date.next_month": {"name": "next_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month.sql", "original_file_path": "macros/calendar_date/next_month.sql", "unique_id": "macro.dbt_date.next_month", "macro_sql": "{%- macro next_month(tz=None) -%} {{ dbt_date.n_months_away(1, tz) }} {%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0427678, "supported_languages": null}, "macro.dbt_date.month_name_localized": {"name": "month_name_localized", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name_localized.sql", "original_file_path": "macros/calendar_date/month_name_localized.sql", "unique_id": "macro.dbt_date.month_name_localized", "macro_sql": "{%- macro month_name_localized(date, short=True, language=\"default\") -%}\n    {{ adapter.dispatch(\"month_name_localized\", \"dbt_date\")(date, short, language) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.043076, "supported_languages": null}, "macro.dbt_date.default__month_name_localized": {"name": "default__month_name_localized", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name_localized.sql", "original_file_path": "macros/calendar_date/month_name_localized.sql", "unique_id": "macro.dbt_date.default__month_name_localized", "macro_sql": "{%- macro default__month_name_localized(date, short, language) -%}\n    case\n        {% for month_num in range(1, 12) %}\n            when {{ dbt_date.date_part(\"month\", date) }} = {{ month_num }}\n            then\n                '{{ dbt_date.get_localized_datepart_names(language, \"months\")[\"short\" if short else \"long\"][\"\" ~ month_num] }}'\n        {% endfor %}\n    end\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.get_localized_datepart_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.043432, "supported_languages": null}, "macro.dbt_date.day_name": {"name": "day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.day_name", "macro_sql": "{%- macro day_name(date, short=True, language=\"default\") -%}\n    {{ adapter.dispatch(\"day_name\", \"dbt_date\")(date, short, language) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.snowflake__day_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.04406, "supported_languages": null}, "macro.dbt_date.default__day_name": {"name": "default__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.default__day_name", "macro_sql": "{%- macro default__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"Dy\" if short else \"Day\" -%} to_char({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.044356, "supported_languages": null}, "macro.dbt_date.snowflake__day_name": {"name": "snowflake__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.snowflake__day_name", "macro_sql": "{%- macro snowflake__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {{ dbt_date.day_name_localized(date, short, \"en\") }}\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.044615, "supported_languages": null}, "macro.dbt_date.bigquery__day_name": {"name": "bigquery__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.bigquery__day_name", "macro_sql": "{%- macro bigquery__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"%a\" if short else \"%A\" -%}\n        format_date('{{ f }}', cast({{ date }} as date))\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.044905, "supported_languages": null}, "macro.dbt_date.postgres__day_name": {"name": "postgres__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.postgres__day_name", "macro_sql": "{%- macro postgres__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {# FM = Fill mode, which suppresses padding blanks #}\n        {%- set f = \"FMDy\" if short else \"FMDay\" -%} to_char({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.045198, "supported_languages": null}, "macro.dbt_date.duckdb__day_name": {"name": "duckdb__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.duckdb__day_name", "macro_sql": "{%- macro duckdb__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- if short -%} substr(dayname({{ date }}), 1, 3)\n        {%- else -%} dayname({{ date }})\n        {%- endif -%}\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.045472, "supported_languages": null}, "macro.dbt_date.spark__day_name": {"name": "spark__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.spark__day_name", "macro_sql": "{%- macro spark__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"E\" if short else \"EEEE\" -%} date_format({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.045755, "supported_languages": null}, "macro.dbt_date.trino__day_name": {"name": "trino__day_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name.sql", "original_file_path": "macros/calendar_date/day_name.sql", "unique_id": "macro.dbt_date.trino__day_name", "macro_sql": "{%- macro trino__day_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"a\" if short else \"W\" -%} date_format({{ date }}, '%{{ f }}')\n    {%- else -%} {{ dbt_date.day_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0460439, "supported_languages": null}, "macro.dbt_date.to_unixtimestamp": {"name": "to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.to_unixtimestamp", "macro_sql": "{%- macro to_unixtimestamp(timestamp) -%}\n    {{ adapter.dispatch(\"to_unixtimestamp\", \"dbt_date\")(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.snowflake__to_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.046315, "supported_languages": null}, "macro.dbt_date.default__to_unixtimestamp": {"name": "default__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__to_unixtimestamp", "macro_sql": "\n\n{%- macro default__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part(\"epoch\", timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.046432, "supported_languages": null}, "macro.dbt_date.snowflake__to_unixtimestamp": {"name": "snowflake__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__to_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__to_unixtimestamp(timestamp) -%}\n    {{ dbt_date.date_part(\"epoch_seconds\", timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.046547, "supported_languages": null}, "macro.dbt_date.bigquery__to_unixtimestamp": {"name": "bigquery__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__to_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__to_unixtimestamp(timestamp) -%}\n    unix_seconds({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.046634, "supported_languages": null}, "macro.dbt_date.spark__to_unixtimestamp": {"name": "spark__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.spark__to_unixtimestamp", "macro_sql": "\n\n{%- macro spark__to_unixtimestamp(timestamp) -%}\n    unix_timestamp({{ timestamp }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.046719, "supported_languages": null}, "macro.dbt_date.trino__to_unixtimestamp": {"name": "trino__to_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/to_unixtimestamp.sql", "original_file_path": "macros/calendar_date/to_unixtimestamp.sql", "unique_id": "macro.dbt_date.trino__to_unixtimestamp", "macro_sql": "\n\n{%- macro trino__to_unixtimestamp(timestamp) -%}\n    to_unixtime({{ timestamp }} at time zone 'UTC')\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.046807, "supported_languages": null}, "macro.dbt_date.day_name_localized": {"name": "day_name_localized", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name_localized.sql", "original_file_path": "macros/calendar_date/day_name_localized.sql", "unique_id": "macro.dbt_date.day_name_localized", "macro_sql": "{%- macro day_name_localized(date, short=True, language=\"default\") -%}\n    {{ adapter.dispatch(\"day_name_localized\", \"dbt_date\")(date, short, language) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__day_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0471091, "supported_languages": null}, "macro.dbt_date.default__day_name_localized": {"name": "default__day_name_localized", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_name_localized.sql", "original_file_path": "macros/calendar_date/day_name_localized.sql", "unique_id": "macro.dbt_date.default__day_name_localized", "macro_sql": "{%- macro default__day_name_localized(date, short, language) -%}\n    case\n        {% for day_num in range(1, 8) %}  -- Similar to python, last argument is not included\n            when {{ dbt_date.day_of_week(date) }} = {{ day_num }}\n            then\n                '{{ dbt_date.get_localized_datepart_names(language, \"weekdays\")[\"short\" if short else \"long\"][\"\" ~ day_num] }}'\n        {% endfor %}\n    end\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.day_of_week", "macro.dbt_date.get_localized_datepart_names"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.047449, "supported_languages": null}, "macro.dbt_date.n_days_away": {"name": "n_days_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_away.sql", "original_file_path": "macros/calendar_date/n_days_away.sql", "unique_id": "macro.dbt_date.n_days_away", "macro_sql": "{%- macro n_days_away(n, date=None, tz=None) -%}\n    {{ dbt_date.n_days_ago(-1 * n, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0476658, "supported_languages": null}, "macro.dbt_date.week_start": {"name": "week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.week_start", "macro_sql": "{%- macro week_start(date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {{ adapter.dispatch(\"week_start\", \"dbt_date\")(dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.snowflake__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.048075, "supported_languages": null}, "macro.dbt_date.default__week_start": {"name": "default__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.default__week_start", "macro_sql": "{%- macro default__week_start(date) -%}\n    cast({{ dbt.date_trunc(\"week\", date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0482, "supported_languages": null}, "macro.dbt_date.snowflake__week_start": {"name": "snowflake__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.snowflake__week_start", "macro_sql": "\n\n{%- macro snowflake__week_start(date) -%}\n    {#\n        Get the day of week offset: e.g. if the date is a Sunday,\n        dbt_date.day_of_week returns 1, so we subtract 1 to get a 0 offset\n    #}\n    {% set off_set = dbt_date.day_of_week(date, isoweek=False) ~ \" - 1\" %}\n    cast({{ dbt.dateadd(\"day\", \"-1 * (\" ~ off_set ~ \")\", date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.day_of_week", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.048446, "supported_languages": null}, "macro.dbt_date.postgres__week_start": {"name": "postgres__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.postgres__week_start", "macro_sql": "\n\n{%- macro postgres__week_start(date) -%}\n    -- Sunday as week start date\n    cast(\n        {{\n            dbt.dateadd(\n                \"day\", -1, dbt.date_trunc(\"week\", dbt.dateadd(\"day\", 1, date))\n            )\n        }} as date\n    )\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.048666, "supported_languages": null}, "macro.dbt_date.duckdb__week_start": {"name": "duckdb__week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_start.sql", "original_file_path": "macros/calendar_date/week_start.sql", "unique_id": "macro.dbt_date.duckdb__week_start", "macro_sql": "\n\n{%- macro duckdb__week_start(date) -%}\n    {{ return(dbt_date.postgres__week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0488288, "supported_languages": null}, "macro.dbt_date.iso_week_start": {"name": "iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.iso_week_start", "macro_sql": "{%- macro iso_week_start(date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {{ adapter.dispatch(\"iso_week_start\", \"dbt_date\")(dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.snowflake__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.049356, "supported_languages": null}, "macro.dbt_date._iso_week_start": {"name": "_iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date._iso_week_start", "macro_sql": "{%- macro _iso_week_start(date, week_type) -%}\n    cast({{ dbt.date_trunc(week_type, date) }} as date)\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.049502, "supported_languages": null}, "macro.dbt_date.default__iso_week_start": {"name": "default__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.default__iso_week_start", "macro_sql": "\n\n{%- macro default__iso_week_start(date) -%}\n    {{ dbt_date._iso_week_start(date, \"isoweek\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0497851, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_start": {"name": "snowflake__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_start", "macro_sql": "\n\n{%- macro snowflake__iso_week_start(date) -%}\n    {{ dbt_date._iso_week_start(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.049933, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_start": {"name": "postgres__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.postgres__iso_week_start", "macro_sql": "\n\n{%- macro postgres__iso_week_start(date) -%}\n    {{ dbt_date._iso_week_start(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.050059, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_start": {"name": "duckdb__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_start", "macro_sql": "\n\n{%- macro duckdb__iso_week_start(date) -%}\n    {{ return(dbt_date.postgres__iso_week_start(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.050186, "supported_languages": null}, "macro.dbt_date.spark__iso_week_start": {"name": "spark__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.spark__iso_week_start", "macro_sql": "\n\n{%- macro spark__iso_week_start(date) -%}\n    {{ dbt_date._iso_week_start(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.050303, "supported_languages": null}, "macro.dbt_date.trino__iso_week_start": {"name": "trino__iso_week_start", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_start.sql", "original_file_path": "macros/calendar_date/iso_week_start.sql", "unique_id": "macro.dbt_date.trino__iso_week_start", "macro_sql": "\n\n{%- macro trino__iso_week_start(date) -%}\n    {{ dbt_date._iso_week_start(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.050421, "supported_languages": null}, "macro.dbt_date.iso_year_week": {"name": "iso_year_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_year_week.sql", "original_file_path": "macros/calendar_date/iso_year_week.sql", "unique_id": "macro.dbt_date.iso_year_week", "macro_sql": "\n{%- macro iso_year_week(date) -%}\n    {{ adapter.dispatch(\"iso_year_week\", \"dbt_date\")(date) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__iso_year_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.050883, "supported_languages": null}, "macro.dbt_date.default__iso_year_week": {"name": "default__iso_year_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_year_week.sql", "original_file_path": "macros/calendar_date/iso_year_week.sql", "unique_id": "macro.dbt_date.default__iso_year_week", "macro_sql": "{%- macro default__iso_year_week(date) -%}\n    case\n        when {{ dbt_date.iso_week_of_year(date) }} = 1\n        then\n            concat(\n                {{ dbt_date.date_part(\"year\", dbt_date.iso_week_end(date)) }},\n                '-W',\n                lpad(concat('',{{ dbt_date.iso_week_of_year(date) }}), 2, '0')\n            )\n        else\n            concat(\n                {{ dbt_date.date_part(\"year\", dbt_date.iso_week_start(date)) }},\n                '-W',\n                lpad(concat('', {{ dbt_date.iso_week_of_year(date) }}), 2, '0')\n            )\n    end\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0512378, "supported_languages": null}, "macro.dbt_date.trino__iso_year_week": {"name": "trino__iso_year_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_year_week.sql", "original_file_path": "macros/calendar_date/iso_year_week.sql", "unique_id": "macro.dbt_date.trino__iso_year_week", "macro_sql": "{%- macro trino__iso_year_week(date) -%}\n    case\n        when {{ dbt_date.iso_week_of_year(date) }} = 1\n        then\n            concat(\n                cast(\n                    {{ dbt_date.date_part(\"year\", dbt_date.iso_week_end(date)) }}\n                    as varchar\n                ),\n                '-W',\n                lpad(cast({{ dbt_date.iso_week_of_year(date) }} as varchar), 2, '0')\n            )\n        else\n            concat(\n                cast(\n                    {{ dbt_date.date_part(\"year\", dbt_date.iso_week_start(date)) }}\n                    as varchar\n                ),\n                '-W',\n                lpad(cast({{ dbt_date.iso_week_of_year(date) }} as varchar), 2, '0')\n            )\n    end\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.iso_week_of_year", "macro.dbt_date.date_part", "macro.dbt_date.iso_week_end", "macro.dbt_date.iso_week_start"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0516071, "supported_languages": null}, "macro.dbt_date.n_days_ago": {"name": "n_days_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_days_ago.sql", "original_file_path": "macros/calendar_date/n_days_ago.sql", "unique_id": "macro.dbt_date.n_days_ago", "macro_sql": "{%- macro n_days_ago(n, date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {%- set n = n | int -%}\n    cast({{ dbt.dateadd(\"day\", -1 * n, dt) }} as date)\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0519779, "supported_languages": null}, "macro.dbt_date.last_week": {"name": "last_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_week.sql", "original_file_path": "macros/calendar_date/last_week.sql", "unique_id": "macro.dbt_date.last_week", "macro_sql": "{%- macro last_week(tz=None) -%} {{ dbt_date.n_weeks_ago(1, tz) }} {%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_weeks_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.052146, "supported_languages": null}, "macro.dbt_date.now": {"name": "now", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/now.sql", "original_file_path": "macros/calendar_date/now.sql", "unique_id": "macro.dbt_date.now", "macro_sql": "{%- macro now(tz=None) -%}\n    {{ dbt_date.convert_timezone(dbt.current_timestamp(), tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.convert_timezone", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.052319, "supported_languages": null}, "macro.dbt_date.periods_since": {"name": "periods_since", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/periods_since.sql", "original_file_path": "macros/calendar_date/periods_since.sql", "unique_id": "macro.dbt_date.periods_since", "macro_sql": "{%- macro periods_since(date_col, period_name=\"day\", tz=None) -%}\n    {{ dbt.datediff(date_col, dbt_date.now(tz), period_name) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.datediff", "macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.052553, "supported_languages": null}, "macro.dbt_date.today": {"name": "today", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/today.sql", "original_file_path": "macros/calendar_date/today.sql", "unique_id": "macro.dbt_date.today", "macro_sql": "{%- macro today(tz=None) -%} cast({{ dbt_date.now(tz) }} as date) {%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.now"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.052727, "supported_languages": null}, "macro.dbt_date.last_month": {"name": "last_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month.sql", "original_file_path": "macros/calendar_date/last_month.sql", "unique_id": "macro.dbt_date.last_month", "macro_sql": "{%- macro last_month(tz=None) -%} {{ dbt_date.n_months_ago(1, tz) }} {%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_months_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.052892, "supported_languages": null}, "macro.dbt_date.day_of_year": {"name": "day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.day_of_year", "macro_sql": "{%- macro day_of_year(date) -%}\n    {{ adapter.dispatch(\"day_of_year\", \"dbt_date\")(date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__day_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.053174, "supported_languages": null}, "macro.dbt_date.default__day_of_year": {"name": "default__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.default__day_of_year", "macro_sql": "\n\n{%- macro default__day_of_year(date) -%}\n    {{ dbt_date.date_part(\"dayofyear\", date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0532951, "supported_languages": null}, "macro.dbt_date.postgres__day_of_year": {"name": "postgres__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.postgres__day_of_year", "macro_sql": "\n\n{%- macro postgres__day_of_year(date) -%}\n    {{ dbt_date.date_part(\"doy\", date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0534122, "supported_languages": null}, "macro.dbt_date.redshift__day_of_year": {"name": "redshift__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.redshift__day_of_year", "macro_sql": "\n\n{%- macro redshift__day_of_year(date) -%}\n    cast({{ dbt_date.date_part(\"dayofyear\", date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0535629, "supported_languages": null}, "macro.dbt_date.spark__day_of_year": {"name": "spark__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.spark__day_of_year", "macro_sql": "\n\n{%- macro spark__day_of_year(date) -%} dayofyear({{ date }}) {%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0536509, "supported_languages": null}, "macro.dbt_date.trino__day_of_year": {"name": "trino__day_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_year.sql", "original_file_path": "macros/calendar_date/day_of_year.sql", "unique_id": "macro.dbt_date.trino__day_of_year", "macro_sql": "\n\n{%- macro trino__day_of_year(date) -%}\n    {{ dbt_date.date_part(\"day_of_year\", date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0537841, "supported_languages": null}, "macro.dbt_date.round_timestamp": {"name": "round_timestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/round_timestamp.sql", "original_file_path": "macros/calendar_date/round_timestamp.sql", "unique_id": "macro.dbt_date.round_timestamp", "macro_sql": "{% macro round_timestamp(timestamp) %}\n    {{ dbt.date_trunc(\"day\", dbt.dateadd(\"hour\", 12, timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0539908, "supported_languages": null}, "macro.dbt_date.from_unixtimestamp": {"name": "from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.from_unixtimestamp", "macro_sql": "{%- macro from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {{ adapter.dispatch(\"from_unixtimestamp\", \"dbt_date\")(epochs, format) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.snowflake__from_unixtimestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.054759, "supported_languages": null}, "macro.dbt_date.default__from_unixtimestamp": {"name": "default__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.default__from_unixtimestamp", "macro_sql": "\n\n{%- macro default__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n        {{\n            exceptions.raise_compiler_error(\n                \"value \"\n                ~ format\n                ~ \" for `format` for from_unixtimestamp is not supported.\"\n            )\n        }}\n    {% endif -%}\n    to_timestamp({{ epochs }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.054989, "supported_languages": null}, "macro.dbt_date.postgres__from_unixtimestamp": {"name": "postgres__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.postgres__from_unixtimestamp", "macro_sql": "\n\n{%- macro postgres__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n        {{\n            exceptions.raise_compiler_error(\n                \"value \"\n                ~ format\n                ~ \" for `format` for from_unixtimestamp is not supported.\"\n            )\n        }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.055209, "supported_languages": null}, "macro.dbt_date.snowflake__from_unixtimestamp": {"name": "snowflake__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.snowflake__from_unixtimestamp", "macro_sql": "\n\n{%- macro snowflake__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%} {%- set scale = 0 -%}\n    {%- elif format == \"milliseconds\" -%} {%- set scale = 3 -%}\n    {%- elif format == \"microseconds\" -%} {%- set scale = 6 -%}\n    {%- else -%}\n        {{\n            exceptions.raise_compiler_error(\n                \"value \"\n                ~ format\n                ~ \" for `format` for from_unixtimestamp is not supported.\"\n            )\n        }}\n    {% endif -%}\n    to_timestamp_ntz({{ epochs }}, {{ scale }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0555992, "supported_languages": null}, "macro.dbt_date.bigquery__from_unixtimestamp": {"name": "bigquery__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.bigquery__from_unixtimestamp", "macro_sql": "\n\n{%- macro bigquery__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%} timestamp_seconds({{ epochs }})\n    {%- elif format == \"milliseconds\" -%} timestamp_millis({{ epochs }})\n    {%- elif format == \"microseconds\" -%} timestamp_micros({{ epochs }})\n    {%- else -%}\n        {{\n            exceptions.raise_compiler_error(\n                \"value \"\n                ~ format\n                ~ \" for `format` for from_unixtimestamp is not supported.\"\n            )\n        }}\n    {% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.055945, "supported_languages": null}, "macro.dbt_date.trino__from_unixtimestamp": {"name": "trino__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.trino__from_unixtimestamp", "macro_sql": "\n\n{%- macro trino__from_unixtimestamp(epochs, format) -%}\n    {%- if format == \"seconds\" -%}\n        cast(\n            from_unixtime({{ epochs }}) at time zone 'UTC' as {{ dbt.type_timestamp() }}\n        )\n    {%- elif format == \"milliseconds\" -%}\n        cast(\n            from_unixtime_nanos(\n                {{ epochs }} * pow(10, 6)\n            ) at time zone 'UTC' as {{ dbt.type_timestamp() }}\n        )\n    {%- elif format == \"microseconds\" -%}\n        cast(\n            from_unixtime_nanos(\n                {{ epochs }} * pow(10, 3)\n            ) at time zone 'UTC' as {{ dbt.type_timestamp() }}\n        )\n    {%- elif format == \"nanoseconds\" -%}\n        cast(\n            from_unixtime_nanos(\n                {{ epochs }}\n            ) at time zone 'UTC' as {{ dbt.type_timestamp() }}\n        )\n    {%- else -%}\n        {{\n            exceptions.raise_compiler_error(\n                \"value \"\n                ~ format\n                ~ \" for `format` for from_unixtimestamp is not supported.\"\n            )\n        }}\n    {% endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0564659, "supported_languages": null}, "macro.dbt_date.duckdb__from_unixtimestamp": {"name": "duckdb__from_unixtimestamp", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/from_unixtimestamp.sql", "original_file_path": "macros/calendar_date/from_unixtimestamp.sql", "unique_id": "macro.dbt_date.duckdb__from_unixtimestamp", "macro_sql": "\n\n\n{%- macro duckdb__from_unixtimestamp(epochs, format=\"seconds\") -%}\n    {%- if format != \"seconds\" -%}\n        {{\n            exceptions.raise_compiler_error(\n                \"value \"\n                ~ format\n                ~ \" for `format` for from_unixtimestamp is not supported.\"\n            )\n        }}\n    {% endif -%}\n    cast(to_timestamp({{ epochs }}) at time zone 'UTC' as timestamp)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0566888, "supported_languages": null}, "macro.dbt_date.n_months_ago": {"name": "n_months_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_ago.sql", "original_file_path": "macros/calendar_date/n_months_ago.sql", "unique_id": "macro.dbt_date.n_months_ago", "macro_sql": "{%- macro n_months_ago(n, tz=None) -%}\n    {%- set n = n | int -%}\n    {{ dbt.date_trunc(\"month\", dbt.dateadd(\"month\", -1 * n, dbt_date.today(tz))) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.056993, "supported_languages": null}, "macro.dbt_date.date_part": {"name": "date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.date_part", "macro_sql": "{% macro date_part(datepart, date) -%}\n    {{ adapter.dispatch(\"date_part\", \"dbt_date\")(datepart, date) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.default__date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.05725, "supported_languages": null}, "macro.dbt_date.default__date_part": {"name": "default__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.default__date_part", "macro_sql": "{% macro default__date_part(datepart, date) -%}\n    date_part('{{ datepart }}', {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.057363, "supported_languages": null}, "macro.dbt_date.bigquery__date_part": {"name": "bigquery__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.bigquery__date_part", "macro_sql": "{% macro bigquery__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.057482, "supported_languages": null}, "macro.dbt_date.trino__date_part": {"name": "trino__date_part", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/date_part.sql", "original_file_path": "macros/calendar_date/date_part.sql", "unique_id": "macro.dbt_date.trino__date_part", "macro_sql": "{% macro trino__date_part(datepart, date) -%}\n    extract({{ datepart }} from {{ date }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.05759, "supported_languages": null}, "macro.dbt_date.n_weeks_away": {"name": "n_weeks_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_away.sql", "original_file_path": "macros/calendar_date/n_weeks_away.sql", "unique_id": "macro.dbt_date.n_weeks_away", "macro_sql": "{%- macro n_weeks_away(n, tz=None) -%}\n    {%- set n = n | int -%}\n    {{ dbt.date_trunc(\"week\", dbt.dateadd(\"week\", n, dbt_date.today(tz))) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.057871, "supported_languages": null}, "macro.dbt_date.day_of_month": {"name": "day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.day_of_month", "macro_sql": "{%- macro day_of_month(date) -%} {{ dbt_date.date_part(\"day\", date) }} {%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.058105, "supported_languages": null}, "macro.dbt_date.redshift__day_of_month": {"name": "redshift__day_of_month", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_month.sql", "original_file_path": "macros/calendar_date/day_of_month.sql", "unique_id": "macro.dbt_date.redshift__day_of_month", "macro_sql": "\n\n{%- macro redshift__day_of_month(date) -%}\n    cast({{ dbt_date.date_part(\"day\", date) }} as {{ dbt.type_bigint() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.058275, "supported_languages": null}, "macro.dbt_date.yesterday": {"name": "yesterday", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/yesterday.sql", "original_file_path": "macros/calendar_date/yesterday.sql", "unique_id": "macro.dbt_date.yesterday", "macro_sql": "{%- macro yesterday(date=None, tz=None) -%}\n    {{ dbt_date.n_days_ago(1, date, tz) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.n_days_ago"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.058805, "supported_languages": null}, "macro.dbt_date.day_of_week": {"name": "day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.day_of_week", "macro_sql": "{%- macro day_of_week(date, isoweek=true) -%}\n    {{ adapter.dispatch(\"day_of_week\", \"dbt_date\")(date, isoweek) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.snowflake__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.059437, "supported_languages": null}, "macro.dbt_date.default__day_of_week": {"name": "default__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.default__day_of_week", "macro_sql": "\n\n{%- macro default__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part(\"dayofweek\", date) -%}\n\n    {%- if isoweek -%}\n        case\n            -- Shift start of week from Sunday (0) to Monday (1)\n            when {{ dow }} = 0 then 7 else {{ dow }}\n        end\n    {%- else -%} {{ dow }} + 1\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0596979, "supported_languages": null}, "macro.dbt_date.snowflake__day_of_week": {"name": "snowflake__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.snowflake__day_of_week", "macro_sql": "\n\n{%- macro snowflake__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = \"dayofweekiso\" -%} {{ dbt_date.date_part(dow_part, date) }}\n    {%- else -%}\n        {%- set dow_part = \"dayofweek\" -%}\n        case\n            when {{ dbt_date.date_part(dow_part, date) }} = 7\n            then 1\n            else {{ dbt_date.date_part(dow_part, date) }} + 1\n        end\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.060043, "supported_languages": null}, "macro.dbt_date.bigquery__day_of_week": {"name": "bigquery__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.bigquery__day_of_week", "macro_sql": "\n\n{%- macro bigquery__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part(\"dayofweek\", date) -%}\n\n    {%- if isoweek -%}\n        case\n            -- Shift start of week from Sunday (1) to Monday (2)\n            when {{ dow }} = 1 then 7 else {{ dow }} - 1\n        end\n    {%- else -%} {{ dow }}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0603368, "supported_languages": null}, "macro.dbt_date.postgres__day_of_week": {"name": "postgres__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.postgres__day_of_week", "macro_sql": "\n\n\n{%- macro postgres__day_of_week(date, isoweek) -%}\n\n    {%- if isoweek -%}\n        {%- set dow_part = \"isodow\" -%}\n        -- Monday(1) to Sunday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} as {{ dbt.type_int() }})\n    {%- else -%}\n        {%- set dow_part = \"dow\" -%}\n        -- Sunday(1) to Saturday (7)\n        cast({{ dbt_date.date_part(dow_part, date) }} + 1 as {{ dbt.type_int() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.060843, "supported_languages": null}, "macro.dbt_date.redshift__day_of_week": {"name": "redshift__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.redshift__day_of_week", "macro_sql": "\n\n\n{%- macro redshift__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part(\"dayofweek\", date) -%}\n\n    {%- if isoweek -%}\n        case\n            -- Shift start of week from Sunday (0) to Monday (1)\n            when {{ dow }} = 0 then 7 else cast({{ dow }} as {{ dbt.type_bigint() }})\n        end\n    {%- else -%} cast({{ dow }} + 1 as {{ dbt.type_bigint() }})\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.061179, "supported_languages": null}, "macro.dbt_date.duckdb__day_of_week": {"name": "duckdb__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.duckdb__day_of_week", "macro_sql": "\n\n{%- macro duckdb__day_of_week(date, isoweek) -%}\n    {{ return(dbt_date.postgres__day_of_week(date, isoweek)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__day_of_week"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0613341, "supported_languages": null}, "macro.dbt_date.spark__day_of_week": {"name": "spark__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.spark__day_of_week", "macro_sql": "\n\n\n{%- macro spark__day_of_week(date, isoweek) -%}\n\n    {%- set dow = \"dayofweek_iso\" if isoweek else \"dayofweek\" -%}\n\n    {{ dbt_date.date_part(dow, date) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0615208, "supported_languages": null}, "macro.dbt_date.trino__day_of_week": {"name": "trino__day_of_week", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/day_of_week.sql", "original_file_path": "macros/calendar_date/day_of_week.sql", "unique_id": "macro.dbt_date.trino__day_of_week", "macro_sql": "\n\n\n{%- macro trino__day_of_week(date, isoweek) -%}\n\n    {%- set dow = dbt_date.date_part(\"day_of_week\", date) -%}\n\n    {%- if isoweek -%} {{ dow }}\n    {%- else -%} case when {{ dow }} = 7 then 1 else {{ dow }} + 1 end\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0617652, "supported_languages": null}, "macro.dbt_date.iso_week_end": {"name": "iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.iso_week_end", "macro_sql": "{%- macro iso_week_end(date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {{ adapter.dispatch(\"iso_week_end\", \"dbt_date\")(dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.snowflake__iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.062135, "supported_languages": null}, "macro.dbt_date._iso_week_end": {"name": "_iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date._iso_week_end", "macro_sql": "{%- macro _iso_week_end(date, week_type) -%}\n    {%- set dt = dbt_date.iso_week_start(date) -%} {{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.iso_week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.062314, "supported_languages": null}, "macro.dbt_date.default__iso_week_end": {"name": "default__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.default__iso_week_end", "macro_sql": "\n\n{%- macro default__iso_week_end(date) -%}\n    {{ dbt_date._iso_week_end(date, \"isoweek\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.062428, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_end": {"name": "snowflake__iso_week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_end.sql", "original_file_path": "macros/calendar_date/iso_week_end.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_end", "macro_sql": "\n\n{%- macro snowflake__iso_week_end(date) -%}\n    {{ dbt_date._iso_week_end(date, \"weekiso\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.062541, "supported_languages": null}, "macro.dbt_date.n_weeks_ago": {"name": "n_weeks_ago", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_weeks_ago.sql", "original_file_path": "macros/calendar_date/n_weeks_ago.sql", "unique_id": "macro.dbt_date.n_weeks_ago", "macro_sql": "{%- macro n_weeks_ago(n, tz=None) -%}\n    {%- set n = n | int -%}\n    {{ dbt.date_trunc(\"week\", dbt.dateadd(\"week\", -1 * n, dbt_date.today(tz))) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0628438, "supported_languages": null}, "macro.dbt_date.month_name": {"name": "month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.month_name", "macro_sql": "{%- macro month_name(date, short=True, language=\"default\") -%}\n    {{ adapter.dispatch(\"month_name\", \"dbt_date\")(date, short, language) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.snowflake__month_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.063493, "supported_languages": null}, "macro.dbt_date.default__month_name": {"name": "default__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.default__month_name", "macro_sql": "\n\n{%- macro default__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"MON\" if short else \"MONTH\" -%} to_char({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0637891, "supported_languages": null}, "macro.dbt_date.bigquery__month_name": {"name": "bigquery__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.bigquery__month_name", "macro_sql": "\n\n{%- macro bigquery__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"%b\" if short else \"%B\" -%}\n        format_date('{{ f }}', cast({{ date }} as date))\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.064086, "supported_languages": null}, "macro.dbt_date.snowflake__month_name": {"name": "snowflake__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.snowflake__month_name", "macro_sql": "\n\n{%- macro snowflake__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"MON\" if short else \"MMMM\" -%} to_char({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.064379, "supported_languages": null}, "macro.dbt_date.postgres__month_name": {"name": "postgres__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.postgres__month_name", "macro_sql": "\n\n{%- macro postgres__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {# FM = Fill mode, which suppresses padding blanks #}\n        {%- set f = \"FMMon\" if short else \"FMMonth\" -%} to_char({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0646741, "supported_languages": null}, "macro.dbt_date.duckdb__month_name": {"name": "duckdb__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.duckdb__month_name", "macro_sql": "\n\n{%- macro duckdb__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- if short -%} substr(monthname({{ date }}), 1, 3)\n        {%- else -%} monthname({{ date }})\n        {%- endif -%}\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.064965, "supported_languages": null}, "macro.dbt_date.spark__month_name": {"name": "spark__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.spark__month_name", "macro_sql": "\n\n{%- macro spark__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"MMM\" if short else \"MMMM\" -%} date_format({{ date }}, '{{ f }}')\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0652668, "supported_languages": null}, "macro.dbt_date.trino__month_name": {"name": "trino__month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/month_name.sql", "original_file_path": "macros/calendar_date/month_name.sql", "unique_id": "macro.dbt_date.trino__month_name", "macro_sql": "\n\n{%- macro trino__month_name(date, short, language) -%}\n    {%- if language == \"default\" -%}\n        {%- set f = \"b\" if short else \"M\" -%} date_format({{ date }}, '%{{ f }}')\n    {%- else -%} {{ dbt_date.month_name_localized(date, short, language) }}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.month_name_localized"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.065558, "supported_languages": null}, "macro.dbt_date.last_month_name": {"name": "last_month_name", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_name.sql", "original_file_path": "macros/calendar_date/last_month_name.sql", "unique_id": "macro.dbt_date.last_month_name", "macro_sql": "{%- macro last_month_name(short=True, tz=None) -%}\n    {{ dbt_date.month_name(dbt_date.last_month(tz), short=short) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.month_name", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.065779, "supported_languages": null}, "macro.dbt_date.week_of_year": {"name": "week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.week_of_year", "macro_sql": "{%- macro week_of_year(date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {{ adapter.dispatch(\"week_of_year\", \"dbt_date\")(dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.default__week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.066144, "supported_languages": null}, "macro.dbt_date.default__week_of_year": {"name": "default__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.default__week_of_year", "macro_sql": "{%- macro default__week_of_year(date) -%}\n    cast({{ dbt_date.date_part(\"week\", date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.066308, "supported_languages": null}, "macro.dbt_date.postgres__week_of_year": {"name": "postgres__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.postgres__week_of_year", "macro_sql": "\n\n{%- macro postgres__week_of_year(date) -%}\n    {# postgresql 'week' returns isoweek. Use to_char instead.\n   WW = the first week starts on the first day of the year #}\n    cast(to_char({{ date }}, 'WW') as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0664341, "supported_languages": null}, "macro.dbt_date.duckdb__week_of_year": {"name": "duckdb__week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_of_year.sql", "original_file_path": "macros/calendar_date/week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__week_of_year", "macro_sql": "\n\n{%- macro duckdb__week_of_year(date) -%}\n    cast(ceil(dayofyear({{ date }}) / 7) as int)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.06652, "supported_languages": null}, "macro.dbt_date.convert_timezone": {"name": "convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.convert_timezone", "macro_sql": "{%- macro convert_timezone(column, target_tz=None, source_tz=None) -%}\n    {%- set source_tz = \"UTC\" if not source_tz else source_tz -%}\n    {%- set target_tz = var(\"dbt_date:time_zone\") if not target_tz else target_tz -%}\n    {{ adapter.dispatch(\"convert_timezone\", \"dbt_date\")(column, target_tz, source_tz) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.06718, "supported_languages": null}, "macro.dbt_date.default__convert_timezone": {"name": "default__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.default__convert_timezone", "macro_sql": "{% macro default__convert_timezone(column, target_tz, source_tz) -%}\n    convert_timezone(\n        '{{ source_tz }}',\n        '{{ target_tz }}',\n        cast({{ column }} as {{ dbt.type_timestamp() }})\n    )\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.067472, "supported_languages": null}, "macro.dbt_date.bigquery__convert_timezone": {"name": "bigquery__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.bigquery__convert_timezone", "macro_sql": "{%- macro bigquery__convert_timezone(column, target_tz, source_tz=None) -%}\n    timestamp(datetime({{ column }}, '{{ target_tz}}'))\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0676181, "supported_languages": null}, "macro.dbt_date.postgres__convert_timezone": {"name": "postgres__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.postgres__convert_timezone", "macro_sql": "{% macro postgres__convert_timezone(column, target_tz, source_tz) -%}\n    cast(\n        cast({{ column }} as {{ dbt.type_timestamp() }})\n        at time zone '{{ source_tz }}' at time zone '{{ target_tz }}'\n        as {{ dbt.type_timestamp() }}\n    )\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.067817, "supported_languages": null}, "macro.dbt_date.redshift__convert_timezone": {"name": "redshift__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.redshift__convert_timezone", "macro_sql": "{%- macro redshift__convert_timezone(column, target_tz, source_tz) -%}\n    {{ return(dbt_date.default__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.default__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.067976, "supported_languages": null}, "macro.dbt_date.duckdb__convert_timezone": {"name": "duckdb__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.duckdb__convert_timezone", "macro_sql": "{% macro duckdb__convert_timezone(column, target_tz, source_tz) -%}\n    {{ return(dbt_date.postgres__convert_timezone(column, target_tz, source_tz)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.postgres__convert_timezone"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0681322, "supported_languages": null}, "macro.dbt_date.spark__convert_timezone": {"name": "spark__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.spark__convert_timezone", "macro_sql": "{%- macro spark__convert_timezone(column, target_tz, source_tz) -%}\n    from_utc_timestamp(\n        to_utc_timestamp({{ column }}, '{{ source_tz }}'), '{{ target_tz }}'\n    )\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.068268, "supported_languages": null}, "macro.dbt_date.trino__convert_timezone": {"name": "trino__convert_timezone", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/convert_timezone.sql", "original_file_path": "macros/calendar_date/convert_timezone.sql", "unique_id": "macro.dbt_date.trino__convert_timezone", "macro_sql": "{%- macro trino__convert_timezone(column, target_tz, source_tz) -%}\n    cast(\n        (\n            at_timezone(\n                with_timezone(\n                    cast({{ column }} as {{ dbt.type_timestamp() }}), '{{ source_tz }}'\n                ),\n                '{{ target_tz }}'\n            )\n        ) as {{ dbt.type_timestamp() }}\n    )\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.068473, "supported_languages": null}, "macro.dbt_date.n_months_away": {"name": "n_months_away", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/n_months_away.sql", "original_file_path": "macros/calendar_date/n_months_away.sql", "unique_id": "macro.dbt_date.n_months_away", "macro_sql": "{%- macro n_months_away(n, tz=None) -%}\n    {%- set n = n | int -%}\n    {{ dbt.date_trunc(\"month\", dbt.dateadd(\"month\", n, dbt_date.today(tz))) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt.dateadd", "macro.dbt_date.today"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.068776, "supported_languages": null}, "macro.dbt_date.iso_week_of_year": {"name": "iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.iso_week_of_year", "macro_sql": "{%- macro iso_week_of_year(date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {{ adapter.dispatch(\"iso_week_of_year\", \"dbt_date\")(dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.snowflake__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.069227, "supported_languages": null}, "macro.dbt_date._iso_week_of_year": {"name": "_iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date._iso_week_of_year", "macro_sql": "{%- macro _iso_week_of_year(date, week_type) -%}\n    cast({{ dbt_date.date_part(week_type, date) }} as {{ dbt.type_int() }})\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt.type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.069393, "supported_languages": null}, "macro.dbt_date.default__iso_week_of_year": {"name": "default__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.default__iso_week_of_year", "macro_sql": "\n\n{%- macro default__iso_week_of_year(date) -%}\n    {{ dbt_date._iso_week_of_year(date, \"isoweek\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0695128, "supported_languages": null}, "macro.dbt_date.snowflake__iso_week_of_year": {"name": "snowflake__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.snowflake__iso_week_of_year", "macro_sql": "\n\n{%- macro snowflake__iso_week_of_year(date) -%}\n    {{ dbt_date._iso_week_of_year(date, \"weekiso\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.069637, "supported_languages": null}, "macro.dbt_date.postgres__iso_week_of_year": {"name": "postgres__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.postgres__iso_week_of_year", "macro_sql": "\n\n{%- macro postgres__iso_week_of_year(date) -%}\n    {#\n        postgresql week is isoweek, the first week of a year containing\n        January 4 of that year.\n    #}\n    {{ dbt_date._iso_week_of_year(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.069767, "supported_languages": null}, "macro.dbt_date.duckdb__iso_week_of_year": {"name": "duckdb__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.duckdb__iso_week_of_year", "macro_sql": "\n\n{%- macro duckdb__iso_week_of_year(date) -%}\n    {{ return(dbt_date.postgres__iso_week_of_year(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0698922, "supported_languages": null}, "macro.dbt_date.spark__iso_week_of_year": {"name": "spark__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.spark__iso_week_of_year", "macro_sql": "\n\n{%- macro spark__iso_week_of_year(date) -%}\n    {{ dbt_date._iso_week_of_year(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0700119, "supported_languages": null}, "macro.dbt_date.trino__iso_week_of_year": {"name": "trino__iso_week_of_year", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/iso_week_of_year.sql", "original_file_path": "macros/calendar_date/iso_week_of_year.sql", "unique_id": "macro.dbt_date.trino__iso_week_of_year", "macro_sql": "\n\n{%- macro trino__iso_week_of_year(date) -%}\n    {{ dbt_date._iso_week_of_year(date, \"week\") }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date._iso_week_of_year"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0701299, "supported_languages": null}, "macro.dbt_date.week_end": {"name": "week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.week_end", "macro_sql": "{%- macro week_end(date=None, tz=None) -%}\n    {%- set dt = date if date else dbt_date.today(tz) -%}\n    {{ adapter.dispatch(\"week_end\", \"dbt_date\")(dt) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_date.today", "macro.dbt_date.snowflake__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.070631, "supported_languages": null}, "macro.dbt_date.default__week_end": {"name": "default__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.default__week_end", "macro_sql": "{%- macro default__week_end(date) -%} {{ last_day(date, \"week\") }} {%- endmacro %}", "depends_on": {"macros": ["macro.dbt.last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.070797, "supported_languages": null}, "macro.dbt_date.snowflake__week_end": {"name": "snowflake__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.snowflake__week_end", "macro_sql": "\n\n{%- macro snowflake__week_end(date) -%}\n    {%- set dt = dbt_date.week_start(date) -%} {{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.070997, "supported_languages": null}, "macro.dbt_date.postgres__week_end": {"name": "postgres__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.postgres__week_end", "macro_sql": "\n\n{%- macro postgres__week_end(date) -%}\n    {%- set dt = dbt_date.week_start(date) -%} {{ dbt_date.n_days_away(6, dt) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.week_start", "macro.dbt_date.n_days_away"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.071172, "supported_languages": null}, "macro.dbt_date.duckdb__week_end": {"name": "duckdb__week_end", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/week_end.sql", "original_file_path": "macros/calendar_date/week_end.sql", "unique_id": "macro.dbt_date.duckdb__week_end", "macro_sql": "\n\n{%- macro duckdb__week_end(date) -%}\n    {{ return(dbt_date.postgres__week_end(date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_date.postgres__week_end"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.071307, "supported_languages": null}, "macro.dbt_date.next_month_number": {"name": "next_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/next_month_number.sql", "original_file_path": "macros/calendar_date/next_month_number.sql", "unique_id": "macro.dbt_date.next_month_number", "macro_sql": "{%- macro next_month_number(tz=None) -%}\n    {{ dbt_date.date_part(\"month\", dbt_date.next_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.next_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.071532, "supported_languages": null}, "macro.dbt_date.last_month_number": {"name": "last_month_number", "resource_type": "macro", "package_name": "dbt_date", "path": "macros/calendar_date/last_month_number.sql", "original_file_path": "macros/calendar_date/last_month_number.sql", "unique_id": "macro.dbt_date.last_month_number", "macro_sql": "{%- macro last_month_number(tz=None) -%}\n    {{ dbt_date.date_part(\"month\", dbt_date.last_month(tz)) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_date.date_part", "macro.dbt_date.last_month"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.071717, "supported_languages": null}, "macro.dbt_snowflake_query_tags.get_query_comment": {"name": "get_query_comment", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_comment.sql", "original_file_path": "macros/query_comment.sql", "unique_id": "macro.dbt_snowflake_query_tags.get_query_comment", "macro_sql": "{% macro get_query_comment(node, extra = {}) %}\n    {%- set comment_dict = extra -%}\n    {%- do comment_dict.update(\n        app='dbt',\n        dbt_snowflake_query_tags_version='2.5.0',\n        dbt_version=dbt_version,\n        project_name=project_name,\n        target_name=target.name,\n        target_database=target.database,\n        target_schema=target.schema,\n        invocation_id=invocation_id,\n        run_started_at=run_started_at.astimezone(modules.pytz.utc).isoformat(),\n        full_refresh=flags.FULL_REFRESH,\n        which=flags.WHICH,\n    ) -%}\n\n    {%- if node is not none -%}\n        {%- do comment_dict.update(\n            node_name=node.name,\n            node_alias=node.alias,\n            node_package_name=node.package_name,\n            node_original_file_path=node.original_file_path,\n            node_database=node.database,\n            node_schema=node.schema,\n            node_id=node.unique_id,\n            node_resource_type=node.resource_type,\n            node_meta=node.config.meta,\n            node_tags=node.tags,\n        ) -%}\n\n        {%- if flags.INVOCATION_COMMAND -%}\n            {%- do comment_dict.update(\n                invocation_command=flags.INVOCATION_COMMAND\n            ) -%}\n        {%- endif -%}\n\n        {%- if node.resource_type != ('seed') -%} {# Otherwise this throws an error saying 'Seeds cannot depend on other nodes.' #}\n            {%- if node.refs is defined -%}\n                {% set refs = [] %}\n                {% for ref in node.refs %}\n                    {%- if (dbt_version.split('.')[0] | int > 1)\n                       or (dbt_version.split('.')[0] | int == 1 and dbt_version.split('.')[1] | int >= 5) -%}\n                        {%- do refs.append(ref.name) -%}\n                    {%- else -%}\n                        {%- do refs.append(ref[0]) -%}\n                    {%- endif -%}\n                {% endfor %}\n                {%- do comment_dict.update(\n                    node_refs=refs | unique | list\n                ) -%}\n            {%- endif -%}\n        {%- endif -%}\n        {%- if node.resource_type == 'model' -%}\n            {%- do comment_dict.update(\n                materialized=node.config.materialized,\n            ) -%}\n        {%- endif -%}\n\n        {%- if node.raw_code is not none and local_md5 -%}\n            {%- do comment_dict.update({\n                \"raw_code_hash\": local_md5(node.raw_code)\n            }) -%}\n        {%- endif -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_PROJECT_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_project_id=env_var('DBT_CLOUD_PROJECT_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_JOB_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_job_id=env_var('DBT_CLOUD_JOB_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_ID', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_id=env_var('DBT_CLOUD_RUN_ID')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_REASON_CATEGORY', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_reason_category=env_var('DBT_CLOUD_RUN_REASON_CATEGORY')\n        ) -%}\n    {%- endif -%}\n\n    {%- if env_var('DBT_CLOUD_RUN_REASON', False) -%}\n        {%- do comment_dict.update(\n            dbt_cloud_run_reason=env_var('DBT_CLOUD_RUN_REASON')\n        ) -%}\n    {%- endif -%}\n\n    {{ return(tojson(comment_dict)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.074571, "supported_languages": null}, "macro.dbt_snowflake_query_tags.set_query_tag": {"name": "set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.set_query_tag", "macro_sql": "{% macro set_query_tag(extra = {}) -%}\n    {{ return(adapter.dispatch('set_query_tag', 'dbt_snowflake_query_tags')(extra=extra)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.default__set_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0752451, "supported_languages": null}, "macro.dbt_snowflake_query_tags.default__set_query_tag": {"name": "default__set_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.default__set_query_tag", "macro_sql": "{% macro default__set_query_tag(extra = {}) -%}\n    {# Get session level query tag #}\n    {% set original_query_tag = get_current_query_tag() %}\n    {% set original_query_tag_parsed = {} %}\n\n    {% if original_query_tag %}\n        {% if fromjson(original_query_tag) is mapping %}\n            {% set original_query_tag_parsed = fromjson(original_query_tag) %}\n        {% endif %}\n    {% endif %}\n\n    {# The env_vars_to_query_tag_list should contain an environment variables list to construct query tag dict #}\n    {% set env_var_query_tags = {} %}\n    {% if var('env_vars_to_query_tag_list', '') %} {# Get a list of env vars from env_vars_to_query_tag_list variable to add additional query tags #}\n        {% for k in var('env_vars_to_query_tag_list') %}\n            {% set v = env_var(k, '') %}\n            {% do env_var_query_tags.update({k.lower(): v}) if v %}\n        {% endfor %}\n    {% endif %}\n\n    {# Start with any model-configured dict #}\n    {% set query_tag = config.get('query_tag', default={}) %}\n\n    {% if query_tag is not mapping %}\n    {% do log(\"dbt-snowflake-query-tags warning: the query_tag config value of '{}' is not a mapping type, so is being ignored. If you'd like to add additional query tag information, use a mapping type instead, or remove it to avoid this message.\".format(query_tag), True) %}\n    {% set query_tag = {} %} {# If the user has set the query tag config as a non mapping type, start fresh #}\n    {% endif %}\n\n    {% do query_tag.update(original_query_tag_parsed) %}\n    {% do query_tag.update(env_var_query_tags) %}\n    {% do query_tag.update(extra) %}\n\n    {%- do query_tag.update(\n        app='dbt',\n        dbt_snowflake_query_tags_version='2.5.0',\n    ) -%}\n\n    {% if thread_id %}\n        {%- do query_tag.update(\n            thread_id=thread_id\n        ) -%}\n    {% endif %}\n\n\n    {# We have to bring is_incremental through here because its not available in the comment context #}\n    {% if model.resource_type == 'model' %}\n        {%- do query_tag.update(\n            is_incremental=is_incremental()\n        ) -%}\n    {% endif %}\n\n    {% set query_tag_json = tojson(query_tag) %}\n    {{ log(\"Setting query_tag to '\" ~ query_tag_json ~ \"'. Will reset to '\" ~ original_query_tag ~ \"' after materialization.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(query_tag_json)) %}\n    {{ return(original_query_tag)}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake.get_current_query_tag", "macro.dbt.is_incremental", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.076949, "supported_languages": null}, "macro.dbt_snowflake_query_tags.unset_query_tag": {"name": "unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.unset_query_tag", "macro_sql": "{% macro unset_query_tag(original_query_tag) -%}\n    {{ return(adapter.dispatch('unset_query_tag', 'dbt_snowflake_query_tags')(original_query_tag)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_snowflake_query_tags.default__unset_query_tag"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.077125, "supported_languages": null}, "macro.dbt_snowflake_query_tags.default__unset_query_tag": {"name": "default__unset_query_tag", "resource_type": "macro", "package_name": "dbt_snowflake_query_tags", "path": "macros/query_tags.sql", "original_file_path": "macros/query_tags.sql", "unique_id": "macro.dbt_snowflake_query_tags.default__unset_query_tag", "macro_sql": "{% macro default__unset_query_tag(original_query_tag) -%}\n    {% if original_query_tag %}\n    {{ log(\"Resetting query_tag to '\" ~ original_query_tag ~ \"'.\") }}\n    {% do run_query(\"alter session set query_tag = '{}'\".format(original_query_tag)) %}\n    {% else %}\n    {{ log(\"No original query_tag, unsetting parameter.\") }}\n    {% do run_query(\"alter session unset query_tag\") %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0774279, "supported_languages": null}, "macro.dbt_expectations.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.type_timestamp", "macro_sql": "\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_expectations')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_expectations.snowflake__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.07779, "supported_languages": null}, "macro.dbt_expectations.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.077858, "supported_languages": null}, "macro.dbt_expectations.snowflake__type_timestamp": {"name": "snowflake__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() -%}\n    timestamp_ntz\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.077923, "supported_languages": null}, "macro.dbt_expectations.postgres__type_timestamp": {"name": "postgres__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() -%}\n    timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.077986, "supported_languages": null}, "macro.dbt_expectations.trino__type_timestamp": {"name": "trino__type_timestamp", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.trino__type_timestamp", "macro_sql": "{% macro trino__type_timestamp() -%}\n    timestamp(3)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.078045, "supported_languages": null}, "macro.dbt_expectations.type_datetime": {"name": "type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.type_datetime", "macro_sql": "{% macro type_datetime() -%}\n  {{ return(adapter.dispatch('type_datetime', 'dbt_expectations')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.snowflake__type_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.078175, "supported_languages": null}, "macro.dbt_expectations.default__type_datetime": {"name": "default__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.default__type_datetime", "macro_sql": "{% macro default__type_datetime() -%}\n    datetime\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0782368, "supported_languages": null}, "macro.dbt_expectations.snowflake__type_datetime": {"name": "snowflake__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.snowflake__type_datetime", "macro_sql": "{% macro snowflake__type_datetime() -%}\n    timestamp_ntz\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0783, "supported_languages": null}, "macro.dbt_expectations.postgres__type_datetime": {"name": "postgres__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.postgres__type_datetime", "macro_sql": "{% macro postgres__type_datetime() -%}\n    timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0783591, "supported_languages": null}, "macro.dbt_expectations.duckdb__type_datetime": {"name": "duckdb__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.duckdb__type_datetime", "macro_sql": "{% macro duckdb__type_datetime() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0784159, "supported_languages": null}, "macro.dbt_expectations.spark__type_datetime": {"name": "spark__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.spark__type_datetime", "macro_sql": "{% macro spark__type_datetime() -%}\n    timestamp\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0784771, "supported_languages": null}, "macro.dbt_expectations.trino__type_datetime": {"name": "trino__type_datetime", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/datatypes.sql", "original_file_path": "macros/utils/datatypes.sql", "unique_id": "macro.dbt_expectations.trino__type_datetime", "macro_sql": "{% macro trino__type_datetime() -%}\n    timestamp(3)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0785332, "supported_languages": null}, "macro.dbt_expectations.md5": {"name": "md5", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/md5.sql", "original_file_path": "macros/utils/md5.sql", "unique_id": "macro.dbt_expectations.md5", "macro_sql": "{%- macro md5(string_value) -%}\n    {{ return(adapter.dispatch('md5', 'dbt_expectations')(string_value)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__md5"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.07876, "supported_languages": null}, "macro.dbt_expectations.default__md5": {"name": "default__md5", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/md5.sql", "original_file_path": "macros/utils/md5.sql", "unique_id": "macro.dbt_expectations.default__md5", "macro_sql": "\n\n{%- macro default__md5(string_value) -%}\n\n  {{ dbt.hash(string_value) }}\n\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": ["macro.dbt.hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0788648, "supported_languages": null}, "macro.dbt_expectations.trino__md5": {"name": "trino__md5", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/md5.sql", "original_file_path": "macros/utils/md5.sql", "unique_id": "macro.dbt_expectations.trino__md5", "macro_sql": "{%- macro trino__md5(string_value) -%}\n\n  md5(cast({{ string_value }} as varbinary))\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.078954, "supported_languages": null}, "macro.dbt_expectations.group_by": {"name": "group_by", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/groupby.sql", "original_file_path": "macros/utils/groupby.sql", "unique_id": "macro.dbt_expectations.group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_expectations')(n)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.079177, "supported_languages": null}, "macro.dbt_expectations.default__group_by": {"name": "default__group_by", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/utils/groupby.sql", "original_file_path": "macros/utils/groupby.sql", "unique_id": "macro.dbt_expectations.default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}\n   {%- endfor -%}\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.07972, "supported_languages": null}, "macro.dbt_expectations.regexp_instr": {"name": "regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.regexp_instr", "macro_sql": "{% macro regexp_instr(source_value, regexp, position=1, occurrence=1, is_raw=False, flags=\"\") %}\n\n    {{ adapter.dispatch('regexp_instr', 'dbt_expectations')(\n        source_value, regexp, position, occurrence, is_raw, flags\n    ) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.snowflake__regexp_instr"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.08078, "supported_languages": null}, "macro.dbt_expectations.default__regexp_instr": {"name": "default__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.default__regexp_instr", "macro_sql": "{% macro default__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{# unclear if other databases support raw strings or flags #}\n{% if is_raw or flags %}\n    {{ exceptions.warn(\n            \"is_raw and flags options are not supported for this adapter \"\n            ~ \"and are being ignored.\"\n    ) }}\n{% endif %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.081068, "supported_languages": null}, "macro.dbt_expectations.snowflake__regexp_instr": {"name": "snowflake__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.snowflake__regexp_instr", "macro_sql": "{% macro snowflake__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{%- set regexp = \"$$\" ~ regexp ~ \"$$\" if is_raw else \"'\" ~ regexp ~ \"'\" -%}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'cimes') }}{% endif %}\nregexp_instr({{ source_value }}, {{ regexp }}, {{ position }}, {{ occurrence }}, 0, '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.08143, "supported_languages": null}, "macro.dbt_expectations.bigquery__regexp_instr": {"name": "bigquery__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.bigquery__regexp_instr", "macro_sql": "{% macro bigquery__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}\n    {{ dbt_expectations._validate_re2_flags(flags) }}\n    {# BigQuery prepends \"(?flags)\" to set flags for current group #}\n    {%- set regexp = \"(?\" ~ flags ~ \")\" ~ regexp -%}\n{% endif %}\n{%- set regexp = \"r'\" ~ regexp ~ \"'\" if is_raw else \"'\" ~ regexp ~ \"'\" -%}\nregexp_instr({{ source_value }}, {{ regexp }}, {{ position }}, {{ occurrence }})\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_re2_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.081834, "supported_languages": null}, "macro.dbt_expectations.postgres__regexp_instr": {"name": "postgres__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.postgres__regexp_instr", "macro_sql": "{% macro postgres__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'bcegimnpqstwx') }}{% endif %}\ncoalesce(array_length((select regexp_matches({{ source_value }}, '{{ regexp }}', '{{ flags }}')), 1), 0)\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.082079, "supported_languages": null}, "macro.dbt_expectations.redshift__regexp_instr": {"name": "redshift__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.redshift__regexp_instr", "macro_sql": "{% macro redshift__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'ciep') }}{% endif %}\nregexp_instr({{ source_value }}, '{{ regexp }}', {{ position }}, {{ occurrence }}, 0, '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.082344, "supported_languages": null}, "macro.dbt_expectations.duckdb__regexp_instr": {"name": "duckdb__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.duckdb__regexp_instr", "macro_sql": "{% macro duckdb__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if flags %}{{ dbt_expectations._validate_flags(flags, 'ciep') }}{% endif %}\nregexp_matches({{ source_value }}, '{{ regexp }}', '{{ flags }}')\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0825799, "supported_languages": null}, "macro.dbt_expectations.spark__regexp_instr": {"name": "spark__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.spark__regexp_instr", "macro_sql": "{% macro spark__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n{% if is_raw or flags %}\n    {{ exceptions.warn(\n            \"is_raw and flags options are not supported for this adapter \"\n            ~ \"and are being ignored.\"\n    ) }}\n{% endif %}\nlength(regexp_extract({{ source_value }}, '{{ regexp }}', 0))\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.082825, "supported_languages": null}, "macro.dbt_expectations.trino__regexp_instr": {"name": "trino__regexp_instr", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations.trino__regexp_instr", "macro_sql": "{% macro trino__regexp_instr(source_value, regexp, position, occurrence, is_raw, flags) %}\n    {% if flags %}\n        {{ dbt_expectations._validate_re2_flags(flags) }}\n        {# Trino prepends \"(?flags)\" to set flags for current group #}\n        {%- set regexp = \"(?\" ~ flags ~ \")\" ~ regexp -%}\n    {% endif %}\n    {% if is_raw %}\n        {{ exceptions.warn(\n                \"is_raw option is not supported for this adapter \"\n                ~ \"and is being ignored.\"\n        ) }}\n    {% endif %}\n    {%- set regexp_query = \"regexp_position(\" ~ source_value ~ \", '\" ~ regexp ~ \"', \" ~ position ~ \", \" ~ occurrence ~ \")\" -%}\n    {# Trino regexp_position returns -1 if not found. Change it to 0, to be consistent with other adapters #}\n    if({{ regexp_query}} = -1, 0, {{ regexp_query}})\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations._validate_re2_flags"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.083306, "supported_languages": null}, "macro.dbt_expectations._validate_flags": {"name": "_validate_flags", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations._validate_flags", "macro_sql": "{% macro _validate_flags(flags, alphabet) %}\n{% for flag in flags %}\n    {% if flag not in alphabet %}\n    {# Using raise_compiler_error causes disabled tests with invalid flags to fail compilation #}\n    {{ exceptions.warn(\n        \"flag \" ~ flag ~ \" not in list of allowed flags for this adapter: \" ~ alphabet | join(\", \")\n    ) }}\n    {% endif %}\n{% endfor %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.083616, "supported_languages": null}, "macro.dbt_expectations._validate_re2_flags": {"name": "_validate_re2_flags", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/regex/regexp_instr.sql", "original_file_path": "macros/regex/regexp_instr.sql", "unique_id": "macro.dbt_expectations._validate_re2_flags", "macro_sql": "{% macro _validate_re2_flags(flags) %}\n{# Re2 supports following flags: #}\n{# i  :  case-insensitive (default fault) #}\n{# m  :  multi-line mode: ^ and $ match begin/end line in addition to begin/end text (default false) #}\n{# s  :  let . match \\n (default false) #}\n{# U  :  ungreedy: swap meaning of x* and x*?, x+ and x+?, etc (default false) #}\n{# Flag syntax is xyz (set) or -xyz (clear) or xy-z (set xy, clear z).  #}\n\n{# Regex explanation: do not allow consecutive dashes, accept all re2 flags and clear operator, do not end with a dash  #}\n{% set re2_flags_pattern = '^(?!.*--)[-imsU]*(?<!-)$' %}\n{% set re = modules.re %}\n{% set is_match = re.match(re2_flags_pattern, flags) %}\n{% if not is_match %}\n    {# Using raise_compiler_error causes disabled tests with invalid flags to fail compilation #}\n    {{ exceptions.warn(\n        \"flags \" ~ flags ~ \" isn't a valid re2 flag pattern\"\n    ) }}\n{% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0839849, "supported_languages": null}, "macro.dbt_expectations.log_natural": {"name": "log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.log_natural", "macro_sql": "{% macro log_natural(x) -%}\n    {{ adapter.dispatch('log_natural', 'dbt_expectations') (x) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.snowflake__log_natural"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084237, "supported_languages": null}, "macro.dbt_expectations.default__log_natural": {"name": "default__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.default__log_natural", "macro_sql": "{% macro default__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084328, "supported_languages": null}, "macro.dbt_expectations.bigquery__log_natural": {"name": "bigquery__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.bigquery__log_natural", "macro_sql": "{% macro bigquery__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084417, "supported_languages": null}, "macro.dbt_expectations.snowflake__log_natural": {"name": "snowflake__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.snowflake__log_natural", "macro_sql": "{% macro snowflake__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0845, "supported_languages": null}, "macro.dbt_expectations.spark__log_natural": {"name": "spark__log_natural", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/log_natural.sql", "original_file_path": "macros/math/log_natural.sql", "unique_id": "macro.dbt_expectations.spark__log_natural", "macro_sql": "{% macro spark__log_natural(x) -%}\n\n    ln({{ x }})\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084584, "supported_languages": null}, "macro.dbt_expectations.rand": {"name": "rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.rand", "macro_sql": "{% macro rand() -%}\n    {{ adapter.dispatch('rand', 'dbt_expectations') () }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.snowflake__rand"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084817, "supported_languages": null}, "macro.dbt_expectations.default__rand": {"name": "default__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.default__rand", "macro_sql": "{% macro default__rand() -%}\n\n    rand()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084884, "supported_languages": null}, "macro.dbt_expectations.bigquery__rand": {"name": "bigquery__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.bigquery__rand", "macro_sql": "{% macro bigquery__rand() -%}\n\n    rand()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.084945, "supported_languages": null}, "macro.dbt_expectations.snowflake__rand": {"name": "snowflake__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.snowflake__rand", "macro_sql": "{% macro snowflake__rand(seed) -%}\n\n    uniform(0::float, 1::float, random())\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.085015, "supported_languages": null}, "macro.dbt_expectations.postgres__rand": {"name": "postgres__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.postgres__rand", "macro_sql": "{% macro postgres__rand() -%}\n\n    random()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.085089, "supported_languages": null}, "macro.dbt_expectations.redshift__rand": {"name": "redshift__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.redshift__rand", "macro_sql": "{% macro redshift__rand() -%}\n\n    random()\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.08515, "supported_languages": null}, "macro.dbt_expectations.duckdb__rand": {"name": "duckdb__rand", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/rand.sql", "original_file_path": "macros/math/rand.sql", "unique_id": "macro.dbt_expectations.duckdb__rand", "macro_sql": "{% macro duckdb__rand() -%}\n\n    random()\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0852108, "supported_languages": null}, "macro.dbt_expectations.median": {"name": "median", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/median.sql", "original_file_path": "macros/math/median.sql", "unique_id": "macro.dbt_expectations.median", "macro_sql": "{% macro median(field) %}\n{{ dbt_expectations.percentile_cont(field, 0.5) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.08539, "supported_languages": null}, "macro.dbt_expectations.percentile_cont": {"name": "percentile_cont", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.percentile_cont", "macro_sql": "{% macro percentile_cont(field, quantile, partition=None) %}\n  {{ adapter.dispatch('quantile', 'dbt_expectations') (field, quantile, partition) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__quantile"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.085731, "supported_languages": null}, "macro.dbt_expectations.default__quantile": {"name": "default__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.default__quantile", "macro_sql": "{% macro default__quantile(field, quantile, partition)  -%}\n    percentile_cont({{ quantile }}) within group (order by {{ field }})\n    {%- if partition %}over(partition by {{ partition }}){% endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.085908, "supported_languages": null}, "macro.dbt_expectations.bigquery__quantile": {"name": "bigquery__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.bigquery__quantile", "macro_sql": "{% macro bigquery__quantile(field, quantile, partition) -%}\n    percentile_cont({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.086088, "supported_languages": null}, "macro.dbt_expectations.spark__quantile": {"name": "spark__quantile", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/math/percentile_cont.sql", "original_file_path": "macros/math/percentile_cont.sql", "unique_id": "macro.dbt_expectations.spark__quantile", "macro_sql": "{% macro spark__quantile(field, quantile, partition) -%}\n    percentile({{ field }}, {{ quantile }})\n    over({%- if partition %}partition by {{ partition }}{% endif -%})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.086263, "supported_languages": null}, "macro.dbt_expectations.ignore_row_if_expression": {"name": "ignore_row_if_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "unique_id": "macro.dbt_expectations.ignore_row_if_expression", "macro_sql": "{% macro ignore_row_if_expression(ignore_row_if, columns) %}\n    {{ adapter.dispatch('ignore_row_if_expression', 'dbt_expectations') (ignore_row_if, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0865889, "supported_languages": null}, "macro.dbt_expectations.default__ignore_row_if_expression": {"name": "default__ignore_row_if_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_ignore_row_if_expression.sql", "unique_id": "macro.dbt_expectations.default__ignore_row_if_expression", "macro_sql": "{% macro default__ignore_row_if_expression(ignore_row_if, columns) %}\n  {%- set ignore_row_if_values = [\"all_values_are_missing\", \"any_value_is_missing\"] -%}\n    {% if ignore_row_if not in ignore_row_if_values %}\n        {{ exceptions.raise_compiler_error(\n            \"`ignore_row_if` must be one of \" ~ (ignore_row_if_values | join(\", \")) ~ \". Got: '\" ~ ignore_row_if ~\"'.'\"\n        ) }}\n    {% endif %}\n\n    {%- set op = \"and\" if ignore_row_if == \"all_values_are_missing\" else \"or\" -%}\n    not (\n        {% for column in columns -%}\n        {{ column }} is null{% if not loop.last %} {{ op }} {% endif %}\n        {% endfor %}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.087101, "supported_languages": null}, "macro.dbt_expectations.test_expression_between": {"name": "test_expression_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_between.sql", "original_file_path": "macros/schema_tests/_generalized/expression_between.sql", "unique_id": "macro.dbt_expectations.test_expression_between", "macro_sql": "{% test expression_between(model,\n                                 expression,\n                                 min_value=None,\n                                 max_value=None,\n                                 group_by_columns=None,\n                                 row_condition=None,\n                                 strictly=False\n                                 ) %}\n\n    {{ dbt_expectations.expression_between(model, expression, min_value, max_value, group_by_columns, row_condition, strictly) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.087662, "supported_languages": null}, "macro.dbt_expectations.expression_between": {"name": "expression_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_between.sql", "original_file_path": "macros/schema_tests/_generalized/expression_between.sql", "unique_id": "macro.dbt_expectations.expression_between", "macro_sql": "{% macro expression_between(model,\n                            expression,\n                            min_value,\n                            max_value,\n                            group_by_columns,\n                            row_condition,\n                            strictly\n                            ) %}\n\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n\n{%- set strict_operator = \"\" if strictly else \"=\" -%}\n\n{% set expression_min_max %}\n( 1=1\n{%- if min_value is not none %} and {{ expression | trim }} >{{ strict_operator }} {{ min_value }}{% endif %}\n{%- if max_value is not none %} and {{ expression | trim }} <{{ strict_operator }} {{ max_value }}{% endif %}\n)\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression_min_max,\n                                        group_by_columns=group_by_columns,\n                                        row_condition=row_condition)\n                                        }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.088293, "supported_languages": null}, "macro.dbt_expectations.test_expression_is_true": {"name": "test_expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.test_expression_is_true", "macro_sql": "{% test expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n\n    {{ dbt_expectations.expression_is_true(model, expression, test_condition, group_by_columns, row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.088788, "supported_languages": null}, "macro.dbt_expectations.expression_is_true": {"name": "expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.expression_is_true", "macro_sql": "{% macro expression_is_true(model,\n                                 expression,\n                                 test_condition=\"= true\",\n                                 group_by_columns=None,\n                                 row_condition=None\n                                 ) %}\n    {{ adapter.dispatch('expression_is_true', 'dbt_expectations') (model, expression, test_condition, group_by_columns, row_condition) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.089032, "supported_languages": null}, "macro.dbt_expectations.default__expression_is_true": {"name": "default__expression_is_true", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/expression_is_true.sql", "original_file_path": "macros/schema_tests/_generalized/expression_is_true.sql", "unique_id": "macro.dbt_expectations.default__expression_is_true", "macro_sql": "{% macro default__expression_is_true(model, expression, test_condition, group_by_columns, row_condition) -%}\nwith grouped_expression as (\n    select\n        {% if group_by_columns %}\n        {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ dbt_expectations.truth_expression(expression) }}\n    from {{ model }}\n     {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by_columns %}\n    group by\n    {% for group_by_column in group_by_columns -%}\n        {{ group_by_column }}{% if not loop.last %},{% endif %}\n    {% endfor %}\n    {% endif %}\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression {{ test_condition }})\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.089542, "supported_languages": null}, "macro.dbt_expectations.get_select": {"name": "get_select", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.get_select", "macro_sql": "{% macro get_select(model, expression, row_condition, group_by) -%}\n    {{ adapter.dispatch('get_select', 'dbt_expectations') (model, expression, row_condition, group_by) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__get_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.090348, "supported_languages": null}, "macro.dbt_expectations.default__get_select": {"name": "default__get_select", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.default__get_select", "macro_sql": "\n\n{%- macro default__get_select(model, expression, row_condition, group_by) %}\n    select\n        {% if group_by %}\n        {% for g in group_by -%}\n            {{ g }} as col_{{ loop.index }},\n        {% endfor -%}\n        {% endif %}\n        {{ expression }} as expression\n    from\n        {{ model }}\n    {%- if row_condition %}\n    where\n        {{ row_condition }}\n    {% endif %}\n    {% if group_by %}\n    group by\n        {% for g in group_by -%}\n            {{ loop.index }}{% if not loop.last %},{% endif %}\n        {% endfor %}\n    {% endif %}\n{% endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.090802, "supported_languages": null}, "macro.dbt_expectations.test_equal_expression": {"name": "test_equal_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.test_equal_expression", "macro_sql": "{% test equal_expression(model, expression,\n                                compare_model=None,\n                                compare_expression=None,\n                                group_by=None,\n                                compare_group_by=None,\n                                row_condition=None,\n                                compare_row_condition=None,\n                                tolerance=0.0,\n                                tolerance_percent=None\n                                ) -%}\n\n    {{ adapter.dispatch('test_equal_expression', 'dbt_expectations') (\n                                model,\n                                expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.091203, "supported_languages": null}, "macro.dbt_expectations.default__test_equal_expression": {"name": "default__test_equal_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/equal_expression.sql", "original_file_path": "macros/schema_tests/_generalized/equal_expression.sql", "unique_id": "macro.dbt_expectations.default__test_equal_expression", "macro_sql": "\n\n{%- macro default__test_equal_expression(\n                                model,\n                                expression,\n                                compare_model,\n                                compare_expression,\n                                group_by,\n                                compare_group_by,\n                                row_condition,\n                                compare_row_condition,\n                                tolerance,\n                                tolerance_percent) -%}\n\n    {%- set compare_model = model if not compare_model else compare_model -%}\n    {%- set compare_expression = expression if not compare_expression else compare_expression -%}\n    {%- set compare_row_condition = row_condition if not compare_row_condition else compare_row_condition -%}\n    {%- set compare_group_by = group_by if not compare_group_by else compare_group_by -%}\n\n    {%- set n_cols = (group_by|length) if group_by else 0 %}\n    with a as (\n        {{ dbt_expectations.get_select(model, expression, row_condition, group_by) }}\n    ),\n    b as (\n        {{ dbt_expectations.get_select(compare_model, compare_expression, compare_row_condition, compare_group_by) }}\n    ),\n    final as (\n\n        select\n            {% for i in range(1, n_cols + 1) -%}\n            coalesce(a.col_{{ i }}, b.col_{{ i }}) as col_{{ i }},\n            {% endfor %}\n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        {% if n_cols > 0 %}\n            a\n            full outer join\n            b on\n            {% for i in range(1, n_cols + 1) -%}\n                a.col_{{ i }} = b.col_{{ i }} {% if not loop.last %}and{% endif %}\n            {% endfor -%}\n        {% else %}\n            a cross join b\n        {% endif %}\n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        {% if tolerance_percent %}\n        expression_difference_percent > {{ tolerance_percent }}\n        {% else %}\n        expression_difference > {{ tolerance }}\n        {% endif %}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.get_select"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.092254, "supported_languages": null}, "macro.dbt_expectations.truth_expression": {"name": "truth_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_truth_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_truth_expression.sql", "unique_id": "macro.dbt_expectations.truth_expression", "macro_sql": "{% macro truth_expression(expression) %}\n    {{ adapter.dispatch('truth_expression', 'dbt_expectations') (expression) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.default__truth_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0924668, "supported_languages": null}, "macro.dbt_expectations.default__truth_expression": {"name": "default__truth_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/_generalized/_truth_expression.sql", "original_file_path": "macros/schema_tests/_generalized/_truth_expression.sql", "unique_id": "macro.dbt_expectations.default__truth_expression", "macro_sql": "{% macro default__truth_expression(expression) %}\n  {{ expression }} as expression\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.092557, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern": {"name": "test_expect_column_values_to_match_like_pattern", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern", "macro_sql": "{% test expect_column_values_to_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0929952, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list": {"name": "test_expect_column_values_to_match_like_pattern_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_like_pattern_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=True) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.093672, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_regex": {"name": "test_expect_column_values_to_match_regex", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex", "macro_sql": "{% test expect_column_values_to_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} > 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.094203, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_value_lengths_to_equal": {"name": "test_expect_column_value_lengths_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_equal.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_equal", "macro_sql": "{% test expect_column_value_lengths_to_equal(model, column_name,\n                                                    value,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt.length(column_name) ~ \" = \" ~ value %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.length", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.0946271, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between": {"name": "test_expect_column_value_lengths_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_be_between.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_value_lengths_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_value_lengths_to_be_between", "macro_sql": "{% test expect_column_value_lengths_to_be_between(model, column_name,\n                                                         min_value=None,\n                                                         max_value=None,\n                                                         row_condition=None,\n                                                         strictly=False\n                                                      ) %}\n{% set expression %}\n{{ dbt.length(column_name) }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.length", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.095222, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex": {"name": "test_expect_column_values_to_not_match_regex", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex", "macro_sql": "{% test expect_column_values_to_not_match_regex(model, column_name,\n                                                    regex,\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} = 0\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.095757, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list": {"name": "test_expect_column_values_to_not_match_regex_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_regex_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_regex_list", "macro_sql": "{% test expect_column_values_to_not_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n{% for regex in regex_list %}\n{{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} = 0\n{%- if not loop.last %}\n{{ \" and \" if match_on == \"all\" else \" or \"}}\n{% endif -%}\n{% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.096523, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_match_regex_list": {"name": "test_expect_column_values_to_match_regex_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_match_regex_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_match_regex_list", "macro_sql": "{% test expect_column_values_to_match_regex_list(model, column_name,\n                                                    regex_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None,\n                                                    is_raw=False,\n                                                    flags=\"\"\n                                                    ) %}\n\n{% set expression %}\n    {% for regex in regex_list %}\n    {{ dbt_expectations.regexp_instr(column_name, regex, is_raw=is_raw, flags=flags) }} > 0\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.regexp_instr", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.097291, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list": {"name": "test_expect_column_values_to_not_match_like_pattern_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern_list.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern_list", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern_list(model, column_name,\n                                                    like_pattern_list,\n                                                    match_on=\"any\",\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression %}\n    {% for like_pattern in like_pattern_list %}\n    {{ dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) }}\n    {%- if not loop.last %}\n    {{ \" and \" if match_on == \"all\" else \" or \"}}\n    {% endif -%}\n    {% endfor %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.097983, "supported_languages": null}, "macro.dbt_expectations._get_like_pattern_expression": {"name": "_get_like_pattern_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/_get_like_pattern_expression.sql", "original_file_path": "macros/schema_tests/string_matching/_get_like_pattern_expression.sql", "unique_id": "macro.dbt_expectations._get_like_pattern_expression", "macro_sql": "{% macro _get_like_pattern_expression(column_name, like_pattern, positive) %}\n{{ column_name }} {{ \"not\" if not positive else \"\" }} like '{{ like_pattern }}'\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.098201, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern": {"name": "test_expect_column_values_to_not_match_like_pattern", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern.sql", "original_file_path": "macros/schema_tests/string_matching/expect_column_values_to_not_match_like_pattern.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_match_like_pattern", "macro_sql": "{% test expect_column_values_to_not_match_like_pattern(model, column_name,\n                                                    like_pattern,\n                                                    row_condition=None\n                                                    ) %}\n\n{% set expression = dbt_expectations._get_like_pattern_expression(column_name, like_pattern, positive=False) %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations._get_like_pattern_expression", "macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.098633, "supported_languages": null}, "macro.dbt_expectations.test_expect_row_values_to_have_recent_data": {"name": "test_expect_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_recent_data", "macro_sql": "{% test expect_row_values_to_have_recent_data(model,\n                                                column_name,\n                                                datepart,\n                                                interval,\n                                                row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                        column_name,\n                                                                                        datepart,\n                                                                                        interval,\n                                                                                        row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.099324, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data": {"name": "default__test_expect_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.default__test_expect_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_row_values_to_have_recent_data(model, column_name, datepart, interval, row_condition) %}\n{%- set default_start_date = '1970-01-01' -%}\nwith max_recency as (\n\n    select max(cast({{ column_name }} as {{ dbt_expectations.type_timestamp() }})) as max_timestamp\n    from\n        {{ model }}\n    where\n        -- to exclude erroneous future dates\n        cast({{ column_name }} as {{ dbt_expectations.type_timestamp() }}) <= {{ dbt_date.now() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n)\nselect\n    *\nfrom\n    max_recency\nwhere\n    -- if the row_condition excludes all rows, we need to compare against a default date\n    -- to avoid false negatives\n    coalesce(max_timestamp, cast('{{ default_start_date }}' as {{ dbt_expectations.type_timestamp() }}))\n        <\n        cast({{ dbt.dateadd(datepart, interval * -1, dbt_date.now()) }} as {{ dbt_expectations.type_timestamp() }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp", "macro.dbt_date.now", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.099842, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_contain_set": {"name": "test_expect_table_columns_to_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_contain_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_contain_set", "macro_sql": "{%- test expect_table_columns_to_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        input_columns i\n        left join\n        relation_columns r on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        r.relation_column is null\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.100642, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table": {"name": "test_expect_table_row_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table(model,\n                                            compare_model,\n                                            group_by=None,\n                                            compare_group_by=None,\n                                            factor=1,\n                                            row_condition=None,\n                                            compare_row_condition=None\n                                        ) -%}\n\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal_other_table',\n                        'dbt_expectations') (model,\n                                                compare_model,\n                                                group_by,\n                                                compare_group_by,\n                                                factor,\n                                                row_condition,\n                                                compare_row_condition\n                                            ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.101322, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table": {"name": "default__test_expect_table_row_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_equal_other_table(model,\n                                                    compare_model,\n                                                    group_by,\n                                                    compare_group_by,\n                                                    factor,\n                                                    row_condition,\n                                                    compare_row_condition\n                                                    ) -%}\n{{ dbt_expectations.test_equal_expression(model, \"count(*)\",\n    compare_model=compare_model,\n    compare_expression=\"count(*) * \" + factor|string,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.101621, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_not_contain_set": {"name": "test_expect_table_columns_to_not_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_not_contain_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_not_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_not_contain_set", "macro_sql": "{%- test expect_table_columns_to_not_contain_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    -- catch any column in input list that is in the list of table columns\n    select *\n    from\n        input_columns i\n        inner join\n        relation_columns r on r.relation_column = i.input_column\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.102401, "supported_languages": null}, "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data": {"name": "test_expect_grouped_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% test expect_grouped_row_values_to_have_recent_data(model,\n                                                        group_by,\n                                                        timestamp_column,\n                                                        datepart,\n                                                        interval,\n                                                        row_condition=None) %}\n\n {{ adapter.dispatch('test_expect_grouped_row_values_to_have_recent_data', 'dbt_expectations') (model,\n                                                                                                group_by,\n                                                                                                timestamp_column,\n                                                                                                datepart,\n                                                                                                interval,\n                                                                                                row_condition) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1034508, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data": {"name": "default__test_expect_grouped_row_values_to_have_recent_data", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "original_file_path": "macros/schema_tests/table_shape/expect_grouped_row_values_to_have_recent_data.sql", "unique_id": "macro.dbt_expectations.default__test_expect_grouped_row_values_to_have_recent_data", "macro_sql": "{% macro default__test_expect_grouped_row_values_to_have_recent_data(model,\n                                                                        group_by,\n                                                                        timestamp_column,\n                                                                        datepart,\n                                                                        interval,\n                                                                        row_condition) %}\nwith latest_grouped_timestamps as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        max(1) as join_key,\n        max(cast({{ timestamp_column }} as {{ dbt_expectations.type_timestamp() }})) as latest_timestamp_column\n    from\n        {{ model }}\n    where\n        -- to exclude erroneous future dates\n        cast({{ timestamp_column }} as {{ dbt_expectations.type_timestamp() }}) <= {{ dbt_date.now() }}\n        {% if row_condition %}\n        and {{ row_condition }}\n        {% endif %}\n\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n),\ntotal_row_counts as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        max(1) as join_key,\n        count(*) as row_count\n    from\n        latest_grouped_timestamps\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n\n\n),\noutdated_grouped_timestamps as (\n\n    select *\n    from\n        latest_grouped_timestamps\n    where\n        -- are the max timestamps per group older than the specified cutoff?\n        latest_timestamp_column <\n            cast(\n                {{ dbt.dateadd(datepart, interval * -1, dbt_date.now()) }}\n                as {{ dbt_expectations.type_timestamp() }}\n            )\n\n),\nvalidation_errors as (\n\n    select\n        r.row_count,\n        t.*\n    from\n        total_row_counts r\n        left join\n        outdated_grouped_timestamps t\n        on\n            {% for g in group_by %}\n            r.{{ g }} = t.{{ g }} and\n            {% endfor %}\n            r.join_key = t.join_key\n    where\n        -- fail if either no rows were returned due to row_condition,\n        -- or the recency test returned failed rows\n        r.row_count = 0\n        or\n        t.join_key is not null\n\n)\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.type_timestamp", "macro.dbt_date.now", "macro.dbt_expectations.group_by", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1043332, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_to_exist": {"name": "test_expect_column_to_exist", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_column_to_exist.sql", "original_file_path": "macros/schema_tests/table_shape/expect_column_to_exist.sql", "unique_id": "macro.dbt_expectations.test_expect_column_to_exist", "macro_sql": "{%- test expect_column_to_exist(model, column_name, column_index=None, transform=\"upper\") -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | map(transform) | join -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n\n    {%- set matching_column_index = relation_column_names.index(column_name) if column_name in relation_column_names else -1 %}\n\n    {%- if column_index -%}\n\n        {%- set column_index_0 = column_index - 1 if column_index > 0 else 0 -%}\n\n        {%- set column_index_matches = true if matching_column_index == column_index_0 else false %}\n\n    {%- else -%}\n\n        {%- set column_index_matches = true -%}\n\n    {%- endif %}\n\n    with test_data as (\n\n        select\n            cast('{{ column_name }}' as {{ dbt.type_string() }}) as column_name,\n            {{ matching_column_index }} as matching_column_index,\n            {{ column_index_matches }} as column_index_matches\n\n    )\n    select *\n    from test_data\n    where\n        not(matching_column_index >= 0 and column_index_matches)\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.105176, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal": {"name": "test_expect_table_row_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal", "macro_sql": "{%- test expect_table_row_count_to_equal(model,\n                                            value,\n                                            group_by=None,\n                                            row_condition=None\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal',\n                        'dbt_expectations') (model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.105649, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal": {"name": "default__test_expect_table_row_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal", "macro_sql": "\n\n\n\n{%- macro default__test_expect_table_row_count_to_equal(model,\n                                                value,\n                                                group_by,\n                                                row_condition\n                                                ) -%}\n{% set expression %}\ncount(*) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n    expression=expression,\n    group_by_columns=group_by,\n    row_condition=row_condition)\n    }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.105896, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_be_between": {"name": "test_expect_table_row_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_be_between", "macro_sql": "{%- test expect_table_row_count_to_be_between(model,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_be_between',\n                        'dbt_expectations') (model,\n                                                min_value,\n                                                max_value,\n                                                group_by,\n                                                row_condition,\n                                                strictly\n                                                ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.106511, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_be_between": {"name": "default__test_expect_table_row_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_be_between", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_be_between(model,\n                                                min_value,\n                                                max_value,\n                                                group_by,\n                                                row_condition,\n                                                strictly\n                                                ) -%}\n{% set expression %}\ncount(*)\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n    expression=expression,\n    min_value=min_value,\n    max_value=max_value,\n    group_by_columns=group_by,\n    row_condition=row_condition,\n    strictly=strictly\n    ) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1068008, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor": {"name": "test_expect_table_row_count_to_equal_other_table_times_factor", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "unique_id": "macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "{%- test expect_table_row_count_to_equal_other_table_times_factor(model,\n                                                                    compare_model,\n                                                                    factor,\n                                                                    group_by=None,\n                                                                    compare_group_by=None,\n                                                                    row_condition=None,\n                                                                    compare_row_condition=None\n                                            ) -%}\n    {{ adapter.dispatch('test_expect_table_row_count_to_equal_other_table_times_factor',\n                        'dbt_expectations') (model,\n                                                compare_model,\n                                                factor,\n                                                group_by,\n                                                compare_group_by,\n                                                row_condition,\n                                                compare_row_condition\n                                            ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1075342, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor": {"name": "default__test_expect_table_row_count_to_equal_other_table_times_factor", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_row_count_to_equal_other_table_times_factor.sql", "unique_id": "macro.dbt_expectations.default__test_expect_table_row_count_to_equal_other_table_times_factor", "macro_sql": "\n\n{%- macro default__test_expect_table_row_count_to_equal_other_table_times_factor(model,\n                                                                    compare_model,\n                                                                    factor,\n                                                                    group_by,\n                                                                    compare_group_by,\n                                                                    row_condition,\n                                                                    compare_row_condition\n                                                                    ) -%}\n\n{{ dbt_expectations.test_expect_table_row_count_to_equal_other_table(model,\n    compare_model,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    factor=factor,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_table_row_count_to_equal_other_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1077938, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_match_set": {"name": "test_expect_table_columns_to_match_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_match_set.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_match_set.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_set", "macro_sql": "{%- test expect_table_columns_to_match_set(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column\n    where\n        -- catch any column in input list that is not in the list of table columns\n        -- or any table column that is not in the input list\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1086028, "supported_languages": null}, "macro.dbt_expectations._get_column_list": {"name": "_get_column_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/_get_column_list.sql", "original_file_path": "macros/schema_tests/table_shape/_get_column_list.sql", "unique_id": "macro.dbt_expectations._get_column_list", "macro_sql": "{%- macro _get_column_list(model, transform=\"upper\") -%}\n{%- set relation_columns = adapter.get_columns_in_relation(model) -%}\n{%- set relation_column_names = relation_columns | map(attribute=\"name\") | map(transform) | list -%}\n{%- do return(relation_column_names) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.108928, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list": {"name": "test_expect_table_columns_to_match_ordered_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_columns_to_match_ordered_list.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_columns_to_match_ordered_list.sql", "unique_id": "macro.dbt_expectations.test_expect_table_columns_to_match_ordered_list", "macro_sql": "{%- test expect_table_columns_to_match_ordered_list(model, column_list, transform=\"upper\") -%}\n{%- if execute -%}\n    {%- set column_list = column_list | map(transform) | list -%}\n    {%- set relation_column_names = dbt_expectations._get_column_list(model, transform) -%}\n    {%- set matching_columns = dbt_expectations._list_intersect(column_list, relation_column_names) -%}\n    with relation_columns as (\n\n        {% for col_name in relation_column_names %}\n        select\n            {{ loop.index }} as relation_column_idx,\n            cast('{{ col_name }}' as {{ dbt.type_string() }}) as relation_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    input_columns as (\n\n        {% for col_name in column_list %}\n        select\n            {{ loop.index }} as input_column_idx,\n            cast('{{ col_name }}' as {{ dbt.type_string() }}) as input_column\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    )\n    select *\n    from\n        relation_columns r\n        full outer join\n        input_columns i on r.relation_column = i.input_column and r.relation_column_idx = i.input_column_idx\n    where\n        -- catch any column in input list that is not in the sequence of table columns\n        -- or any table column that is not in the input sequence\n        r.relation_column is null or\n        i.input_column is null\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations._get_column_list", "macro.dbt_expectations._list_intersect", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.110705, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table": {"name": "test_expect_table_aggregation_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_aggregation_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_aggregation_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_aggregation_to_equal_other_table", "macro_sql": "{%- test expect_table_aggregation_to_equal_other_table(model,\n                                                expression,\n                                                compare_model,\n                                                compare_expression=None,\n                                                group_by=None,\n                                                compare_group_by=None,\n                                                row_condition=None,\n                                                compare_row_condition=None,\n                                                tolerance=0.0,\n                                                tolerance_percent=None\n                                                ) -%}\n\n\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    group_by=group_by,\n    compare_group_by=compare_group_by,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition,\n    tolerance=tolerance,\n    tolerance_percent=tolerance_percent\n) }}\n\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.111287, "supported_languages": null}, "macro.dbt_expectations._list_intersect": {"name": "_list_intersect", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/_list_intersect.sql", "original_file_path": "macros/schema_tests/table_shape/_list_intersect.sql", "unique_id": "macro.dbt_expectations._list_intersect", "macro_sql": "{%- macro _list_intersect(list1, list2) -%}\n{%- set matching_items = [] -%}\n{%- for itm in list1 -%}\n    {%- if itm in list2 -%}\n        {%- do matching_items.append(itm) -%}\n    {%- endif -%}\n{%- endfor -%}\n{%- do return(matching_items) -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.111723, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table": {"name": "test_expect_table_column_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal_other_table", "macro_sql": "{%- test expect_table_column_count_to_equal_other_table(model, compare_model) -%}\n{%- if execute -%}\n{%- set number_columns = (adapter.get_columns_in_relation(model) | length) -%}\n{%- set compare_number_columns = (adapter.get_columns_in_relation(compare_model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_columns }} as number_columns,\n        {{ compare_number_columns }} as compare_number_columns\n\n)\nselect *\nfrom test_data\nwhere\n    number_columns != compare_number_columns\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.112097, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_equal": {"name": "test_expect_table_column_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_equal", "macro_sql": "{%- test expect_table_column_count_to_equal(model, value) -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ value }} as value\n\n)\nselect *\nfrom test_data\nwhere\n    number_actual_columns != value\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1123872, "supported_languages": null}, "macro.dbt_expectations.test_expect_table_column_count_to_be_between": {"name": "test_expect_table_column_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/table_shape/expect_table_column_count_to_be_between.sql", "original_file_path": "macros/schema_tests/table_shape/expect_table_column_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_table_column_count_to_be_between", "macro_sql": "{%- test expect_table_column_count_to_be_between(model,\n                                                    min_value=None,\n                                                    max_value=None\n                                                    ) -%}\n{%- if min_value is none and max_value is none -%}\n{{ exceptions.raise_compiler_error(\n    \"You have to provide either a min_value, max_value or both.\"\n) }}\n{%- endif -%}\n{%- if execute -%}\n{%- set number_actual_columns = (adapter.get_columns_in_relation(model) | length) -%}\n\n{%- set expression %}\n( 1=1\n{%- if min_value %} and number_actual_columns >= min_value{% endif %}\n{%- if max_value %} and number_actual_columns <= max_value{% endif %}\n)\n{% endset -%}\n\nwith test_data as (\n\n    select\n        {{ number_actual_columns }} as number_actual_columns,\n        {{ min_value if min_value else 0 }} as min_value,\n        {{ max_value if max_value else 0 }} as max_value\n\n)\nselect *\nfrom test_data\nwhere\n    not {{ expression }}\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.11309, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set": {"name": "test_expect_column_values_to_not_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_in_set.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_in_set", "macro_sql": "{% test expect_column_values_to_not_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that match the set\n    select\n        v.value_field\n    from\n        all_values v\n        join\n        set_values s on v.value_field = s.value_field\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1137102, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_in_set": {"name": "test_expect_column_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_set", "macro_sql": "{% test expect_column_values_to_be_in_set(model, column_name,\n                                                   value_set,\n                                                   quote_values=True,\n                                                   row_condition=None\n                                                   ) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        cast('{{ value }}' as {{ dbt.type_string() }})\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.114332, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_increasing": {"name": "test_expect_column_values_to_be_increasing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_increasing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_increasing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_increasing", "macro_sql": "{% test expect_column_values_to_be_increasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None,\n                                                   group_by=None,\n                                                   step=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \">\" if strictly else \">=\" -%}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        {{ column_name }} as value_field\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        value_field,\n        lag(value_field) over\n            {%- if not group_by -%}\n                (order by sort_column)\n            {%- else -%}\n                (partition by {{ group_by | join(\", \") }} order by sort_column)\n            {%- endif  %} as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (\n            (value_field {{ operator }} value_field_lag)\n            {%- if step %}\n            and ((value_field - value_field_lag) = {{ step }})\n            {%- endif %}\n        )\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.115312, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_null": {"name": "test_expect_column_values_to_be_null", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_null.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_null.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_null", "macro_sql": "{% test expect_column_values_to_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.115684, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_unique": {"name": "test_expect_column_values_to_be_unique", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_unique.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_unique.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_unique", "macro_sql": "{% test expect_column_values_to_be_unique(model, column_name, row_condition=None) %}\n{{ dbt_expectations.test_expect_compound_columns_to_be_unique(model, [column_name], row_condition=row_condition) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_compound_columns_to_be_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1158981, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_between": {"name": "test_expect_column_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_between.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_between", "macro_sql": "{% test expect_column_values_to_be_between(model, column_name,\n                                                   min_value=None,\n                                                   max_value=None,\n                                                   row_condition=None,\n                                                   strictly=False\n                                                   ) %}\n\n{% set expression %}\n{{ column_name }}\n{% endset %}\n\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=None,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.116705, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_decreasing": {"name": "test_expect_column_values_to_be_decreasing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_decreasing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_decreasing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_decreasing", "macro_sql": "{% test expect_column_values_to_be_decreasing(model, column_name,\n                                                   sort_column=None,\n                                                   strictly=True,\n                                                   row_condition=None,\n                                                   group_by=None,\n                                                   step=None) %}\n\n{%- set sort_column = column_name if not sort_column else sort_column -%}\n{%- set operator = \"<\" if strictly else \"<=\" %}\nwith all_values as (\n\n    select\n        {{ sort_column }} as sort_column,\n        {%- if group_by -%}\n        {{ group_by | join(\", \") }},\n        {%- endif %}\n        {{ column_name }} as value_field\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nadd_lag_values as (\n\n    select\n        sort_column,\n        value_field,\n        lag(value_field) over\n            {%- if not group_by -%}\n                (order by sort_column)\n            {%- else -%}\n                (partition by {{ group_by | join(\", \") }} order by sort_column)\n            {%- endif  %} as value_field_lag\n    from\n        all_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        add_lag_values\n    where\n        value_field_lag is not null\n        and\n        not (\n            (value_field {{ operator }} value_field_lag)\n            {%- if step %}\n            and ((value_field_lag - value_field) = {{ step }})\n            {%- endif %}\n        )\n\n)\nselect *\nfrom validation_errors\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.117685, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list": {"name": "test_expect_column_values_to_be_in_type_list", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_type_list.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_in_type_list.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_in_type_list", "macro_sql": "{%- test expect_column_values_to_be_in_type_list(model, column_name, column_type_list) -%}\n{%- if execute -%}\n\n    {%- set column_name = column_name | upper -%}\n    {%- set columns_in_relation = adapter.get_columns_in_relation(model) -%}\n    {%- set column_type_list = column_type_list| map(\"upper\") | list -%}\n    with relation_columns as (\n\n        {% for column in columns_in_relation %}\n        select\n            cast('{{ escape_single_quotes(column.name | upper) }}' as {{ dbt.type_string() }}) as relation_column,\n            cast('{{ column.dtype | upper }}' as {{ dbt.type_string() }}) as relation_column_type\n        {% if not loop.last %}union all{% endif %}\n        {% endfor %}\n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = '{{ column_name }}'\n            and\n            relation_column_type not in ('{{ column_type_list | join(\"', '\") }}')\n\n    )\n    select *\n    from test_data\n\n{%- endif -%}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt.escape_single_quotes", "macro.dbt.type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.118594, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_of_type": {"name": "test_expect_column_values_to_be_of_type", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_of_type.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_be_of_type.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_of_type", "macro_sql": "{%- test expect_column_values_to_be_of_type(model, column_name, column_type) -%}\n{{ dbt_expectations.test_expect_column_values_to_be_in_type_list(model, column_name, [column_type]) }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_expect_column_values_to_be_in_type_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.118848, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_have_consistent_casing": {"name": "test_expect_column_values_to_have_consistent_casing", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_have_consistent_casing.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_have_consistent_casing.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_have_consistent_casing", "macro_sql": "{% test expect_column_values_to_have_consistent_casing(model, column_name, display_inconsistent_columns=False) %}\n\nwith test_data as (\n\n    select\n        distinct {{ column_name }} as distinct_values\n    from\n        {{ model }}\n\n ),\n {% if display_inconsistent_columns %}\n validation_errors as (\n\n    select\n        lower(distinct_values) as inconsistent_columns,\n        count(distinct_values) as set_count_case_insensitive\n    from\n        test_data\n    group by 1\n    having\n        count(distinct_values) > 1\n\n )\n select * from validation_errors\n {% else %}\n validation_errors as (\n\n    select\n        count(1) as set_count,\n        count(distinct lower(distinct_values)) as set_count_case_insensitive\n    from\n        test_data\n\n )\n select *\n from\n    validation_errors\n where\n    set_count != set_count_case_insensitive\n {% endif %}\n {%- endtest -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.119185, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_not_be_null": {"name": "test_expect_column_values_to_not_be_null", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_null.sql", "original_file_path": "macros/schema_tests/column_values_basic/expect_column_values_to_not_be_null.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_not_be_null", "macro_sql": "{% test expect_column_values_to_not_be_null(model, column_name, row_condition=None) %}\n\n{% set expression = column_name ~ \" is not null\" %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.119581, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_min_to_be_between": {"name": "test_expect_column_min_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_min_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_min_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_min_to_be_between", "macro_sql": "{% test expect_column_min_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\nmin({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1202009, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between": {"name": "test_expect_column_unique_value_count_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_unique_value_count_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_unique_value_count_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_unique_value_count_to_be_between", "macro_sql": "{% test expect_column_unique_value_count_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncount(distinct {{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.120836, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between": {"name": "test_expect_column_quantile_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_quantile_values_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_quantile_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_quantile_values_to_be_between", "macro_sql": "{% test expect_column_quantile_values_to_be_between(model, column_name,\n                                                            quantile,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n\n{% set expression %}\n{{ dbt_expectations.percentile_cont(column_name, quantile) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.percentile_cont", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1215029, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_median_to_be_between": {"name": "test_expect_column_median_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_median_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_median_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_median_to_be_between", "macro_sql": "{% test expect_column_median_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n\n{% set expression %}\n{{ dbt_expectations.median(column_name) }}\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.median", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.122211, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between": {"name": "test_expect_column_proportion_of_unique_values_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_proportion_of_unique_values_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_proportion_of_unique_values_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_proportion_of_unique_values_to_be_between", "macro_sql": "{% test expect_column_proportion_of_unique_values_to_be_between(model, column_name,\n                                                            min_value=None,\n                                                            max_value=None,\n                                                            group_by=None,\n                                                            row_condition=None,\n                                                            strictly=False\n                                                            ) %}\n{% set expression %}\ncase \n  when count({{ column_name }}) = 0 then 1 -- Return 1 if division by zero\n  else cast(count(distinct {{ column_name }}) as {{ dbt.type_float() }})/count({{ column_name }})\nend\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.type_float", "macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.12305, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set": {"name": "test_expect_column_distinct_values_to_equal_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_equal_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_equal_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_equal_set", "macro_sql": "{% test expect_column_distinct_values_to_equal_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as column_value\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        all_values v\n        full outer join\n        unique_set_values s on v.column_value = s.value_field\n    where\n        v.column_value is null or\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.123677, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set": {"name": "test_expect_column_most_common_value_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% test expect_column_most_common_value_to_be_in_set(model,\n                                                       column_name,\n                                                       value_set,\n                                                       top_n,\n                                                       quote_values=True,\n                                                       data_type=\"decimal\",\n                                                       row_condition=None\n                                                       ) -%}\n\n    {{ adapter.dispatch('test_expect_column_most_common_value_to_be_in_set', 'dbt_expectations') (\n            model, column_name, value_set, top_n, quote_values, data_type, row_condition\n        ) }}\n\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1243908, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set": {"name": "default__test_expect_column_most_common_value_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_most_common_value_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_most_common_value_to_be_in_set", "macro_sql": "{% macro default__test_expect_column_most_common_value_to_be_in_set(model,\n                                                                      column_name,\n                                                                      value_set,\n                                                                      top_n,\n                                                                      quote_values,\n                                                                      data_type,\n                                                                      row_condition\n                                                                      ) %}\n\nwith value_counts as (\n\n    select\n        {% if quote_values -%}\n        {{ column_name }}\n        {%- else -%}\n        cast({{ column_name }} as {{ data_type }})\n        {%- endif %} as value_field,\n        count(*) as value_count\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n    group by {% if quote_values -%}\n                {{ column_name }}\n            {%- else -%}\n                cast({{ column_name }} as {{ data_type }})\n            {%- endif %}\n\n),\nvalue_counts_ranked as (\n\n    select\n        *,\n        row_number() over(order by value_count desc) as value_count_rank\n    from\n        value_counts\n\n),\nvalue_count_top_n as (\n\n    select\n        value_field\n    from\n        value_counts_ranked\n    where\n        value_count_rank = {{ top_n }}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        cast({{ value }} as {{ data_type }})\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        value_field\n    from\n        value_count_top_n\n    where\n        value_field not in (select value_field from unique_set_values)\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1250482, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set": {"name": "test_expect_column_distinct_values_to_contain_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_contain_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_contain_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_contain_set", "macro_sql": "{% test expect_column_distinct_values_to_contain_set(model, column_name,\n                                                            value_set,\n                                                            quote_values=True,\n                                                            row_condition=None\n                                                            ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values in set that are not in the list of values from the model\n    select\n        s.value_field\n    from\n        unique_set_values s\n        left join\n        all_values v on s.value_field = v.value_field\n    where\n        v.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.125652, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal": {"name": "test_expect_column_distinct_count_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal", "macro_sql": "{% test expect_column_distinct_count_to_equal(model,\n                                                column_name,\n                                                value,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) = {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.126098, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than": {"name": "test_expect_column_distinct_count_to_be_less_than", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_less_than.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_less_than.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_less_than", "macro_sql": "{% test expect_column_distinct_count_to_be_less_than(model,\n                                                       column_name,\n                                                       value,\n                                                       group_by=None,\n                                                       row_condition=None\n                                                       ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) < {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.12655, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_sum_to_be_between": {"name": "test_expect_column_sum_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_sum_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_sum_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_sum_to_be_between", "macro_sql": "{% test expect_column_sum_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nsum({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1271198, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_stdev_to_be_between": {"name": "test_expect_column_stdev_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_stdev_to_be_between", "macro_sql": "{% test expect_column_stdev_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) -%}\n    {{ adapter.dispatch('test_expect_column_stdev_to_be_between', 'dbt_expectations') (\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_stdev_to_be_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1279209, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between": {"name": "default__test_expect_column_stdev_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_stdev_to_be_between.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_stdev_to_be_between", "macro_sql": "{% macro default__test_expect_column_stdev_to_be_between(\n                                                    model, column_name,\n                                                    min_value,\n                                                    max_value,\n                                                    group_by,\n                                                    row_condition,\n                                                    strictly\n                                                    ) %}\n\n{% set expression %}\nstddev({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.128238, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_mean_to_be_between": {"name": "test_expect_column_mean_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_mean_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_mean_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_mean_to_be_between", "macro_sql": "{% test expect_column_mean_to_be_between(model, column_name,\n                                                    min_value=None,\n                                                    max_value=None,\n                                                    group_by=None,\n                                                    row_condition=None,\n                                                    strictly=False\n                                                    ) %}\n{% set expression %}\navg({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.128932, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_max_to_be_between": {"name": "test_expect_column_max_to_be_between", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_max_to_be_between.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_max_to_be_between.sql", "unique_id": "macro.dbt_expectations.test_expect_column_max_to_be_between", "macro_sql": "{% test expect_column_max_to_be_between(model, column_name,\n                                                min_value=None,\n                                                max_value=None,\n                                                group_by=None,\n                                                row_condition=None,\n                                                strictly=False\n                                                ) %}\n{% set expression %}\nmax({{ column_name }})\n{% endset %}\n{{ dbt_expectations.expression_between(model,\n                                        expression=expression,\n                                        min_value=min_value,\n                                        max_value=max_value,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition,\n                                        strictly=strictly\n                                        ) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_between"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.129594, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than": {"name": "test_expect_column_distinct_count_to_be_greater_than", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_greater_than.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_be_greater_than.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_be_greater_than", "macro_sql": "{% test expect_column_distinct_count_to_be_greater_than(model,\n                                                          column_name,\n                                                          value,\n                                                          group_by=None,\n                                                          row_condition=None\n                                                          ) %}\n{% set expression %}\ncount(distinct {{ column_name }}) > {{ value }}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition)\n                                        }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1300821, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set": {"name": "test_expect_column_distinct_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_values_to_be_in_set", "macro_sql": "{% test expect_column_distinct_values_to_be_in_set(model,\n                                                     column_name,\n                                                     value_set,\n                                                     quote_values=True,\n                                                     row_condition=None\n                                                     ) %}\n\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n\n),\nset_values as (\n\n    {% for value in value_set -%}\n    select\n        {% if quote_values -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif %} as value_field\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n\n),\nunique_set_values as (\n\n    select distinct value_field\n    from\n        set_values\n\n),\nvalidation_errors as (\n    -- values from the model that are not in the set\n    select\n        v.value_field\n    from\n        all_values v\n        left join\n        unique_set_values s on v.value_field = s.value_field\n    where\n        s.value_field is null\n\n)\n\nselect *\nfrom validation_errors\n\n{% endtest %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.130707, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table": {"name": "test_expect_column_distinct_count_to_equal_other_table", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal_other_table.sql", "original_file_path": "macros/schema_tests/aggregate_functions/expect_column_distinct_count_to_equal_other_table.sql", "unique_id": "macro.dbt_expectations.test_expect_column_distinct_count_to_equal_other_table", "macro_sql": "{% test expect_column_distinct_count_to_equal_other_table(model,\n                                                                compare_model,\n                                                                column_name,\n                                                                compare_column_name,\n                                                                row_condition=None,\n                                                                compare_row_condition=None\n                                                                ) %}\n{%- set expression -%}\ncount(distinct {{ column_name }})\n{%- endset -%}\n{%- set compare_expression -%}\n{%- if compare_column_name -%}\ncount(distinct {{ compare_column_name }})\n{%- else -%}\n{{ expression }}\n{%- endif -%}\n{%- endset -%}\n{{ dbt_expectations.test_equal_expression(\n    model,\n    expression=expression,\n    compare_model=compare_model,\n    compare_expression=compare_expression,\n    row_condition=row_condition,\n    compare_row_condition=compare_row_condition\n) }}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt_expectations.test_equal_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1313071, "supported_languages": null}, "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart": {"name": "test_expect_row_values_to_have_data_for_every_n_datepart", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_row_values_to_have_data_for_every_n_datepart.sql", "original_file_path": "macros/schema_tests/distributional/expect_row_values_to_have_data_for_every_n_datepart.sql", "unique_id": "macro.dbt_expectations.test_expect_row_values_to_have_data_for_every_n_datepart", "macro_sql": "{%- test expect_row_values_to_have_data_for_every_n_datepart(model,\n                                                            date_col,\n                                                            date_part=\"day\",\n                                                            interval=None,\n                                                            row_condition=None,\n                                                            exclusion_condition=None,\n                                                            test_start_date=None,\n                                                            test_end_date=None) -%}\n{% if not execute %}\n    {{ return('') }}\n{% endif %}\n\n{% if not test_start_date or not test_end_date %}\n    {% set sql %}\n\n        select\n            min(cast({{ date_col }} as date)) as start_{{ date_part }},\n            max(cast({{ date_col }} as date)) as end_{{ date_part }}\n        from {{ model }}\n        {% if row_condition %}\n        where {{ row_condition }}\n        {% endif %}\n\n    {% endset %}\n\n    {%- set dr = run_query(sql) -%}\n\n    {%- set db_start_date = dr.columns[0].values()[0] -%}\n    {%- set db_end_date = dr.columns[1].values()[0] -%}\n\n    {% if db_start_date is not string %}\n        {%- set db_start_date = db_start_date.strftime('%Y-%m-%d') -%}\n        {%- set db_end_date = db_end_date.strftime('%Y-%m-%d') -%}\n    {% endif %}\n\n{% endif %}\n\n{% if not test_start_date %}\n{% set start_date = db_start_date %}\n{% else %}\n{% set start_date = test_start_date %}\n{% endif %}\n\n\n{% if not test_end_date %}\n{% set end_date = db_end_date %}\n{% else %}\n{% set end_date = test_end_date %}\n{% endif %}\n\nwith base_dates as (\n\n    {{ dbt_date.get_base_dates(start_date=start_date, end_date=end_date, datepart=date_part) }}\n    {% if interval %}\n    {#\n        Filter the date spine created above down to the interval granularity using a modulo operation.\n        The number of date_parts after the start_date divided by the integer interval will produce no remainder for the desired intervals,\n        e.g. for 2-day interval from a starting Jan 1, 2020:\n            params: start_date = '2020-01-01', date_part = 'day', interval = 2\n            date spine created above: [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-04, 2020-01-05, ...]\n            The first parameter to the `mod` function would be the number of days between the start_date and the spine date, i.e. [0, 1, 2, 3, 4 ...]\n            The second parameter to the `mod` function would be the integer interval, i.e. 2\n            This modulo operation produces the following remainders: [0, 1, 0, 1, 0, ...]\n            Filtering the spine only where this remainder == 0 will return a spine with every other day as desired, i.e. [2020-01-01, 2020-01-03, 2020-01-05, ...]\n    #}\n    where mod(\n            cast({{ dbt.datediff(\"'\" ~ start_date ~ \"'\", 'date_' ~ date_part, date_part) }} as {{ dbt.type_int() }}),\n            cast({{interval}} as {{ dbt.type_int() }})\n        ) = 0\n    {% endif %}\n\n),\nmodel_data as (\n\n    select\n    {% if not interval %}\n\n        cast({{ dbt.date_trunc(date_part, date_col) }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n\n    {% else %}\n        {#\n            Use a modulo operator to determine the number of intervals that a date_col is away from the interval-date spine\n            and subtracts that amount to effectively slice each date_col record into its corresponding spine bucket,\n            e.g. given a date_col of with records [2020-01-01, 2020-01-02, 2020-01-03, 2020-01-11, 2020-01-12]\n                if we want to slice these dates into their 2-day buckets starting Jan 1, 2020 (start_date = '2020-01-01', date_part='day', interval=2),\n                the modulo operation described above will produce these remainders: [0, 1, 0, 0, 1]\n                subtracting that number of days from the observations will produce records [2020-01-01, 2020-01-01, 2020-01-03, 2020-01-11, 2020-01-11],\n                all of which align with records from the interval-date spine\n        #}\n        {{ dbt.dateadd(\n            date_part,\n            \"mod(\n                cast(\" ~ dbt.datediff(\"'\" ~ start_date ~ \"'\", date_col, date_part) ~ \" as \" ~ dbt.type_int() ~ \" ),\n                cast(\" ~ interval ~ \" as  \" ~ dbt.type_int() ~ \" )\n            ) * (-1)\",\n            \"cast( \" ~ dbt.date_trunc(date_part, date_col) ~ \" as  \" ~ dbt_expectations.type_datetime() ~ \")\"\n        )}} as date_{{ date_part }},\n\n    {% endif %}\n\n        count(*) as row_cnt\n    from\n        {{ model }} f\n    {% if row_condition %}\n    where {{ row_condition }}\n    {% endif %}\n    group by\n        date_{{date_part}}\n\n),\n\nfinal as (\n\n    select\n        cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) as date_{{ date_part }},\n        case when f.date_{{ date_part }} is null then true else false end as is_missing,\n        coalesce(f.row_cnt, 0) as row_cnt\n    from\n        base_dates d\n        left join\n        model_data f on cast(d.date_{{ date_part }} as {{ dbt_expectations.type_datetime() }}) = f.date_{{ date_part }}\n)\nselect\n    *\nfrom final\nwhere row_cnt = 0\n{% if exclusion_condition %}\n  and {{ exclusion_condition }}\n{% endif %}\n{%- endtest -%}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt_date.get_base_dates", "macro.dbt.datediff", "macro.dbt.type_int", "macro.dbt.date_trunc", "macro.dbt_expectations.type_datetime", "macro.dbt.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1342971, "supported_languages": null}, "macro.dbt_expectations._get_metric_expression": {"name": "_get_metric_expression", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations._get_metric_expression", "macro_sql": "{%- macro _get_metric_expression(metric_column, take_logs) -%}\n\n{%- if take_logs %}\n{%- set expr = \"nullif(\" ~ metric_column ~ \", 0)\" -%}\ncoalesce({{ dbt_expectations.log_natural(expr) }}, 0)\n{%- else -%}\ncoalesce({{ metric_column }}, 0)\n{%- endif %}\n\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_expectations.log_natural"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.135263, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs": {"name": "test_expect_column_values_to_be_within_n_moving_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by=None,\n                                  period='day',\n                                  lookback_periods=1,\n                                  trend_periods=7,\n                                  test_periods=14,\n                                  sigma_threshold=3,\n                                  sigma_threshold_upper=None,\n                                  sigma_threshold_lower=None,\n                                  take_diffs=true,\n                                  take_logs=true\n                                ) -%}\n    {{ adapter.dispatch('test_expect_column_values_to_be_within_n_moving_stdevs', 'dbt_expectations') (model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.135715, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs": {"name": "default__test_expect_column_values_to_be_within_n_moving_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_moving_stdevs.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_moving_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_moving_stdevs(model,\n                                  column_name,\n                                  date_column_name,\n                                  group_by,\n                                  period,\n                                  lookback_periods,\n                                  trend_periods,\n                                  test_periods,\n                                  sigma_threshold,\n                                  sigma_threshold_upper,\n                                  sigma_threshold_lower,\n                                  take_diffs,\n                                  take_logs\n                                ) %}\n\n{%- set sigma_threshold_upper = sigma_threshold_upper if sigma_threshold_upper else sigma_threshold -%}\n{%- set sigma_threshold_lower = sigma_threshold_lower if sigma_threshold_lower else -1 * sigma_threshold -%}\n{%- set partition_by = \"partition by \" ~ (group_by | join(\",\")) if group_by -%}\n{%- set group_by_length = (group_by | length ) if group_by else 0 -%}\n\nwith metric_values as (\n\n    with grouped_metric_values as (\n\n        select\n            {{ dbt.date_trunc(period, date_column_name) }} as metric_period,\n            {{ group_by | join(\",\") ~ \",\" if group_by }}\n            sum({{ column_name }}) as agg_metric_value\n        from\n            {{ model }}\n        {{  dbt_expectations.group_by(1 + group_by_length) }}\n\n    )\n    {%- if take_diffs %}\n    , grouped_metric_values_with_priors as (\n\n        select\n            *,\n            lag(agg_metric_value, {{ lookback_periods }}) over(\n                {{ partition_by }}\n                order by metric_period) as prior_agg_metric_value\n    from\n        grouped_metric_values d\n\n    )\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        -\n        {{ dbt_expectations._get_metric_expression(\"prior_agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values_with_priors d\n\n    {%- else %}\n\n    select\n        *,\n        {{ dbt_expectations._get_metric_expression(\"agg_metric_value\", take_logs) }}\n        as metric_test_value\n    from\n        grouped_metric_values\n\n    {%- endif %}\n\n),\nmetric_moving_calcs as (\n\n    select\n        *,\n        avg(metric_test_value)\n            over({{ partition_by }}\n                    order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_average,\n        stddev(metric_test_value)\n            over({{ partition_by }}\n                    order by metric_period rows\n                    between {{ trend_periods }} preceding and 1 preceding) as metric_test_rolling_stddev\n    from\n        metric_values\n\n),\nmetric_sigma as (\n\n    select\n        *,\n        (metric_test_value - metric_test_rolling_average) as metric_test_delta,\n        (metric_test_value - metric_test_rolling_average)/\n            nullif(metric_test_rolling_stddev, 0) as metric_test_sigma\n    from\n        metric_moving_calcs\n\n)\nselect\n    *\nfrom\n    metric_sigma\nwhere\n\n    metric_period >= cast(\n            {{ dbt.dateadd(period, -test_periods, dbt.date_trunc(period, dbt_date.now())) }}\n            as {{ dbt_expectations.type_timestamp() }})\n    and\n    metric_period < {{ dbt.date_trunc(period, dbt_date.now()) }}\n    and\n\n    not (\n        metric_test_sigma >= {{ sigma_threshold_lower }} and\n        metric_test_sigma <= {{ sigma_threshold_upper }}\n    )\n{%- endmacro -%}", "depends_on": {"macros": ["macro.dbt.date_trunc", "macro.dbt_expectations.group_by", "macro.dbt_expectations._get_metric_expression", "macro.dbt.dateadd", "macro.dbt_date.now", "macro.dbt_expectations.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.136968, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs": {"name": "test_expect_column_values_to_be_within_n_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "unique_id": "macro.dbt_expectations.test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% test expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by=None,\n                                  sigma_threshold=3\n                                ) -%}\n    {{\n        adapter.dispatch('test_expect_column_values_to_be_within_n_stdevs', 'dbt_expectations') (\n            model, column_name, group_by, sigma_threshold\n        )\n    }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.137404, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs": {"name": "default__test_expect_column_values_to_be_within_n_stdevs", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "original_file_path": "macros/schema_tests/distributional/expect_column_values_to_be_within_n_stdevs.sql", "unique_id": "macro.dbt_expectations.default__test_expect_column_values_to_be_within_n_stdevs", "macro_sql": "{% macro default__test_expect_column_values_to_be_within_n_stdevs(model,\n                                  column_name,\n                                  group_by,\n                                  sigma_threshold\n                                ) %}\n\nwith metric_values as (\n\n    select\n        {{ group_by | join(\",\") ~ \",\" if group_by }}\n        sum({{ column_name }}) as {{ column_name }}\n    from\n        {{ model }}\n    {% if group_by -%}\n    {{  dbt_expectations.group_by(group_by | length) }}\n    {%- endif %}\n\n),\nmetric_values_with_statistics as (\n\n    select\n        *,\n        avg({{ column_name }}) over() as {{ column_name }}_average,\n        stddev({{ column_name }}) over() as {{ column_name }}_stddev\n    from\n        metric_values\n\n),\nmetric_values_z_scores as (\n\n    select\n        *,\n        ({{ column_name }} - {{ column_name }}_average)/\n            nullif({{ column_name }}_stddev, 0) as {{ column_name }}_sigma\n    from\n        metric_values_with_statistics\n\n)\nselect\n    *\nfrom\n    metric_values_z_scores\nwhere\n    abs({{ column_name }}_sigma) > {{ sigma_threshold }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.group_by"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1378691, "supported_languages": null}, "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record": {"name": "test_expect_select_column_values_to_be_unique_within_record", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "unique_id": "macro.dbt_expectations.test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% test expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns=False,\n                                                    ignore_row_if=\"all_values_are_missing\",\n                                                    row_condition=None\n                                                    )  -%}\n    {{ adapter.dispatch('test_expect_select_column_values_to_be_unique_within_record', 'dbt_expectations') (model, column_list, quote_columns, ignore_row_if, row_condition) }}\n{%- endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.138526, "supported_languages": null}, "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record": {"name": "default__test_expect_select_column_values_to_be_unique_within_record", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "original_file_path": "macros/schema_tests/multi-column/expect_select_column_values_to_be_unique_within_record.sql", "unique_id": "macro.dbt_expectations.default__test_expect_select_column_values_to_be_unique_within_record", "macro_sql": "{% macro default__test_expect_select_column_values_to_be_unique_within_record(model,\n                                                    column_list,\n                                                    quote_columns,\n                                                    ignore_row_if,\n                                                    row_condition\n                                                    ) %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set row_condition_ext -%}\n\n    {%- if row_condition  %}\n    {{ row_condition }} and\n    {% endif -%}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{%- endset -%}\n\nwith column_values as (\n\n    select\n        row_number() over(order by {{ columns|join(', ') }}) as row_index,\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    from {{ model }}\n    where\n        1=1\n    {%- if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n\n),\nunpivot_columns as (\n\n    {% for column in columns %}\n    select row_index, '{{ column }}' as column_name, {{ dbt_expectations.md5(column) }} as column_value from column_values\n    {% if not loop.last %}union all{% endif %}\n    {% endfor %}\n),\nvalidation_errors as (\n\n    select\n        row_index,\n        count(distinct column_value) as column_values\n    from unpivot_columns\n    group by 1\n    having count(distinct column_value) < {{ columns | length }}\n\n)\nselect * from validation_errors\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_expectations.ignore_row_if_expression", "macro.dbt_expectations.md5"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.139499, "supported_languages": null}, "macro.dbt_expectations.test_expect_compound_columns_to_be_unique": {"name": "test_expect_compound_columns_to_be_unique", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_compound_columns_to_be_unique.sql", "original_file_path": "macros/schema_tests/multi-column/expect_compound_columns_to_be_unique.sql", "unique_id": "macro.dbt_expectations.test_expect_compound_columns_to_be_unique", "macro_sql": "{% test expect_compound_columns_to_be_unique(model,\n                                                column_list,\n                                                quote_columns=False,\n                                                ignore_row_if=\"all_values_are_missing\",\n                                                row_condition=None\n                                                ) %}\n{% if not column_list %}\n    {{ exceptions.raise_compiler_error(\n        \"`column_list` must be specified as a list of columns. Got: '\" ~ column_list ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% if not quote_columns %}\n    {%- set columns=column_list %}\n{% elif quote_columns %}\n    {%- set columns=[] %}\n        {% for column in column_list -%}\n            {% set columns = columns.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for expect_compound_columns_to_be_unique test must be one of [True, False] Got: '\" ~ quote_columns ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set row_condition_ext -%}\n\n    {%- if row_condition  %}\n    {{ row_condition }} and\n    {% endif -%}\n\n    {{ dbt_expectations.ignore_row_if_expression(ignore_row_if, columns) }}\n\n{%- endset -%}\n\nwith validation_errors as (\n\n    select\n        {% for column in columns -%}\n        {{ column }},\n        {%- endfor %}\n        count(*) as {{adapter.quote(\"n_records\")}}\n    from {{ model }}\n    where\n        1=1\n    {%- if row_condition_ext %}\n        and {{ row_condition_ext }}\n    {% endif %}\n    group by\n        {% for column in columns -%}\n        {{ column }}{% if not loop.last %},{% endif %}\n        {%- endfor %}\n    having count(*) > 1\n\n)\nselect * from validation_errors\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.ignore_row_if_expression"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.140758, "supported_languages": null}, "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal": {"name": "test_expect_multicolumn_sum_to_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_multicolumn_sum_to_equal.sql", "original_file_path": "macros/schema_tests/multi-column/expect_multicolumn_sum_to_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_multicolumn_sum_to_equal", "macro_sql": "{% test expect_multicolumn_sum_to_equal(model,\n                                                column_list,\n                                                sum_total,\n                                                group_by=None,\n                                                row_condition=None\n                                                ) %}\n\n{% set expression %}\n{% for column in column_list %}\nsum({{ column }}){% if not loop.last %} + {% endif %}\n{# the if just allows for column names or literal numbers #}\n{% endfor %} = {% if sum_total is number %}{{sum_total}}{% else %}sum({{ sum_total }}){% endif %}\n{% endset %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=group_by,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.141449, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal": {"name": "test_expect_column_pair_values_to_be_equal", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_equal.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_equal.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_equal", "macro_sql": "{% test expect_column_pair_values_to_be_equal(model,\n                                                        column_A,\n                                                        column_B,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set operator = \"=\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.1419342, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B": {"name": "test_expect_column_pair_values_A_to_be_greater_than_B", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_A_to_be_greater_than_B.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_A_to_be_greater_than_B.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_A_to_be_greater_than_B", "macro_sql": "{% test expect_column_pair_values_A_to_be_greater_than_B(model,\n                                                                column_A,\n                                                                column_B,\n                                                                or_equal=False,\n                                                                row_condition=None\n                                                                ) %}\n\n{% set operator = \">=\" if or_equal else \">\" %}\n{% set expression = column_A ~ \" \" ~ operator ~ \" \" ~ column_B %}\n\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.142485, "supported_languages": null}, "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set": {"name": "test_expect_column_pair_values_to_be_in_set", "resource_type": "macro", "package_name": "dbt_expectations", "path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_in_set.sql", "original_file_path": "macros/schema_tests/multi-column/expect_column_pair_values_to_be_in_set.sql", "unique_id": "macro.dbt_expectations.test_expect_column_pair_values_to_be_in_set", "macro_sql": "{% test expect_column_pair_values_to_be_in_set(model,\n                                                        column_A,\n                                                        column_B,\n                                                        value_pairs_set,\n                                                        row_condition=None\n                                                        ) %}\n\n{% set expression %}\n{% for pair in value_pairs_set %}\n{%- if (pair | length) == 2 %}\n({{ column_A }} = {{ pair[0] }} and {{ column_B }} = {{ pair[1] }}){% if not loop.last %} or {% endif %}\n{% else %}\n{{ exceptions.raise_compiler_error(\n        \"`value_pairs_set` argument for expect_column_pair_values_to_be_in_set test cannot have more than 2 item per element.\n        Got: '\" ~ pair ~ \"'.'\"\n    ) }}\n{% endif %}\n{% endfor %}\n{% endset %}\n{{ dbt_expectations.expression_is_true(model,\n                                        expression=expression,\n                                        group_by_columns=None,\n                                        row_condition=row_condition\n                                        )\n                                        }}\n\n{% endtest %}", "depends_on": {"macros": ["macro.dbt_expectations.expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1754287421.143392, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {"model.nextail.snowflake_warehouse_idle_costs": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_silver", "name": "snowflake_warehouse_idle_costs", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_silver/snowflake_warehouse_idle_costs.sql", "original_file_path": "models/costs/costs_silver/snowflake_warehouse_idle_costs.sql", "unique_id": "model.nextail.snowflake_warehouse_idle_costs", "fqn": ["nextail", "costs", "costs_silver", "snowflake_warehouse_idle_costs"], "alias": "snowflake_warehouse_idle_costs", "checksum": {"name": "sha256", "checksum": "5652d75a3c04769b5ff97df27f69ec33c24a53bc67067d3bc2dc298aa1bbe3a2"}, "config": {"enabled": false, "alias": null, "schema": "nx_costs_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["warehouse_name", "query_date"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["query_date", "warehouse_name"]}, "tags": [], "description": "Daily metrics for Snowflake warehouse usage including running, idle, and turned off states", "columns": {"warehouse_name": {"name": "warehouse_name", "description": "Name of the Snowflake warehouse", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "query_date": {"name": "query_date", "description": "Date for which the metrics are calculated", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "running_seconds": {"name": "running_seconds", "description": "Number of seconds the warehouse was running queries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "idle_seconds": {"name": "idle_seconds", "description": "Number of seconds the warehouse was idle", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "turned_on_seconds": {"name": "turned_on_seconds", "description": "Total seconds the warehouse was turned on (running + idle)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "turned_off_seconds": {"name": "turned_off_seconds", "description": "Number of seconds the warehouse was turned off", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "total_time_hours": {"name": "total_time_hours", "description": "Total time in hours (should be 24 hours per day)", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "running_ratio": {"name": "running_ratio", "description": "Percentage of time the warehouse was running queries", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_silver/_snowflake_warehouse_idle_costs_tests.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_silver", "unique_key": ["warehouse_name", "query_date"], "incremental_strategy": "merge", "enabled": false, "cluster_by": ["query_date", "warehouse_name"]}, "created_at": 1754287421.894202, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_silver.snowflake_warehouse_idle_costs", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key=['warehouse_name', 'query_date'],\n        incremental_strategy='merge',\n        enabled=false,\n        cluster_by=['query_date', 'warehouse_name']\n    )\n}}\n\nWITH\n-- Get all query execution records\nquery_executions AS (\n    SELECT \n        WAREHOUSE_NAME,\n        START_TIME,\n        END_TIME,\n        TOTAL_ELAPSED_TIME,\n        START_TIME::DATE as query_date\n    FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY\n    {% if should_full_refresh() %}\n        where START_TIME >= '{{ var(\"full_refresh_start_date\") }}'\n    {% endif %}\n    {% if is_incremental() %}\n        -- Only get new data since the last run\n        WHERE START_TIME::DATE > (select max(query_date) from {{ this }})\n    {% endif %}\n),\n\n-- Split queries that span across midnight\nsplit_queries AS (\n    SELECT \n        WAREHOUSE_NAME,\n        START_TIME,\n        END_TIME,\n        TOTAL_ELAPSED_TIME,\n        query_date,\n        -- If query spans across midnight, create a record for the next day\n        CASE \n            WHEN END_TIME::DATE > START_TIME::DATE THEN 1\n            ELSE 0\n        END as spans_midnight\n    FROM query_executions\n),\n\n-- Get initial \"turned off\" state for all warehouses\ninitial_states AS (\n    SELECT \n        WAREHOUSE_NAME,\n        query_date,\n        query_date as time_point,\n        'turn_off' AS state_change\n    FROM (SELECT DISTINCT WAREHOUSE_NAME, query_date FROM split_queries)\n),\n\n-- Get query start points (warehouse starts running)\nstart_running_states AS (\n    SELECT \n        WAREHOUSE_NAME,\n        query_date,\n        START_TIME AS time_point,\n        'start_running' AS state_change\n    FROM split_queries\n    \n    UNION ALL\n    \n    -- Add midnight points for queries that span across days\n    SELECT \n        WAREHOUSE_NAME,\n        END_TIME::DATE as query_date,\n        DATE_TRUNC('day', END_TIME) as time_point,\n        'start_running' as state_change\n    FROM split_queries\n    WHERE spans_midnight = 1\n),\n\n-- Get query end points (warehouse becomes idle)\nstart_idle_states AS (\n    SELECT \n        WAREHOUSE_NAME,\n        query_date,\n        LEAST(END_TIME, DATEADD(day, 1, query_date)) AS time_point,\n        'start_idle' AS state_change\n    FROM split_queries\n    \n    UNION ALL\n    \n    -- Add midnight points for queries that span across days\n    SELECT \n        WAREHOUSE_NAME,\n        END_TIME::DATE as query_date,\n        DATE_TRUNC('day', END_TIME) as time_point,\n        'start_idle' as state_change\n    FROM split_queries\n    WHERE spans_midnight = 1\n),\n\n-- Get idle end points (warehouse turns off)\nturn_off_states AS (\n    SELECT \n        WAREHOUSE_NAME,\n        query_date,\n        DATEADD(seconds, 60, LEAST(END_TIME, DATEADD(day, 1, query_date))) AS time_point,\n        'turn_off' AS state_change\n    FROM split_queries\n    \n    UNION ALL\n    \n    -- Add midnight points for queries that span across days\n    SELECT \n        WAREHOUSE_NAME,\n        END_TIME::DATE as query_date,\n        DATEADD(seconds, 60, DATE_TRUNC('day', END_TIME)) as time_point,\n        'turn_off' as state_change\n    FROM split_queries\n    WHERE spans_midnight = 1\n),\n\n-- Combine all state changes\nstate_changes AS (\n    SELECT * FROM initial_states\n    UNION ALL\n    SELECT * FROM start_running_states\n    UNION ALL\n    SELECT * FROM start_idle_states\n    UNION ALL\n    SELECT * FROM turn_off_states\n),\n\n-- Calculate time spent in each state\nstate_durations AS (\n    SELECT \n        WAREHOUSE_NAME,\n        query_date,\n        time_point,\n        state_change,\n        LEAST(\n            LEAD(time_point) OVER (\n                PARTITION BY WAREHOUSE_NAME, query_date\n                ORDER BY time_point\n            ),\n            DATEADD(day, 1, query_date)\n        ) AS next_time_point\n    FROM state_changes\n),\n\n-- Calculate final metrics with safeguards against negative time periods\nfinal_metrics as (\n    SELECT \n        WAREHOUSE_NAME,\n        query_date,\n        SUM(CASE \n            WHEN state_change = 'start_running' \n            AND DATEDIFF(seconds, time_point, COALESCE(next_time_point, DATEADD(day, 1, query_date))) > 0\n            THEN DATEDIFF(seconds, time_point, COALESCE(next_time_point, DATEADD(day, 1, query_date)))\n            ELSE 0 \n        END) AS running_seconds,\n        SUM(CASE \n            WHEN state_change = 'start_idle' \n            AND DATEDIFF(seconds, time_point, COALESCE(next_time_point, DATEADD(day, 1, query_date))) > 0\n            THEN DATEDIFF(seconds, time_point, COALESCE(next_time_point, DATEADD(day, 1, query_date)))\n            ELSE 0 \n        END) AS idle_seconds,\n        running_seconds + idle_seconds as turned_on_seconds,\n        SUM(CASE \n            WHEN state_change = 'turn_off' \n            AND DATEDIFF(seconds, time_point, COALESCE(next_time_point, DATEADD(day, 1, query_date))) > 0\n            THEN DATEDIFF(seconds, time_point, COALESCE(next_time_point, DATEADD(day, 1, query_date)))\n            ELSE 0 \n        END) AS turned_off_seconds,\n        (running_seconds + idle_seconds + turned_off_seconds) / 60.0 / 60.0 as total_time_hours,\n        CASE \n            WHEN turned_on_seconds > 0 \n            THEN running_seconds / turned_on_seconds * 100 \n            ELSE 0 \n        END as running_ratio\n    FROM state_durations\n    GROUP BY WAREHOUSE_NAME, query_date\n    ORDER BY WAREHOUSE_NAME, query_date\n)\n\nselect * from final_metrics", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.stg_query_history": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_costs_bronze", "name": "stg_query_history", "resource_type": "model", "package_name": "nextail", "path": "costs/costs_staging/snowflake/stg_query_history.sql", "original_file_path": "models/costs/costs_staging/snowflake/stg_query_history.sql", "unique_id": "model.nextail.stg_query_history", "fqn": ["nextail", "costs", "costs_staging", "snowflake", "stg_query_history"], "alias": "stg_query_history", "checksum": {"name": "sha256", "checksum": "3ce14039bca09728ff558fed76493882643edab8b2cdf26eeb5909c8bba9c0cd"}, "config": {"enabled": false, "alias": null, "schema": "nx_costs_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "query_id", "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["query_tag"]}, "tags": [], "description": "Mirror of the account_usage.query_history table in the Snowflake database.", "columns": {"query_id": {"name": "query_id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "start_time": {"name": "start_time", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}, "credits_attributed_compute": {"name": "credits_attributed_compute", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "config": {"meta": {}, "tags": []}, "tags": [], "granularity": null, "doc_blocks": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "nextail://models/costs/costs_staging/snowflake/_stg_query_history_tests.yml", "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_costs_bronze", "unique_key": "query_id", "cluster_by": ["query_tag"], "enabled": false}, "created_at": 1754287422.1076522, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_costs_bronze.stg_query_history", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key='query_id',\n        cluster_by=['query_tag'],\n        enabled=false\n    )\n}}\n\nwith\n    source as (\n        select * from {{ source('snowflake', 'query_history') }}\n    )\n\nselect * from source\n{% if is_incremental() %}\nwhere start_time > (select max(start_time) from {{ this }})\n{% endif %}\n{% if should_full_refresh() %}\nwhere start_time >= '{{ var(\"full_refresh_start_date\") }}'\n{% endif %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["snowflake", "query_history"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.br_general": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_sales_engineering_playground", "name": "br_general", "resource_type": "model", "package_name": "nextail", "path": "sales_engineering/br_general.sql", "original_file_path": "models/sales_engineering/br_general.sql", "unique_id": "model.nextail.br_general", "fqn": ["nextail", "sales_engineering", "br_general"], "alias": "br_general", "checksum": {"name": "sha256", "checksum": "2c0476a4e8383dd88ca0981d8159c1cd8ae72c1f312bace1d728d3e80af0bc11"}, "config": {"enabled": false, "alias": null, "schema": "nx_sales_engineering_playground", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_sales_engineering_playground", "enabled": false}, "created_at": 1754287421.644316, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_sales_engineering_playground.br_general", "raw_code": "{{\n    config(\n        materialized='table',\n        enabled=false\n    )\n}}\nWITH selected_date AS (\n    SELECT max(date) as end_date\n    FROM GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.sales\n    WHERE date >= '2025-04-01'\n),\n\nmonthly_sales_data AS (\n    SELECT \n        sk.product_id as prod, \n        month(sl.date) as month, \n        sum(sl.quantity) as monthly_sales, \n        round(avg(sum(sl.quantity)) OVER (PARTITION BY sk.product_id), 1) as avg_monthly_sales\n    FROM GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.sales sl\n    JOIN GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.skus sk ON sk.id = sl.sku_id\n    JOIN selected_date sd ON 1 = 1\n    WHERE date BETWEEN dateadd(YEAR, -1, sd.end_date) AND sd.end_date\n    AND sk.product_id IN (\n        SELECT DISTINCT sk.product_id \n        FROM GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.sales sl \n        JOIN GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.skus sk ON sk.id = sl.sku_id \n        WHERE date >= '2025-04-01'\n    )\n    GROUP BY prod, month\n),\n\nproduct_sales_summary AS (\n    SELECT \n        msd.prod,\n        pr.ref as prod_reference,\n        pr.name as prod_name,\n        fm.name as family,\n        ss.name as season,\n        count(msd.month) as count_month_with_sales,\n        sum(CASE WHEN msd.monthly_sales >= msd.avg_monthly_sales THEN 1 END) as count_month_sales_more_than_avg,\n        sum(msd.monthly_sales) as total_sales,\n        msd.avg_monthly_sales\n    FROM monthly_sales_data msd\n    JOIN GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.products pr ON pr.id = msd.prod\n    JOIN GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.seasons ss ON ss.id = pr.season_id\n    JOIN GINATRICOT_MAIN_PROD_DB.GLOBALDOMAIN_PUBLIC.families fm ON fm.id = pr.family_id\n    GROUP BY msd.prod, prod_reference, prod_name, family, season, msd.avg_monthly_sales\n)\n\nSELECT \n    prod_reference,\n    prod_name,\n    family,\n    season,\n    count_month_with_sales,\n    count_month_sales_more_than_avg,\n    total_sales,\n    avg_monthly_sales\nFROM product_sales_summary\nORDER BY family, prod_reference, count_month_with_sales, count_month_sales_more_than_avg DESC", "doc_blocks": [], "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.br_general_metrics": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_sales_engineering_playground", "name": "br_general_metrics", "resource_type": "model", "package_name": "nextail", "path": "sales_engineering/br_general_metrics.sql", "original_file_path": "models/sales_engineering/br_general_metrics.sql", "unique_id": "model.nextail.br_general_metrics", "fqn": ["nextail", "sales_engineering", "br_general_metrics"], "alias": "br_general_metrics", "checksum": {"name": "sha256", "checksum": "20eeebf2ad4b011f00738ef91f36bc572cf21f6998947bcfa15915ab0cf8d8ff"}, "config": {"enabled": false, "alias": null, "schema": "nx_sales_engineering_playground", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["tenant", "year", "store_id", "product_id"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant", "year"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_sales_engineering_playground", "unique_key": ["tenant", "year", "store_id", "product_id"], "cluster_by": ["tenant", "year"], "incremental_strategy": "merge", "enabled": false}, "created_at": 1754287421.646944, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_sales_engineering_playground.br_general_metrics", "raw_code": "{{ config(\n    materialized='incremental',\n    unique_key=['tenant', 'year', 'store_id', 'product_id'],\n    cluster_by=['tenant', 'year'],\n    incremental_strategy='merge',\n    enabled=false\n) }}\n\n{% if is_incremental() %}\n    {% set min_date = \"SELECT DATEADD(YEAR, -1, MAX(date)) FROM \" ~ this %}\n{% else %}\n    {% set min_date = \"SELECT MIN(date) FROM \" ~ ref('sales') %}\n{% endif %}\n\nWITH sales_with_skus AS (\n    SELECT \n        sk.tenant,\n        sl.store_id,\n        sk.product_id,\n        sl.date,\n        YEAR(sl.date) AS year,\n        sl.quantity AS sales_quantity\n    FROM {{ ref('sales') }} sl\n    JOIN {{ ref('skus') }} sk \n        ON sk.id = sl.sku_id\n        AND sk.tenant = sl.tenant\n    {% if is_incremental() %}\n    WHERE sl.date >= ({{ min_date }})\n    {% endif %}\n),\n\nstocks_aggregated AS (\n    SELECT \n        sk.tenant,\n        ssi.store_id,\n        ssi.sku_id,\n        ssi.date,\n        SUM(ssi.stock_commercial) AS stock_quantity\n    FROM {{ ref('store_stock_items') }} ssi\n    JOIN {{ ref('skus') }} sk ON sk.id = ssi.sku_id\n        AND sk.tenant = ssi.tenant\n    {% if is_incremental() %}\n    WHERE ssi.date >= ({{ min_date }})\n    {% endif %}\n    GROUP BY sk.tenant, ssi.store_id, ssi.sku_id, ssi.date\n),\n\nwarehouse_aggregated AS (\n    SELECT \n        sk.tenant,\n        wsi.sku_id,\n        wsi.date,\n        SUM(wsi.quantity) AS warehouse_quantity\n    FROM {{ ref('warehouse_stock_items') }} wsi\n    JOIN {{ ref('skus') }} sk ON sk.id = wsi.sku_id\n        AND sk.tenant = wsi.tenant\n    {% if is_incremental() %}\n    WHERE wsi.date >= ({{ min_date }})\n    {% endif %}\n    GROUP BY sk.tenant, wsi.sku_id, wsi.date\n),\n\nbase_metrics AS (\n    SELECT \n        s.tenant,\n        s.store_id,\n        s.product_id,\n        s.date,\n        s.year,\n        s.sales_quantity,\n        COALESCE(sa.stock_quantity, 0) AS stock_quantity,\n        COALESCE(wa.warehouse_quantity, 0) AS warehouse_quantity\n    FROM sales_with_skus s\n    LEFT JOIN stocks_aggregated sa\n        ON sa.tenant = s.tenant\n        AND sa.store_id = s.store_id\n        AND sa.sku_id = s.sku_id\n        AND sa.date = s.date\n    LEFT JOIN warehouse_aggregated wa\n        ON wa.tenant = s.tenant\n        AND wa.sku_id = s.sku_id\n        AND wa.date = s.date\n),\n\nmetrics_by_period AS (\n    SELECT \n        tenant,\n        store_id,\n        product_id,\n        year,\n        SUM(sales_quantity) AS total_sales,\n        ROUND(AVG(stock_quantity), 0) AS avg_stocks,\n        LAST_VALUE(stock_quantity) OVER (\n            PARTITION BY tenant, store_id, product_id, year\n            ORDER BY date\n            ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING\n        ) AS end_stocks,\n        SUM(warehouse_quantity) AS warehouse_stocks,\n        SUM(sales_quantity) AS product_sales\n    FROM base_metrics\n    GROUP BY tenant, store_id, product_id, year, stock_quantity, date\n),\n\nfinal_metrics AS (\n    SELECT \n        tenant,\n        year,\n        store_id,\n        product_id,\n        total_sales AS total_sales_in_units,\n        avg_stocks AS avg_daily_stocks,\n        end_stocks,\n        warehouse_stocks AS end_warehouse_stocks,\n        total_sales + end_stocks + warehouse_stocks AS buy,\n        CASE \n            WHEN product_sales >= 500 THEN 500\n            WHEN product_sales >= 200 THEN 200\n            WHEN product_sales >= 100 THEN 100\n            WHEN product_sales >= 50 THEN 50\n            WHEN product_sales >= 20 THEN 20\n            WHEN product_sales >= 10 THEN 10\n            WHEN product_sales >= 5 THEN 5\n            WHEN product_sales >= 1 THEN 1\n            ELSE 0\n        END AS active_threshold\n    FROM metrics_by_period\n)\n\nSELECT \n    tenant,\n    year,\n    store_id,\n    product_id,\n    total_sales_in_units,\n    avg_daily_stocks,\n    end_stocks,\n    end_warehouse_stocks,\n    buy,\n    ROUND(100 * total_sales_in_units / NULLIF(total_sales_in_units + end_stocks, 0), 2) || '%' AS sell_through,\n    ROUND(100 * total_sales_in_units / NULLIF(total_sales_in_units + avg_daily_stocks, 0), 2) || '%' AS avg_sell_through,\n    ROUND(100 * total_sales_in_units / NULLIF(total_sales_in_units + end_stocks + end_warehouse_stocks, 0), 2) || '%' AS sell_out,\n    active_threshold\nFROM final_metrics\nORDER BY tenant, year, store_id, product_id", "doc_blocks": [], "language": "sql", "refs": [{"name": "sales", "package": null, "version": null}, {"name": "sales", "package": null, "version": null}, {"name": "skus", "package": null, "version": null}, {"name": "store_stock_items", "package": null, "version": null}, {"name": "skus", "package": null, "version": null}, {"name": "warehouse_stock_items", "package": null, "version": null}, {"name": "skus", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.br_general_product_typology": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_sales_engineering_playground", "name": "br_general_product_typology", "resource_type": "model", "package_name": "nextail", "path": "sales_engineering/br_general_product_typology.sql", "original_file_path": "models/sales_engineering/br_general_product_typology.sql", "unique_id": "model.nextail.br_general_product_typology", "fqn": ["nextail", "sales_engineering", "br_general_product_typology"], "alias": "br_general_product_typology", "checksum": {"name": "sha256", "checksum": "b6c55ce3c630943f963f05915bfdf972dc07612259bd4b48f3ad48d4239339f5"}, "config": {"enabled": false, "alias": null, "schema": "nx_sales_engineering_playground", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["tenant", "prod_reference", "month"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"], "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "2 hours", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "schema": "nx_sales_engineering_playground", "on_configuration_change": "apply", "target_lag": "2 hours", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["tenant", "prod_reference", "month"], "cluster_by": ["tenant"], "enabled": false}, "created_at": 1754287421.652289, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_sales_engineering_playground.br_general_product_typology", "raw_code": "{{ config\n    (\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='2 hours',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=[\"tenant\", \"prod_reference\", \"month\"],\n        cluster_by=[\"tenant\"],\n        enabled=false\n    )\n}}\n\nWITH selected_date AS (\n    SELECT max(date) as end_date\n    FROM {{ ref('sales') }}\n),\n\nrelevant_products AS (\n    SELECT DISTINCT \n        sl.tenant,\n        sk.product_id\n    FROM {{ ref('sales') }} sl \n    JOIN {{ ref('skus') }} sk ON sk.id = sl.sku_id AND sk.tenant = sl.tenant\n),\n\nmonthly_sales_data AS (\n    SELECT \n        sl.tenant,\n        sk.product_id as prod, \n        month(sl.date) as month, \n        sum(sl.quantity) as monthly_sales, \n        round(avg(sum(sl.quantity)) OVER (PARTITION BY sl.tenant, sk.product_id), 1) as avg_monthly_sales\n    FROM {{ ref('sales') }} sl\n    JOIN {{ ref('skus') }} sk ON sk.id = sl.sku_id AND sk.tenant = sl.tenant\n    JOIN selected_date sd ON 1 = 1\n    JOIN relevant_products rp ON rp.tenant = sl.tenant AND rp.product_id = sk.product_id\n    WHERE sl.date BETWEEN dateadd(YEAR, -1, sd.end_date) AND sd.end_date\n    GROUP BY sl.tenant, prod, month\n),\n\nproduct_sales_summary AS (\n    SELECT \n        msd.tenant,\n        msd.prod,\n        pr.ref as prod_reference,\n        pr.name as prod_name,\n        fm.name as family,\n        ss.name as season,\n        count(msd.month) as count_month_with_sales,\n        sum(CASE WHEN msd.monthly_sales >= msd.avg_monthly_sales THEN 1 END) as count_month_sales_more_than_avg,\n        sum(msd.monthly_sales) as total_sales,\n        msd.avg_monthly_sales\n    FROM monthly_sales_data msd\n    JOIN {{ ref('products') }} pr ON pr.id = msd.prod AND pr.tenant = msd.tenant\n    JOIN {{ ref('seasons') }} ss ON ss.id = pr.season_id AND ss.tenant = msd.tenant\n    JOIN {{ ref('families') }} fm ON fm.id = pr.family_id AND fm.tenant = msd.tenant\n    GROUP BY msd.tenant, msd.prod, prod_reference, prod_name, family, season, msd.avg_monthly_sales\n)\n\nSELECT \n    tenant,\n    prod_reference,\n    prod_name,\n    family,\n    season,\n    count_month_with_sales,\n    count_month_sales_more_than_avg,\n    total_sales,\n    avg_monthly_sales\nFROM product_sales_summary", "doc_blocks": [], "language": "sql", "refs": [{"name": "sales", "package": null, "version": null}, {"name": "sales", "package": null, "version": null}, {"name": "skus", "package": null, "version": null}, {"name": "sales", "package": null, "version": null}, {"name": "skus", "package": null, "version": null}, {"name": "products", "package": null, "version": null}, {"name": "seasons", "package": null, "version": null}, {"name": "families", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.store_transfers_execution_aggregates": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "store_transfers_execution_aggregates", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/store_transfers_execution_aggregates.sql", "original_file_path": "models/internal/internal_staging/store_transfers_execution_aggregates.sql", "unique_id": "model.nextail.store_transfers_execution_aggregates", "fqn": ["nextail", "internal", "internal_staging", "store_transfers_execution_aggregates"], "alias": "store_transfers_execution_aggregates", "checksum": {"name": "sha256", "checksum": "dfeed72580bf82bf3687b819a9e17aa04a2ab0df93d741013b56f8d12fa0c35d"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.657165, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.store_transfers_execution_aggregates", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'store_transfers_execution_aggregates') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "store_transfers_execution_aggregates"], ["BIMANI_globaldomain_public", "store_transfers_execution_aggregates"], ["BZB_globaldomain_public", "store_transfers_execution_aggregates"], ["CALLIOPE_globaldomain_public", "store_transfers_execution_aggregates"], ["DCK_globaldomain_public", "store_transfers_execution_aggregates"], ["DUB_globaldomain_public", "store_transfers_execution_aggregates"], ["ECIBOLSOSMMEE_globaldomain_public", "store_transfers_execution_aggregates"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "store_transfers_execution_aggregates"], ["ECIEASYWEARELLA_globaldomain_public", "store_transfers_execution_aggregates"], ["ECIGAP_globaldomain_public", "store_transfers_execution_aggregates"], ["ECIKIDS_globaldomain_public", "store_transfers_execution_aggregates"], ["ECILLOYDSMEN_globaldomain_public", "store_transfers_execution_aggregates"], ["ECIZAPATERIASENORAS_globaldomain_public", "store_transfers_execution_aggregates"], ["ECRU_globaldomain_public", "store_transfers_execution_aggregates"], ["ETHNICITY_globaldomain_public", "store_transfers_execution_aggregates"], ["FLYINGTIGER_globaldomain_public", "store_transfers_execution_aggregates"], ["FOOTGEAR_globaldomain_public", "store_transfers_execution_aggregates"], ["FOREVERNEW_globaldomain_public", "store_transfers_execution_aggregates"], ["GINATRICOT_globaldomain_public", "store_transfers_execution_aggregates"], ["GSTARRETAIL_globaldomain_public", "store_transfers_execution_aggregates"], ["GSTAR_globaldomain_public", "store_transfers_execution_aggregates"], ["GUESSEMEA_globaldomain_public", "store_transfers_execution_aggregates"], ["GUESSUS_globaldomain_public", "store_transfers_execution_aggregates"], ["HACKETT_globaldomain_public", "store_transfers_execution_aggregates"], ["JOTT_globaldomain_public", "store_transfers_execution_aggregates"], ["JULES_globaldomain_public", "store_transfers_execution_aggregates"], ["MAAG_globaldomain_public", "store_transfers_execution_aggregates"], ["MERKAL_globaldomain_public", "store_transfers_execution_aggregates"], ["METROBRANDS_globaldomain_public", "store_transfers_execution_aggregates"], ["MFG_globaldomain_public", "store_transfers_execution_aggregates"], ["MOUNTAINWAREHOUSE_globaldomain_public", "store_transfers_execution_aggregates"], ["PEPE_globaldomain_public", "store_transfers_execution_aggregates"], ["RIVERISLAND_globaldomain_public", "store_transfers_execution_aggregates"], ["SCOTTA_globaldomain_public", "store_transfers_execution_aggregates"], ["SILBON_globaldomain_public", "store_transfers_execution_aggregates"], ["SFERABASICMAN_globaldomain_public", "store_transfers_execution_aggregates"], ["SPORTSEMOTION_globaldomain_public", "store_transfers_execution_aggregates"], ["SPORTSTREET_globaldomain_public", "store_transfers_execution_aggregates"], ["SUAREZ_globaldomain_public", "store_transfers_execution_aggregates"], ["TERRANOVA_globaldomain_public", "store_transfers_execution_aggregates"], ["TVOE_globaldomain_public", "store_transfers_execution_aggregates"], ["VALEXTRA_globaldomain_public", "store_transfers_execution_aggregates"], ["VILET_globaldomain_public", "store_transfers_execution_aggregates"], ["WHITESTUFF_globaldomain_public", "store_transfers_execution_aggregates"], ["WOOLRICH_globaldomain_public", "store_transfers_execution_aggregates"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.liquibase_databasechangelog": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "liquibase_databasechangelog", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/liquibase_databasechangelog.sql", "original_file_path": "models/internal/internal_staging/liquibase_databasechangelog.sql", "unique_id": "model.nextail.liquibase_databasechangelog", "fqn": ["nextail", "internal", "internal_staging", "liquibase_databasechangelog"], "alias": "liquibase_databasechangelog", "checksum": {"name": "sha256", "checksum": "3bc98f09e302287d49839175695edaf7f2524b6dee7845f5ffef4bcf804cae83"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.6638138, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.liquibase_databasechangelog", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'databasechangelog') }}\n\n    {% if is_incremental() %}\n        where DATEEXECUTED > (select max(DATEEXECUTED) from {{ this }}) and tenant = '{{ tenant }}'\n    {% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "databasechangelog"], ["BIMANI_globaldomain_public", "databasechangelog"], ["BZB_globaldomain_public", "databasechangelog"], ["CALLIOPE_globaldomain_public", "databasechangelog"], ["DCK_globaldomain_public", "databasechangelog"], ["DUB_globaldomain_public", "databasechangelog"], ["ECIBOLSOSMMEE_globaldomain_public", "databasechangelog"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "databasechangelog"], ["ECIEASYWEARELLA_globaldomain_public", "databasechangelog"], ["ECIGAP_globaldomain_public", "databasechangelog"], ["ECIKIDS_globaldomain_public", "databasechangelog"], ["ECILLOYDSMEN_globaldomain_public", "databasechangelog"], ["ECIZAPATERIASENORAS_globaldomain_public", "databasechangelog"], ["ECRU_globaldomain_public", "databasechangelog"], ["ETHNICITY_globaldomain_public", "databasechangelog"], ["FLYINGTIGER_globaldomain_public", "databasechangelog"], ["FOOTGEAR_globaldomain_public", "databasechangelog"], ["FOREVERNEW_globaldomain_public", "databasechangelog"], ["GINATRICOT_globaldomain_public", "databasechangelog"], ["GSTARRETAIL_globaldomain_public", "databasechangelog"], ["GSTAR_globaldomain_public", "databasechangelog"], ["GUESSEMEA_globaldomain_public", "databasechangelog"], ["GUESSUS_globaldomain_public", "databasechangelog"], ["HACKETT_globaldomain_public", "databasechangelog"], ["JOTT_globaldomain_public", "databasechangelog"], ["JULES_globaldomain_public", "databasechangelog"], ["MAAG_globaldomain_public", "databasechangelog"], ["MERKAL_globaldomain_public", "databasechangelog"], ["METROBRANDS_globaldomain_public", "databasechangelog"], ["MFG_globaldomain_public", "databasechangelog"], ["MOUNTAINWAREHOUSE_globaldomain_public", "databasechangelog"], ["PEPE_globaldomain_public", "databasechangelog"], ["RIVERISLAND_globaldomain_public", "databasechangelog"], ["SCOTTA_globaldomain_public", "databasechangelog"], ["SILBON_globaldomain_public", "databasechangelog"], ["SFERABASICMAN_globaldomain_public", "databasechangelog"], ["SPORTSEMOTION_globaldomain_public", "databasechangelog"], ["SPORTSTREET_globaldomain_public", "databasechangelog"], ["SUAREZ_globaldomain_public", "databasechangelog"], ["TERRANOVA_globaldomain_public", "databasechangelog"], ["TVOE_globaldomain_public", "databasechangelog"], ["VALEXTRA_globaldomain_public", "databasechangelog"], ["VILET_globaldomain_public", "databasechangelog"], ["WHITESTUFF_globaldomain_public", "databasechangelog"], ["WOOLRICH_globaldomain_public", "databasechangelog"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.fa_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "fa_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/fa_executions.sql", "original_file_path": "models/internal/internal_staging/fa_executions.sql", "unique_id": "model.nextail.fa_executions", "fqn": ["nextail", "internal", "internal_staging", "fa_executions"], "alias": "fa_executions", "checksum": {"name": "sha256", "checksum": "75b113a78e65d4d120ca267fe9cba8c25c393bc4fa91e89cfd47fd869e85e836"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "cluster_by": ["tenant"]}, "created_at": 1754287421.669755, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.fa_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant\nfrom {{ source(tenant + '_globaldomain_public', 'first_allocation_execution') }}\n\n-- incremental logic\n{% if is_incremental() %}\nwhere updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "first_allocation_execution"], ["BIMANI_globaldomain_public", "first_allocation_execution"], ["BZB_globaldomain_public", "first_allocation_execution"], ["CALLIOPE_globaldomain_public", "first_allocation_execution"], ["DCK_globaldomain_public", "first_allocation_execution"], ["DUB_globaldomain_public", "first_allocation_execution"], ["ECIBOLSOSMMEE_globaldomain_public", "first_allocation_execution"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "first_allocation_execution"], ["ECIEASYWEARELLA_globaldomain_public", "first_allocation_execution"], ["ECIGAP_globaldomain_public", "first_allocation_execution"], ["ECIKIDS_globaldomain_public", "first_allocation_execution"], ["ECILLOYDSMEN_globaldomain_public", "first_allocation_execution"], ["ECIZAPATERIASENORAS_globaldomain_public", "first_allocation_execution"], ["ECRU_globaldomain_public", "first_allocation_execution"], ["ETHNICITY_globaldomain_public", "first_allocation_execution"], ["FLYINGTIGER_globaldomain_public", "first_allocation_execution"], ["FOOTGEAR_globaldomain_public", "first_allocation_execution"], ["FOREVERNEW_globaldomain_public", "first_allocation_execution"], ["GINATRICOT_globaldomain_public", "first_allocation_execution"], ["GSTARRETAIL_globaldomain_public", "first_allocation_execution"], ["GSTAR_globaldomain_public", "first_allocation_execution"], ["GUESSEMEA_globaldomain_public", "first_allocation_execution"], ["GUESSUS_globaldomain_public", "first_allocation_execution"], ["HACKETT_globaldomain_public", "first_allocation_execution"], ["JOTT_globaldomain_public", "first_allocation_execution"], ["JULES_globaldomain_public", "first_allocation_execution"], ["MAAG_globaldomain_public", "first_allocation_execution"], ["MERKAL_globaldomain_public", "first_allocation_execution"], ["METROBRANDS_globaldomain_public", "first_allocation_execution"], ["MFG_globaldomain_public", "first_allocation_execution"], ["MOUNTAINWAREHOUSE_globaldomain_public", "first_allocation_execution"], ["PEPE_globaldomain_public", "first_allocation_execution"], ["RIVERISLAND_globaldomain_public", "first_allocation_execution"], ["SCOTTA_globaldomain_public", "first_allocation_execution"], ["SILBON_globaldomain_public", "first_allocation_execution"], ["SFERABASICMAN_globaldomain_public", "first_allocation_execution"], ["SPORTSEMOTION_globaldomain_public", "first_allocation_execution"], ["SPORTSTREET_globaldomain_public", "first_allocation_execution"], ["SUAREZ_globaldomain_public", "first_allocation_execution"], ["TERRANOVA_globaldomain_public", "first_allocation_execution"], ["TVOE_globaldomain_public", "first_allocation_execution"], ["VALEXTRA_globaldomain_public", "first_allocation_execution"], ["VILET_globaldomain_public", "first_allocation_execution"], ["WHITESTUFF_globaldomain_public", "first_allocation_execution"], ["WOOLRICH_globaldomain_public", "first_allocation_execution"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.products": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "products", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/products.sql", "original_file_path": "models/internal/internal_staging/products.sql", "unique_id": "model.nextail.products", "fqn": ["nextail", "internal", "internal_staging", "products"], "alias": "products", "checksum": {"name": "sha256", "checksum": "8358ee951e848be2ac9926feb8d084ab50261ec5572da6c7710af9962c346928"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.677897, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.products", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'products') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "products"], ["BIMANI_globaldomain_public", "products"], ["BZB_globaldomain_public", "products"], ["CALLIOPE_globaldomain_public", "products"], ["DCK_globaldomain_public", "products"], ["DUB_globaldomain_public", "products"], ["ECIBOLSOSMMEE_globaldomain_public", "products"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "products"], ["ECIEASYWEARELLA_globaldomain_public", "products"], ["ECIGAP_globaldomain_public", "products"], ["ECIKIDS_globaldomain_public", "products"], ["ECILLOYDSMEN_globaldomain_public", "products"], ["ECIZAPATERIASENORAS_globaldomain_public", "products"], ["ECRU_globaldomain_public", "products"], ["ETHNICITY_globaldomain_public", "products"], ["FLYINGTIGER_globaldomain_public", "products"], ["FOOTGEAR_globaldomain_public", "products"], ["FOREVERNEW_globaldomain_public", "products"], ["GINATRICOT_globaldomain_public", "products"], ["GSTARRETAIL_globaldomain_public", "products"], ["GSTAR_globaldomain_public", "products"], ["GUESSEMEA_globaldomain_public", "products"], ["GUESSUS_globaldomain_public", "products"], ["HACKETT_globaldomain_public", "products"], ["JOTT_globaldomain_public", "products"], ["JULES_globaldomain_public", "products"], ["MAAG_globaldomain_public", "products"], ["MERKAL_globaldomain_public", "products"], ["METROBRANDS_globaldomain_public", "products"], ["MFG_globaldomain_public", "products"], ["MOUNTAINWAREHOUSE_globaldomain_public", "products"], ["PEPE_globaldomain_public", "products"], ["RIVERISLAND_globaldomain_public", "products"], ["SCOTTA_globaldomain_public", "products"], ["SILBON_globaldomain_public", "products"], ["SFERABASICMAN_globaldomain_public", "products"], ["SPORTSEMOTION_globaldomain_public", "products"], ["SPORTSTREET_globaldomain_public", "products"], ["SUAREZ_globaldomain_public", "products"], ["TERRANOVA_globaldomain_public", "products"], ["TVOE_globaldomain_public", "products"], ["VALEXTRA_globaldomain_public", "products"], ["VILET_globaldomain_public", "products"], ["WHITESTUFF_globaldomain_public", "products"], ["WOOLRICH_globaldomain_public", "products"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.skus": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "skus", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/skus.sql", "original_file_path": "models/internal/internal_staging/skus.sql", "unique_id": "model.nextail.skus", "fqn": ["nextail", "internal", "internal_staging", "skus"], "alias": "skus", "checksum": {"name": "sha256", "checksum": "a2cc067fac67f7332ca8b27efe1a4752d49ff58c7a436fb4dd8e0c5566372e4a"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.683685, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.skus", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'skus') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "skus"], ["BIMANI_globaldomain_public", "skus"], ["BZB_globaldomain_public", "skus"], ["CALLIOPE_globaldomain_public", "skus"], ["DCK_globaldomain_public", "skus"], ["DUB_globaldomain_public", "skus"], ["ECIBOLSOSMMEE_globaldomain_public", "skus"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "skus"], ["ECIEASYWEARELLA_globaldomain_public", "skus"], ["ECIGAP_globaldomain_public", "skus"], ["ECIKIDS_globaldomain_public", "skus"], ["ECILLOYDSMEN_globaldomain_public", "skus"], ["ECIZAPATERIASENORAS_globaldomain_public", "skus"], ["ECRU_globaldomain_public", "skus"], ["ETHNICITY_globaldomain_public", "skus"], ["FLYINGTIGER_globaldomain_public", "skus"], ["FOOTGEAR_globaldomain_public", "skus"], ["FOREVERNEW_globaldomain_public", "skus"], ["GINATRICOT_globaldomain_public", "skus"], ["GSTARRETAIL_globaldomain_public", "skus"], ["GSTAR_globaldomain_public", "skus"], ["GUESSEMEA_globaldomain_public", "skus"], ["GUESSUS_globaldomain_public", "skus"], ["HACKETT_globaldomain_public", "skus"], ["JOTT_globaldomain_public", "skus"], ["JULES_globaldomain_public", "skus"], ["MAAG_globaldomain_public", "skus"], ["MERKAL_globaldomain_public", "skus"], ["METROBRANDS_globaldomain_public", "skus"], ["MFG_globaldomain_public", "skus"], ["MOUNTAINWAREHOUSE_globaldomain_public", "skus"], ["PEPE_globaldomain_public", "skus"], ["RIVERISLAND_globaldomain_public", "skus"], ["SCOTTA_globaldomain_public", "skus"], ["SILBON_globaldomain_public", "skus"], ["SFERABASICMAN_globaldomain_public", "skus"], ["SPORTSEMOTION_globaldomain_public", "skus"], ["SPORTSTREET_globaldomain_public", "skus"], ["SUAREZ_globaldomain_public", "skus"], ["TERRANOVA_globaldomain_public", "skus"], ["TVOE_globaldomain_public", "skus"], ["VALEXTRA_globaldomain_public", "skus"], ["VILET_globaldomain_public", "skus"], ["WHITESTUFF_globaldomain_public", "skus"], ["WOOLRICH_globaldomain_public", "skus"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.warehouse_stock_items": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "warehouse_stock_items", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/warehouse_stock_items.sql", "original_file_path": "models/internal/internal_staging/warehouse_stock_items.sql", "unique_id": "model.nextail.warehouse_stock_items", "fqn": ["nextail", "internal", "internal_staging", "warehouse_stock_items"], "alias": "warehouse_stock_items", "checksum": {"name": "sha256", "checksum": "5e4c6c18e3f3aaf9b3419286554482cd09ae91069d064d008042e29961aac085"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["warehouse_id", "sku_id", "date", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["warehouse_id", "sku_id", "date", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.689974, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.warehouse_stock_items", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['warehouse_id', 'sku_id', 'date', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant'],\n        enabled = false\n    )\n}}\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'warehouse_stock_items') }}\n\n    {% if is_incremental() %}\n        where date > (select max(date) from {{ this }}) and tenant = '{{ tenant }}'\n    {% endif %}\n    {% if should_full_refresh() %}\n        -- uncomment this to remove the limit of the full refresh to a certain date\n        where date >= '{{ var(\"full_refresh_start_date\") }}'\n    {% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "warehouse_stock_items"], ["BIMANI_globaldomain_public", "warehouse_stock_items"], ["BZB_globaldomain_public", "warehouse_stock_items"], ["CALLIOPE_globaldomain_public", "warehouse_stock_items"], ["DCK_globaldomain_public", "warehouse_stock_items"], ["DUB_globaldomain_public", "warehouse_stock_items"], ["ECIBOLSOSMMEE_globaldomain_public", "warehouse_stock_items"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "warehouse_stock_items"], ["ECIEASYWEARELLA_globaldomain_public", "warehouse_stock_items"], ["ECIGAP_globaldomain_public", "warehouse_stock_items"], ["ECIKIDS_globaldomain_public", "warehouse_stock_items"], ["ECILLOYDSMEN_globaldomain_public", "warehouse_stock_items"], ["ECIZAPATERIASENORAS_globaldomain_public", "warehouse_stock_items"], ["ECRU_globaldomain_public", "warehouse_stock_items"], ["ETHNICITY_globaldomain_public", "warehouse_stock_items"], ["FLYINGTIGER_globaldomain_public", "warehouse_stock_items"], ["FOOTGEAR_globaldomain_public", "warehouse_stock_items"], ["FOREVERNEW_globaldomain_public", "warehouse_stock_items"], ["GINATRICOT_globaldomain_public", "warehouse_stock_items"], ["GSTARRETAIL_globaldomain_public", "warehouse_stock_items"], ["GSTAR_globaldomain_public", "warehouse_stock_items"], ["GUESSEMEA_globaldomain_public", "warehouse_stock_items"], ["GUESSUS_globaldomain_public", "warehouse_stock_items"], ["HACKETT_globaldomain_public", "warehouse_stock_items"], ["JOTT_globaldomain_public", "warehouse_stock_items"], ["JULES_globaldomain_public", "warehouse_stock_items"], ["MAAG_globaldomain_public", "warehouse_stock_items"], ["MERKAL_globaldomain_public", "warehouse_stock_items"], ["METROBRANDS_globaldomain_public", "warehouse_stock_items"], ["MFG_globaldomain_public", "warehouse_stock_items"], ["MOUNTAINWAREHOUSE_globaldomain_public", "warehouse_stock_items"], ["PEPE_globaldomain_public", "warehouse_stock_items"], ["RIVERISLAND_globaldomain_public", "warehouse_stock_items"], ["SCOTTA_globaldomain_public", "warehouse_stock_items"], ["SILBON_globaldomain_public", "warehouse_stock_items"], ["SFERABASICMAN_globaldomain_public", "warehouse_stock_items"], ["SPORTSEMOTION_globaldomain_public", "warehouse_stock_items"], ["SPORTSTREET_globaldomain_public", "warehouse_stock_items"], ["SUAREZ_globaldomain_public", "warehouse_stock_items"], ["TERRANOVA_globaldomain_public", "warehouse_stock_items"], ["TVOE_globaldomain_public", "warehouse_stock_items"], ["VALEXTRA_globaldomain_public", "warehouse_stock_items"], ["VILET_globaldomain_public", "warehouse_stock_items"], ["WHITESTUFF_globaldomain_public", "warehouse_stock_items"], ["WOOLRICH_globaldomain_public", "warehouse_stock_items"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.category_item_included": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "category_item_included", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/category_item_included.sql", "original_file_path": "models/internal/internal_staging/category_item_included.sql", "unique_id": "model.nextail.category_item_included", "fqn": ["nextail", "internal", "internal_staging", "category_item_included"], "alias": "category_item_included", "checksum": {"name": "sha256", "checksum": "bfcb0a65bd311b7a9705e1d816d8ef4d31b545efcec3ec42d14c1da916ddb8f3"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["category_id", "item_id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["category_id", "item_id", "tenant"], "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.6972969, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.category_item_included", "raw_code": "{{\n    config(\n        materialized = 'table',\n        unique_key = ['category_id', 'item_id', 'tenant'],\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant'],\n    )\n}}\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'category_item_included') }}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "category_item_included"], ["BIMANI_globaldomain_public", "category_item_included"], ["BZB_globaldomain_public", "category_item_included"], ["CALLIOPE_globaldomain_public", "category_item_included"], ["DCK_globaldomain_public", "category_item_included"], ["DUB_globaldomain_public", "category_item_included"], ["ECIBOLSOSMMEE_globaldomain_public", "category_item_included"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "category_item_included"], ["ECIEASYWEARELLA_globaldomain_public", "category_item_included"], ["ECIGAP_globaldomain_public", "category_item_included"], ["ECIKIDS_globaldomain_public", "category_item_included"], ["ECILLOYDSMEN_globaldomain_public", "category_item_included"], ["ECIZAPATERIASENORAS_globaldomain_public", "category_item_included"], ["ECRU_globaldomain_public", "category_item_included"], ["ETHNICITY_globaldomain_public", "category_item_included"], ["FLYINGTIGER_globaldomain_public", "category_item_included"], ["FOOTGEAR_globaldomain_public", "category_item_included"], ["FOREVERNEW_globaldomain_public", "category_item_included"], ["GINATRICOT_globaldomain_public", "category_item_included"], ["GSTARRETAIL_globaldomain_public", "category_item_included"], ["GSTAR_globaldomain_public", "category_item_included"], ["GUESSEMEA_globaldomain_public", "category_item_included"], ["GUESSUS_globaldomain_public", "category_item_included"], ["HACKETT_globaldomain_public", "category_item_included"], ["JOTT_globaldomain_public", "category_item_included"], ["JULES_globaldomain_public", "category_item_included"], ["MAAG_globaldomain_public", "category_item_included"], ["MERKAL_globaldomain_public", "category_item_included"], ["METROBRANDS_globaldomain_public", "category_item_included"], ["MFG_globaldomain_public", "category_item_included"], ["MOUNTAINWAREHOUSE_globaldomain_public", "category_item_included"], ["PEPE_globaldomain_public", "category_item_included"], ["RIVERISLAND_globaldomain_public", "category_item_included"], ["SCOTTA_globaldomain_public", "category_item_included"], ["SILBON_globaldomain_public", "category_item_included"], ["SFERABASICMAN_globaldomain_public", "category_item_included"], ["SPORTSEMOTION_globaldomain_public", "category_item_included"], ["SPORTSTREET_globaldomain_public", "category_item_included"], ["SUAREZ_globaldomain_public", "category_item_included"], ["TERRANOVA_globaldomain_public", "category_item_included"], ["TVOE_globaldomain_public", "category_item_included"], ["VALEXTRA_globaldomain_public", "category_item_included"], ["VILET_globaldomain_public", "category_item_included"], ["WHITESTUFF_globaldomain_public", "category_item_included"], ["WOOLRICH_globaldomain_public", "category_item_included"]], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.category": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "category", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/category.sql", "original_file_path": "models/internal/internal_staging/category.sql", "unique_id": "model.nextail.category", "fqn": ["nextail", "internal", "internal_staging", "category"], "alias": "category", "checksum": {"name": "sha256", "checksum": "3f03e35650da91f9e27a8ceeb3ed6930c20270cc8d37913eedeac8d8fc1a3a05"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "cluster_by": ["tenant"]}, "created_at": 1754287421.702153, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.category", "raw_code": "{{\n    config(\n        materialized = 'table',\n        unique_key = ['id', 'tenant'],\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant\nfrom {{ source(tenant + '_globaldomain_public', 'category') }}\n\n-- can't use incremental logic here because the category table does not use a timestamp to track changes\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "category"], ["BIMANI_globaldomain_public", "category"], ["BZB_globaldomain_public", "category"], ["CALLIOPE_globaldomain_public", "category"], ["DCK_globaldomain_public", "category"], ["DUB_globaldomain_public", "category"], ["ECIBOLSOSMMEE_globaldomain_public", "category"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "category"], ["ECIEASYWEARELLA_globaldomain_public", "category"], ["ECIGAP_globaldomain_public", "category"], ["ECIKIDS_globaldomain_public", "category"], ["ECILLOYDSMEN_globaldomain_public", "category"], ["ECIZAPATERIASENORAS_globaldomain_public", "category"], ["ECRU_globaldomain_public", "category"], ["ETHNICITY_globaldomain_public", "category"], ["FLYINGTIGER_globaldomain_public", "category"], ["FOOTGEAR_globaldomain_public", "category"], ["FOREVERNEW_globaldomain_public", "category"], ["GINATRICOT_globaldomain_public", "category"], ["GSTARRETAIL_globaldomain_public", "category"], ["GSTAR_globaldomain_public", "category"], ["GUESSEMEA_globaldomain_public", "category"], ["GUESSUS_globaldomain_public", "category"], ["HACKETT_globaldomain_public", "category"], ["JOTT_globaldomain_public", "category"], ["JULES_globaldomain_public", "category"], ["MAAG_globaldomain_public", "category"], ["MERKAL_globaldomain_public", "category"], ["METROBRANDS_globaldomain_public", "category"], ["MFG_globaldomain_public", "category"], ["MOUNTAINWAREHOUSE_globaldomain_public", "category"], ["PEPE_globaldomain_public", "category"], ["RIVERISLAND_globaldomain_public", "category"], ["SCOTTA_globaldomain_public", "category"], ["SILBON_globaldomain_public", "category"], ["SFERABASICMAN_globaldomain_public", "category"], ["SPORTSEMOTION_globaldomain_public", "category"], ["SPORTSTREET_globaldomain_public", "category"], ["SUAREZ_globaldomain_public", "category"], ["TERRANOVA_globaldomain_public", "category"], ["TVOE_globaldomain_public", "category"], ["VALEXTRA_globaldomain_public", "category"], ["VILET_globaldomain_public", "category"], ["WHITESTUFF_globaldomain_public", "category"], ["WOOLRICH_globaldomain_public", "category"]], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.warehouses": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "warehouses", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/warehouses.sql", "original_file_path": "models/internal/internal_staging/warehouses.sql", "unique_id": "model.nextail.warehouses", "fqn": ["nextail", "internal", "internal_staging", "warehouses"], "alias": "warehouses", "checksum": {"name": "sha256", "checksum": "46ba83a1139df6fce04bacf812726b268a7a337434d003316094e05008eb7083"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.707343, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.warehouses", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'warehouses') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "warehouses"], ["BIMANI_globaldomain_public", "warehouses"], ["BZB_globaldomain_public", "warehouses"], ["CALLIOPE_globaldomain_public", "warehouses"], ["DCK_globaldomain_public", "warehouses"], ["DUB_globaldomain_public", "warehouses"], ["ECIBOLSOSMMEE_globaldomain_public", "warehouses"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "warehouses"], ["ECIEASYWEARELLA_globaldomain_public", "warehouses"], ["ECIGAP_globaldomain_public", "warehouses"], ["ECIKIDS_globaldomain_public", "warehouses"], ["ECILLOYDSMEN_globaldomain_public", "warehouses"], ["ECIZAPATERIASENORAS_globaldomain_public", "warehouses"], ["ECRU_globaldomain_public", "warehouses"], ["ETHNICITY_globaldomain_public", "warehouses"], ["FLYINGTIGER_globaldomain_public", "warehouses"], ["FOOTGEAR_globaldomain_public", "warehouses"], ["FOREVERNEW_globaldomain_public", "warehouses"], ["GINATRICOT_globaldomain_public", "warehouses"], ["GSTARRETAIL_globaldomain_public", "warehouses"], ["GSTAR_globaldomain_public", "warehouses"], ["GUESSEMEA_globaldomain_public", "warehouses"], ["GUESSUS_globaldomain_public", "warehouses"], ["HACKETT_globaldomain_public", "warehouses"], ["JOTT_globaldomain_public", "warehouses"], ["JULES_globaldomain_public", "warehouses"], ["MAAG_globaldomain_public", "warehouses"], ["MERKAL_globaldomain_public", "warehouses"], ["METROBRANDS_globaldomain_public", "warehouses"], ["MFG_globaldomain_public", "warehouses"], ["MOUNTAINWAREHOUSE_globaldomain_public", "warehouses"], ["PEPE_globaldomain_public", "warehouses"], ["RIVERISLAND_globaldomain_public", "warehouses"], ["SCOTTA_globaldomain_public", "warehouses"], ["SILBON_globaldomain_public", "warehouses"], ["SFERABASICMAN_globaldomain_public", "warehouses"], ["SPORTSEMOTION_globaldomain_public", "warehouses"], ["SPORTSTREET_globaldomain_public", "warehouses"], ["SUAREZ_globaldomain_public", "warehouses"], ["TERRANOVA_globaldomain_public", "warehouses"], ["TVOE_globaldomain_public", "warehouses"], ["VALEXTRA_globaldomain_public", "warehouses"], ["VILET_globaldomain_public", "warehouses"], ["WHITESTUFF_globaldomain_public", "warehouses"], ["WOOLRICH_globaldomain_public", "warehouses"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.seasons": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "seasons", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/seasons.sql", "original_file_path": "models/internal/internal_staging/seasons.sql", "unique_id": "model.nextail.seasons", "fqn": ["nextail", "internal", "internal_staging", "seasons"], "alias": "seasons", "checksum": {"name": "sha256", "checksum": "360ca864041e1c2dcc6e9480d4bad00ac04cfffd1fbbd8bfc1291bbfe718c7a2"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.713693, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.seasons", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'seasons') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "seasons"], ["BIMANI_globaldomain_public", "seasons"], ["BZB_globaldomain_public", "seasons"], ["CALLIOPE_globaldomain_public", "seasons"], ["DCK_globaldomain_public", "seasons"], ["DUB_globaldomain_public", "seasons"], ["ECIBOLSOSMMEE_globaldomain_public", "seasons"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "seasons"], ["ECIEASYWEARELLA_globaldomain_public", "seasons"], ["ECIGAP_globaldomain_public", "seasons"], ["ECIKIDS_globaldomain_public", "seasons"], ["ECILLOYDSMEN_globaldomain_public", "seasons"], ["ECIZAPATERIASENORAS_globaldomain_public", "seasons"], ["ECRU_globaldomain_public", "seasons"], ["ETHNICITY_globaldomain_public", "seasons"], ["FLYINGTIGER_globaldomain_public", "seasons"], ["FOOTGEAR_globaldomain_public", "seasons"], ["FOREVERNEW_globaldomain_public", "seasons"], ["GINATRICOT_globaldomain_public", "seasons"], ["GSTARRETAIL_globaldomain_public", "seasons"], ["GSTAR_globaldomain_public", "seasons"], ["GUESSEMEA_globaldomain_public", "seasons"], ["GUESSUS_globaldomain_public", "seasons"], ["HACKETT_globaldomain_public", "seasons"], ["JOTT_globaldomain_public", "seasons"], ["JULES_globaldomain_public", "seasons"], ["MAAG_globaldomain_public", "seasons"], ["MERKAL_globaldomain_public", "seasons"], ["METROBRANDS_globaldomain_public", "seasons"], ["MFG_globaldomain_public", "seasons"], ["MOUNTAINWAREHOUSE_globaldomain_public", "seasons"], ["PEPE_globaldomain_public", "seasons"], ["RIVERISLAND_globaldomain_public", "seasons"], ["SCOTTA_globaldomain_public", "seasons"], ["SILBON_globaldomain_public", "seasons"], ["SFERABASICMAN_globaldomain_public", "seasons"], ["SPORTSEMOTION_globaldomain_public", "seasons"], ["SPORTSTREET_globaldomain_public", "seasons"], ["SUAREZ_globaldomain_public", "seasons"], ["TERRANOVA_globaldomain_public", "seasons"], ["TVOE_globaldomain_public", "seasons"], ["VALEXTRA_globaldomain_public", "seasons"], ["VILET_globaldomain_public", "seasons"], ["WHITESTUFF_globaldomain_public", "seasons"], ["WOOLRICH_globaldomain_public", "seasons"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.stores": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "stores", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/stores.sql", "original_file_path": "models/internal/internal_staging/stores.sql", "unique_id": "model.nextail.stores", "fqn": ["nextail", "internal", "internal_staging", "stores"], "alias": "stores", "checksum": {"name": "sha256", "checksum": "c15ae2249a6bdcab7be45bf7a5263e011d2e414fd2d47a98d7529bf05a58b7b0"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.7206411, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.stores", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'stores') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "stores"], ["BIMANI_globaldomain_public", "stores"], ["BZB_globaldomain_public", "stores"], ["CALLIOPE_globaldomain_public", "stores"], ["DCK_globaldomain_public", "stores"], ["DUB_globaldomain_public", "stores"], ["ECIBOLSOSMMEE_globaldomain_public", "stores"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "stores"], ["ECIEASYWEARELLA_globaldomain_public", "stores"], ["ECIGAP_globaldomain_public", "stores"], ["ECIKIDS_globaldomain_public", "stores"], ["ECILLOYDSMEN_globaldomain_public", "stores"], ["ECIZAPATERIASENORAS_globaldomain_public", "stores"], ["ECRU_globaldomain_public", "stores"], ["ETHNICITY_globaldomain_public", "stores"], ["FLYINGTIGER_globaldomain_public", "stores"], ["FOOTGEAR_globaldomain_public", "stores"], ["FOREVERNEW_globaldomain_public", "stores"], ["GINATRICOT_globaldomain_public", "stores"], ["GSTARRETAIL_globaldomain_public", "stores"], ["GSTAR_globaldomain_public", "stores"], ["GUESSEMEA_globaldomain_public", "stores"], ["GUESSUS_globaldomain_public", "stores"], ["HACKETT_globaldomain_public", "stores"], ["JOTT_globaldomain_public", "stores"], ["JULES_globaldomain_public", "stores"], ["MAAG_globaldomain_public", "stores"], ["MERKAL_globaldomain_public", "stores"], ["METROBRANDS_globaldomain_public", "stores"], ["MFG_globaldomain_public", "stores"], ["MOUNTAINWAREHOUSE_globaldomain_public", "stores"], ["PEPE_globaldomain_public", "stores"], ["RIVERISLAND_globaldomain_public", "stores"], ["SCOTTA_globaldomain_public", "stores"], ["SILBON_globaldomain_public", "stores"], ["SFERABASICMAN_globaldomain_public", "stores"], ["SPORTSEMOTION_globaldomain_public", "stores"], ["SPORTSTREET_globaldomain_public", "stores"], ["SUAREZ_globaldomain_public", "stores"], ["TERRANOVA_globaldomain_public", "stores"], ["TVOE_globaldomain_public", "stores"], ["VALEXTRA_globaldomain_public", "stores"], ["VILET_globaldomain_public", "stores"], ["WHITESTUFF_globaldomain_public", "stores"], ["WOOLRICH_globaldomain_public", "stores"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.crons": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "crons", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/crons.sql", "original_file_path": "models/internal/internal_staging/crons.sql", "unique_id": "model.nextail.crons", "fqn": ["nextail", "internal", "internal_staging", "crons"], "alias": "crons", "checksum": {"name": "sha256", "checksum": "3a086f18dde39e38bde1b8c04ef4fb6703d4ecbb3175d35e6a23511cb96b2504"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "cluster_by": ["tenant"]}, "created_at": 1754287421.7270248, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.crons", "raw_code": "{{\n    config(\n        materialized = 'table',\n        unique_key = ['id', 'tenant'],\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant\nfrom {{ source(tenant + '_globaldomain_public', 'cron') }}\n\n-- can't use incremental logic here because the category table does not use a timestamp to track changes\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "cron"], ["BIMANI_globaldomain_public", "cron"], ["BZB_globaldomain_public", "cron"], ["CALLIOPE_globaldomain_public", "cron"], ["DCK_globaldomain_public", "cron"], ["DUB_globaldomain_public", "cron"], ["ECIBOLSOSMMEE_globaldomain_public", "cron"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "cron"], ["ECIEASYWEARELLA_globaldomain_public", "cron"], ["ECIGAP_globaldomain_public", "cron"], ["ECIKIDS_globaldomain_public", "cron"], ["ECILLOYDSMEN_globaldomain_public", "cron"], ["ECIZAPATERIASENORAS_globaldomain_public", "cron"], ["ECRU_globaldomain_public", "cron"], ["ETHNICITY_globaldomain_public", "cron"], ["FLYINGTIGER_globaldomain_public", "cron"], ["FOOTGEAR_globaldomain_public", "cron"], ["FOREVERNEW_globaldomain_public", "cron"], ["GINATRICOT_globaldomain_public", "cron"], ["GSTARRETAIL_globaldomain_public", "cron"], ["GSTAR_globaldomain_public", "cron"], ["GUESSEMEA_globaldomain_public", "cron"], ["GUESSUS_globaldomain_public", "cron"], ["HACKETT_globaldomain_public", "cron"], ["JOTT_globaldomain_public", "cron"], ["JULES_globaldomain_public", "cron"], ["MAAG_globaldomain_public", "cron"], ["MERKAL_globaldomain_public", "cron"], ["METROBRANDS_globaldomain_public", "cron"], ["MFG_globaldomain_public", "cron"], ["MOUNTAINWAREHOUSE_globaldomain_public", "cron"], ["PEPE_globaldomain_public", "cron"], ["RIVERISLAND_globaldomain_public", "cron"], ["SCOTTA_globaldomain_public", "cron"], ["SILBON_globaldomain_public", "cron"], ["SFERABASICMAN_globaldomain_public", "cron"], ["SPORTSEMOTION_globaldomain_public", "cron"], ["SPORTSTREET_globaldomain_public", "cron"], ["SUAREZ_globaldomain_public", "cron"], ["TERRANOVA_globaldomain_public", "cron"], ["TVOE_globaldomain_public", "cron"], ["VALEXTRA_globaldomain_public", "cron"], ["VILET_globaldomain_public", "cron"], ["WHITESTUFF_globaldomain_public", "cron"], ["WOOLRICH_globaldomain_public", "cron"]], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.sales": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "sales", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/sales.sql", "original_file_path": "models/internal/internal_staging/sales.sql", "unique_id": "model.nextail.sales", "fqn": ["nextail", "internal", "internal_staging", "sales"], "alias": "sales", "checksum": {"name": "sha256", "checksum": "997fe1353858ac4d7a2a9ed2a78daf51d630cdcd9566f08efa8245d117cc17f0"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["store_id", "sku_id", "date", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["store_id", "sku_id", "date", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.7319, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.sales", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['store_id', 'sku_id', 'date', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant'],\n        enabled = false\n    )\n}}\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'sales') }}\n\n    {% if is_incremental() %}\n        where date >= (select max(date) from {{ this }}) and tenant = '{{ tenant }}'\n    {% endif %}\n    {% if should_full_refresh() %}\n        -- uncomment this to remove the limit of the full refresh to a certain date\n        where date >= '{{ var(\"full_refresh_start_date\") }}'\n    {% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "sales"], ["BIMANI_globaldomain_public", "sales"], ["BZB_globaldomain_public", "sales"], ["CALLIOPE_globaldomain_public", "sales"], ["DCK_globaldomain_public", "sales"], ["DUB_globaldomain_public", "sales"], ["ECIBOLSOSMMEE_globaldomain_public", "sales"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "sales"], ["ECIEASYWEARELLA_globaldomain_public", "sales"], ["ECIGAP_globaldomain_public", "sales"], ["ECIKIDS_globaldomain_public", "sales"], ["ECILLOYDSMEN_globaldomain_public", "sales"], ["ECIZAPATERIASENORAS_globaldomain_public", "sales"], ["ECRU_globaldomain_public", "sales"], ["ETHNICITY_globaldomain_public", "sales"], ["FLYINGTIGER_globaldomain_public", "sales"], ["FOOTGEAR_globaldomain_public", "sales"], ["FOREVERNEW_globaldomain_public", "sales"], ["GINATRICOT_globaldomain_public", "sales"], ["GSTARRETAIL_globaldomain_public", "sales"], ["GSTAR_globaldomain_public", "sales"], ["GUESSEMEA_globaldomain_public", "sales"], ["GUESSUS_globaldomain_public", "sales"], ["HACKETT_globaldomain_public", "sales"], ["JOTT_globaldomain_public", "sales"], ["JULES_globaldomain_public", "sales"], ["MAAG_globaldomain_public", "sales"], ["MERKAL_globaldomain_public", "sales"], ["METROBRANDS_globaldomain_public", "sales"], ["MFG_globaldomain_public", "sales"], ["MOUNTAINWAREHOUSE_globaldomain_public", "sales"], ["PEPE_globaldomain_public", "sales"], ["RIVERISLAND_globaldomain_public", "sales"], ["SCOTTA_globaldomain_public", "sales"], ["SILBON_globaldomain_public", "sales"], ["SFERABASICMAN_globaldomain_public", "sales"], ["SPORTSEMOTION_globaldomain_public", "sales"], ["SPORTSTREET_globaldomain_public", "sales"], ["SUAREZ_globaldomain_public", "sales"], ["TERRANOVA_globaldomain_public", "sales"], ["TVOE_globaldomain_public", "sales"], ["VALEXTRA_globaldomain_public", "sales"], ["VILET_globaldomain_public", "sales"], ["WHITESTUFF_globaldomain_public", "sales"], ["WOOLRICH_globaldomain_public", "sales"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.buy_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "buy_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/buy_executions.sql", "original_file_path": "models/internal/internal_staging/buy_executions.sql", "unique_id": "model.nextail.buy_executions", "fqn": ["nextail", "internal", "internal_staging", "buy_executions"], "alias": "buy_executions", "checksum": {"name": "sha256", "checksum": "d0933a10f28f43f64322fad34fe24745b19f6e80b452d20d5c8e52dcee97d764"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.74017, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.buy_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'buy_execution') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "buy_execution"], ["BIMANI_globaldomain_public", "buy_execution"], ["BZB_globaldomain_public", "buy_execution"], ["CALLIOPE_globaldomain_public", "buy_execution"], ["DCK_globaldomain_public", "buy_execution"], ["DUB_globaldomain_public", "buy_execution"], ["ECIBOLSOSMMEE_globaldomain_public", "buy_execution"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "buy_execution"], ["ECIEASYWEARELLA_globaldomain_public", "buy_execution"], ["ECIGAP_globaldomain_public", "buy_execution"], ["ECIKIDS_globaldomain_public", "buy_execution"], ["ECILLOYDSMEN_globaldomain_public", "buy_execution"], ["ECIZAPATERIASENORAS_globaldomain_public", "buy_execution"], ["ECRU_globaldomain_public", "buy_execution"], ["ETHNICITY_globaldomain_public", "buy_execution"], ["FLYINGTIGER_globaldomain_public", "buy_execution"], ["FOOTGEAR_globaldomain_public", "buy_execution"], ["FOREVERNEW_globaldomain_public", "buy_execution"], ["GINATRICOT_globaldomain_public", "buy_execution"], ["GSTARRETAIL_globaldomain_public", "buy_execution"], ["GSTAR_globaldomain_public", "buy_execution"], ["GUESSEMEA_globaldomain_public", "buy_execution"], ["GUESSUS_globaldomain_public", "buy_execution"], ["HACKETT_globaldomain_public", "buy_execution"], ["JOTT_globaldomain_public", "buy_execution"], ["JULES_globaldomain_public", "buy_execution"], ["MAAG_globaldomain_public", "buy_execution"], ["MERKAL_globaldomain_public", "buy_execution"], ["METROBRANDS_globaldomain_public", "buy_execution"], ["MFG_globaldomain_public", "buy_execution"], ["MOUNTAINWAREHOUSE_globaldomain_public", "buy_execution"], ["PEPE_globaldomain_public", "buy_execution"], ["RIVERISLAND_globaldomain_public", "buy_execution"], ["SCOTTA_globaldomain_public", "buy_execution"], ["SILBON_globaldomain_public", "buy_execution"], ["SFERABASICMAN_globaldomain_public", "buy_execution"], ["SPORTSEMOTION_globaldomain_public", "buy_execution"], ["SPORTSTREET_globaldomain_public", "buy_execution"], ["SUAREZ_globaldomain_public", "buy_execution"], ["TERRANOVA_globaldomain_public", "buy_execution"], ["TVOE_globaldomain_public", "buy_execution"], ["VALEXTRA_globaldomain_public", "buy_execution"], ["VILET_globaldomain_public", "buy_execution"], ["WHITESTUFF_globaldomain_public", "buy_execution"], ["WOOLRICH_globaldomain_public", "buy_execution"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.reorder_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "reorder_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/reorder_executions.sql", "original_file_path": "models/internal/internal_staging/reorder_executions.sql", "unique_id": "model.nextail.reorder_executions", "fqn": ["nextail", "internal", "internal_staging", "reorder_executions"], "alias": "reorder_executions", "checksum": {"name": "sha256", "checksum": "94d9f856712b7e50565069561dd5661affbb187d83abe41262684f8ce516a71e"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.746572, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.reorder_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'reorder_execution') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "reorder_execution"], ["BIMANI_globaldomain_public", "reorder_execution"], ["BZB_globaldomain_public", "reorder_execution"], ["CALLIOPE_globaldomain_public", "reorder_execution"], ["DCK_globaldomain_public", "reorder_execution"], ["DUB_globaldomain_public", "reorder_execution"], ["ECIBOLSOSMMEE_globaldomain_public", "reorder_execution"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "reorder_execution"], ["ECIEASYWEARELLA_globaldomain_public", "reorder_execution"], ["ECIGAP_globaldomain_public", "reorder_execution"], ["ECIKIDS_globaldomain_public", "reorder_execution"], ["ECILLOYDSMEN_globaldomain_public", "reorder_execution"], ["ECIZAPATERIASENORAS_globaldomain_public", "reorder_execution"], ["ECRU_globaldomain_public", "reorder_execution"], ["ETHNICITY_globaldomain_public", "reorder_execution"], ["FLYINGTIGER_globaldomain_public", "reorder_execution"], ["FOOTGEAR_globaldomain_public", "reorder_execution"], ["FOREVERNEW_globaldomain_public", "reorder_execution"], ["GINATRICOT_globaldomain_public", "reorder_execution"], ["GSTARRETAIL_globaldomain_public", "reorder_execution"], ["GSTAR_globaldomain_public", "reorder_execution"], ["GUESSEMEA_globaldomain_public", "reorder_execution"], ["GUESSUS_globaldomain_public", "reorder_execution"], ["HACKETT_globaldomain_public", "reorder_execution"], ["JOTT_globaldomain_public", "reorder_execution"], ["JULES_globaldomain_public", "reorder_execution"], ["MAAG_globaldomain_public", "reorder_execution"], ["MERKAL_globaldomain_public", "reorder_execution"], ["METROBRANDS_globaldomain_public", "reorder_execution"], ["MFG_globaldomain_public", "reorder_execution"], ["MOUNTAINWAREHOUSE_globaldomain_public", "reorder_execution"], ["PEPE_globaldomain_public", "reorder_execution"], ["RIVERISLAND_globaldomain_public", "reorder_execution"], ["SCOTTA_globaldomain_public", "reorder_execution"], ["SILBON_globaldomain_public", "reorder_execution"], ["SFERABASICMAN_globaldomain_public", "reorder_execution"], ["SPORTSEMOTION_globaldomain_public", "reorder_execution"], ["SPORTSTREET_globaldomain_public", "reorder_execution"], ["SUAREZ_globaldomain_public", "reorder_execution"], ["TERRANOVA_globaldomain_public", "reorder_execution"], ["TVOE_globaldomain_public", "reorder_execution"], ["VALEXTRA_globaldomain_public", "reorder_execution"], ["VILET_globaldomain_public", "reorder_execution"], ["WHITESTUFF_globaldomain_public", "reorder_execution"], ["WOOLRICH_globaldomain_public", "reorder_execution"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.replenishment_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "replenishment_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/replenishment_executions.sql", "original_file_path": "models/internal/internal_staging/replenishment_executions.sql", "unique_id": "model.nextail.replenishment_executions", "fqn": ["nextail", "internal", "internal_staging", "replenishment_executions"], "alias": "replenishment_executions", "checksum": {"name": "sha256", "checksum": "9b73b2d3fb155b8d17e041e7ef7964bd6398fc7bf4433d65a3925922f4d2e7b4"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.755137, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.replenishment_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'replenishment_executions') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "replenishment_executions"], ["BIMANI_globaldomain_public", "replenishment_executions"], ["BZB_globaldomain_public", "replenishment_executions"], ["CALLIOPE_globaldomain_public", "replenishment_executions"], ["DCK_globaldomain_public", "replenishment_executions"], ["DUB_globaldomain_public", "replenishment_executions"], ["ECIBOLSOSMMEE_globaldomain_public", "replenishment_executions"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "replenishment_executions"], ["ECIEASYWEARELLA_globaldomain_public", "replenishment_executions"], ["ECIGAP_globaldomain_public", "replenishment_executions"], ["ECIKIDS_globaldomain_public", "replenishment_executions"], ["ECILLOYDSMEN_globaldomain_public", "replenishment_executions"], ["ECIZAPATERIASENORAS_globaldomain_public", "replenishment_executions"], ["ECRU_globaldomain_public", "replenishment_executions"], ["ETHNICITY_globaldomain_public", "replenishment_executions"], ["FLYINGTIGER_globaldomain_public", "replenishment_executions"], ["FOOTGEAR_globaldomain_public", "replenishment_executions"], ["FOREVERNEW_globaldomain_public", "replenishment_executions"], ["GINATRICOT_globaldomain_public", "replenishment_executions"], ["GSTARRETAIL_globaldomain_public", "replenishment_executions"], ["GSTAR_globaldomain_public", "replenishment_executions"], ["GUESSEMEA_globaldomain_public", "replenishment_executions"], ["GUESSUS_globaldomain_public", "replenishment_executions"], ["HACKETT_globaldomain_public", "replenishment_executions"], ["JOTT_globaldomain_public", "replenishment_executions"], ["JULES_globaldomain_public", "replenishment_executions"], ["MAAG_globaldomain_public", "replenishment_executions"], ["MERKAL_globaldomain_public", "replenishment_executions"], ["METROBRANDS_globaldomain_public", "replenishment_executions"], ["MFG_globaldomain_public", "replenishment_executions"], ["MOUNTAINWAREHOUSE_globaldomain_public", "replenishment_executions"], ["PEPE_globaldomain_public", "replenishment_executions"], ["RIVERISLAND_globaldomain_public", "replenishment_executions"], ["SCOTTA_globaldomain_public", "replenishment_executions"], ["SILBON_globaldomain_public", "replenishment_executions"], ["SFERABASICMAN_globaldomain_public", "replenishment_executions"], ["SPORTSEMOTION_globaldomain_public", "replenishment_executions"], ["SPORTSTREET_globaldomain_public", "replenishment_executions"], ["SUAREZ_globaldomain_public", "replenishment_executions"], ["TERRANOVA_globaldomain_public", "replenishment_executions"], ["TVOE_globaldomain_public", "replenishment_executions"], ["VALEXTRA_globaldomain_public", "replenishment_executions"], ["VILET_globaldomain_public", "replenishment_executions"], ["WHITESTUFF_globaldomain_public", "replenishment_executions"], ["WOOLRICH_globaldomain_public", "replenishment_executions"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.store_stock_items": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "store_stock_items", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/store_stock_items.sql", "original_file_path": "models/internal/internal_staging/store_stock_items.sql", "unique_id": "model.nextail.store_stock_items", "fqn": ["nextail", "internal", "internal_staging", "store_stock_items"], "alias": "store_stock_items", "checksum": {"name": "sha256", "checksum": "ae5e4955454f54ae879df3729b7f7046149b5fbf472e9c9bc07b9d09e4a78be0"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["store_id", "sku_id", "date", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["store_id", "sku_id", "date", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.761635, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.store_stock_items", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['store_id', 'sku_id', 'date', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant'],\n        enabled = false\n    )\n}}\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'store_stock_items') }}\n\n    {% if is_incremental() %}\n        where date > (select max(date) from {{ this }}) and tenant = '{{ tenant }}'\n    {% endif %}\n    {% if should_full_refresh() %}\n        -- uncomment this to remove the limit of the full refresh to a certain date\n        where date >= '{{ var(\"full_refresh_start_date\") }}'\n    {% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "store_stock_items"], ["BIMANI_globaldomain_public", "store_stock_items"], ["BZB_globaldomain_public", "store_stock_items"], ["CALLIOPE_globaldomain_public", "store_stock_items"], ["DCK_globaldomain_public", "store_stock_items"], ["DUB_globaldomain_public", "store_stock_items"], ["ECIBOLSOSMMEE_globaldomain_public", "store_stock_items"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "store_stock_items"], ["ECIEASYWEARELLA_globaldomain_public", "store_stock_items"], ["ECIGAP_globaldomain_public", "store_stock_items"], ["ECIKIDS_globaldomain_public", "store_stock_items"], ["ECILLOYDSMEN_globaldomain_public", "store_stock_items"], ["ECIZAPATERIASENORAS_globaldomain_public", "store_stock_items"], ["ECRU_globaldomain_public", "store_stock_items"], ["ETHNICITY_globaldomain_public", "store_stock_items"], ["FLYINGTIGER_globaldomain_public", "store_stock_items"], ["FOOTGEAR_globaldomain_public", "store_stock_items"], ["FOREVERNEW_globaldomain_public", "store_stock_items"], ["GINATRICOT_globaldomain_public", "store_stock_items"], ["GSTARRETAIL_globaldomain_public", "store_stock_items"], ["GSTAR_globaldomain_public", "store_stock_items"], ["GUESSEMEA_globaldomain_public", "store_stock_items"], ["GUESSUS_globaldomain_public", "store_stock_items"], ["HACKETT_globaldomain_public", "store_stock_items"], ["JOTT_globaldomain_public", "store_stock_items"], ["JULES_globaldomain_public", "store_stock_items"], ["MAAG_globaldomain_public", "store_stock_items"], ["MERKAL_globaldomain_public", "store_stock_items"], ["METROBRANDS_globaldomain_public", "store_stock_items"], ["MFG_globaldomain_public", "store_stock_items"], ["MOUNTAINWAREHOUSE_globaldomain_public", "store_stock_items"], ["PEPE_globaldomain_public", "store_stock_items"], ["RIVERISLAND_globaldomain_public", "store_stock_items"], ["SCOTTA_globaldomain_public", "store_stock_items"], ["SILBON_globaldomain_public", "store_stock_items"], ["SFERABASICMAN_globaldomain_public", "store_stock_items"], ["SPORTSEMOTION_globaldomain_public", "store_stock_items"], ["SPORTSTREET_globaldomain_public", "store_stock_items"], ["SUAREZ_globaldomain_public", "store_stock_items"], ["TERRANOVA_globaldomain_public", "store_stock_items"], ["TVOE_globaldomain_public", "store_stock_items"], ["VALEXTRA_globaldomain_public", "store_stock_items"], ["VILET_globaldomain_public", "store_stock_items"], ["WHITESTUFF_globaldomain_public", "store_stock_items"], ["WOOLRICH_globaldomain_public", "store_stock_items"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.admin_users": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "admin_users", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/admin_users.sql", "original_file_path": "models/internal/internal_staging/admin_users.sql", "unique_id": "model.nextail.admin_users", "fqn": ["nextail", "internal", "internal_staging", "admin_users"], "alias": "admin_users", "checksum": {"name": "sha256", "checksum": "3c07d21cfcf434d27d29b0288970bd4a3a9f65052d0762a1544bb293b5a04e9b"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.768615, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.admin_users", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    lower(email) as email,\n    * exclude (\n        email,\n        ENCRYPTED_PASSWORD,\n        RESET_PASSWORD_TOKEN,\n        RESET_PASSWORD_SENT_AT,\n        REMEMBER_CREATED_AT,\n        IP_SOURCE,\n        PHONE_NUMBER\n    ),\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'admin_users') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "admin_users"], ["BIMANI_globaldomain_public", "admin_users"], ["BZB_globaldomain_public", "admin_users"], ["CALLIOPE_globaldomain_public", "admin_users"], ["DCK_globaldomain_public", "admin_users"], ["DUB_globaldomain_public", "admin_users"], ["ECIBOLSOSMMEE_globaldomain_public", "admin_users"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "admin_users"], ["ECIEASYWEARELLA_globaldomain_public", "admin_users"], ["ECIGAP_globaldomain_public", "admin_users"], ["ECIKIDS_globaldomain_public", "admin_users"], ["ECILLOYDSMEN_globaldomain_public", "admin_users"], ["ECIZAPATERIASENORAS_globaldomain_public", "admin_users"], ["ECRU_globaldomain_public", "admin_users"], ["ETHNICITY_globaldomain_public", "admin_users"], ["FLYINGTIGER_globaldomain_public", "admin_users"], ["FOOTGEAR_globaldomain_public", "admin_users"], ["FOREVERNEW_globaldomain_public", "admin_users"], ["GINATRICOT_globaldomain_public", "admin_users"], ["GSTARRETAIL_globaldomain_public", "admin_users"], ["GSTAR_globaldomain_public", "admin_users"], ["GUESSEMEA_globaldomain_public", "admin_users"], ["GUESSUS_globaldomain_public", "admin_users"], ["HACKETT_globaldomain_public", "admin_users"], ["JOTT_globaldomain_public", "admin_users"], ["JULES_globaldomain_public", "admin_users"], ["MAAG_globaldomain_public", "admin_users"], ["MERKAL_globaldomain_public", "admin_users"], ["METROBRANDS_globaldomain_public", "admin_users"], ["MFG_globaldomain_public", "admin_users"], ["MOUNTAINWAREHOUSE_globaldomain_public", "admin_users"], ["PEPE_globaldomain_public", "admin_users"], ["RIVERISLAND_globaldomain_public", "admin_users"], ["SCOTTA_globaldomain_public", "admin_users"], ["SILBON_globaldomain_public", "admin_users"], ["SFERABASICMAN_globaldomain_public", "admin_users"], ["SPORTSEMOTION_globaldomain_public", "admin_users"], ["SPORTSTREET_globaldomain_public", "admin_users"], ["SUAREZ_globaldomain_public", "admin_users"], ["TERRANOVA_globaldomain_public", "admin_users"], ["TVOE_globaldomain_public", "admin_users"], ["VALEXTRA_globaldomain_public", "admin_users"], ["VILET_globaldomain_public", "admin_users"], ["WHITESTUFF_globaldomain_public", "admin_users"], ["WOOLRICH_globaldomain_public", "admin_users"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.product_history": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "product_history", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/product_history.sql", "original_file_path": "models/internal/internal_staging/product_history.sql", "unique_id": "model.nextail.product_history", "fqn": ["nextail", "internal", "internal_staging", "product_history"], "alias": "product_history", "checksum": {"name": "sha256", "checksum": "78a18cd4cc25234911cc92edf7e0062f33f544fb74ab7180f5ddb74352812ed5"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["date", "product_id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant", "product_id"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["date", "product_id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant", "product_id"]}, "created_at": 1754287421.7742138, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.product_history", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['date', 'product_id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant', 'product_id'],\n        enabled = false\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'product_history') }}\n\n{% if is_incremental() %}\n    where date > (select max(date) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n{% if should_full_refresh() %}\n        -- uncomment this to remove the limit of the full refresh to a certain date\n    where date >= '{{ var(\"full_refresh_start_date\") }}'\n{% endif %}\n\n{% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n{% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "product_history"], ["BIMANI_globaldomain_public", "product_history"], ["BZB_globaldomain_public", "product_history"], ["CALLIOPE_globaldomain_public", "product_history"], ["DCK_globaldomain_public", "product_history"], ["DUB_globaldomain_public", "product_history"], ["ECIBOLSOSMMEE_globaldomain_public", "product_history"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "product_history"], ["ECIEASYWEARELLA_globaldomain_public", "product_history"], ["ECIGAP_globaldomain_public", "product_history"], ["ECIKIDS_globaldomain_public", "product_history"], ["ECILLOYDSMEN_globaldomain_public", "product_history"], ["ECIZAPATERIASENORAS_globaldomain_public", "product_history"], ["ECRU_globaldomain_public", "product_history"], ["ETHNICITY_globaldomain_public", "product_history"], ["FLYINGTIGER_globaldomain_public", "product_history"], ["FOOTGEAR_globaldomain_public", "product_history"], ["FOREVERNEW_globaldomain_public", "product_history"], ["GINATRICOT_globaldomain_public", "product_history"], ["GSTARRETAIL_globaldomain_public", "product_history"], ["GSTAR_globaldomain_public", "product_history"], ["GUESSEMEA_globaldomain_public", "product_history"], ["GUESSUS_globaldomain_public", "product_history"], ["HACKETT_globaldomain_public", "product_history"], ["JOTT_globaldomain_public", "product_history"], ["JULES_globaldomain_public", "product_history"], ["MAAG_globaldomain_public", "product_history"], ["MERKAL_globaldomain_public", "product_history"], ["METROBRANDS_globaldomain_public", "product_history"], ["MFG_globaldomain_public", "product_history"], ["MOUNTAINWAREHOUSE_globaldomain_public", "product_history"], ["PEPE_globaldomain_public", "product_history"], ["RIVERISLAND_globaldomain_public", "product_history"], ["SCOTTA_globaldomain_public", "product_history"], ["SILBON_globaldomain_public", "product_history"], ["SFERABASICMAN_globaldomain_public", "product_history"], ["SPORTSEMOTION_globaldomain_public", "product_history"], ["SPORTSTREET_globaldomain_public", "product_history"], ["SUAREZ_globaldomain_public", "product_history"], ["TERRANOVA_globaldomain_public", "product_history"], ["TVOE_globaldomain_public", "product_history"], ["VALEXTRA_globaldomain_public", "product_history"], ["VILET_globaldomain_public", "product_history"], ["WHITESTUFF_globaldomain_public", "product_history"], ["WOOLRICH_globaldomain_public", "product_history"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.dbt.should_full_refresh"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.preconfigured_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "preconfigured_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/preconfigured_executions.sql", "original_file_path": "models/internal/internal_staging/preconfigured_executions.sql", "unique_id": "model.nextail.preconfigured_executions", "fqn": ["nextail", "internal", "internal_staging", "preconfigured_executions"], "alias": "preconfigured_executions", "checksum": {"name": "sha256", "checksum": "29ff3ce6c389dd155e8d83119620db99311d4872e7ff1fa1f33a6cafa2f2a822"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.781195, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.preconfigured_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'preconfigured_execution') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "preconfigured_execution"], ["BIMANI_globaldomain_public", "preconfigured_execution"], ["BZB_globaldomain_public", "preconfigured_execution"], ["CALLIOPE_globaldomain_public", "preconfigured_execution"], ["DCK_globaldomain_public", "preconfigured_execution"], ["DUB_globaldomain_public", "preconfigured_execution"], ["ECIBOLSOSMMEE_globaldomain_public", "preconfigured_execution"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "preconfigured_execution"], ["ECIEASYWEARELLA_globaldomain_public", "preconfigured_execution"], ["ECIGAP_globaldomain_public", "preconfigured_execution"], ["ECIKIDS_globaldomain_public", "preconfigured_execution"], ["ECILLOYDSMEN_globaldomain_public", "preconfigured_execution"], ["ECIZAPATERIASENORAS_globaldomain_public", "preconfigured_execution"], ["ECRU_globaldomain_public", "preconfigured_execution"], ["ETHNICITY_globaldomain_public", "preconfigured_execution"], ["FLYINGTIGER_globaldomain_public", "preconfigured_execution"], ["FOOTGEAR_globaldomain_public", "preconfigured_execution"], ["FOREVERNEW_globaldomain_public", "preconfigured_execution"], ["GINATRICOT_globaldomain_public", "preconfigured_execution"], ["GSTARRETAIL_globaldomain_public", "preconfigured_execution"], ["GSTAR_globaldomain_public", "preconfigured_execution"], ["GUESSEMEA_globaldomain_public", "preconfigured_execution"], ["GUESSUS_globaldomain_public", "preconfigured_execution"], ["HACKETT_globaldomain_public", "preconfigured_execution"], ["JOTT_globaldomain_public", "preconfigured_execution"], ["JULES_globaldomain_public", "preconfigured_execution"], ["MAAG_globaldomain_public", "preconfigured_execution"], ["MERKAL_globaldomain_public", "preconfigured_execution"], ["METROBRANDS_globaldomain_public", "preconfigured_execution"], ["MFG_globaldomain_public", "preconfigured_execution"], ["MOUNTAINWAREHOUSE_globaldomain_public", "preconfigured_execution"], ["PEPE_globaldomain_public", "preconfigured_execution"], ["RIVERISLAND_globaldomain_public", "preconfigured_execution"], ["SCOTTA_globaldomain_public", "preconfigured_execution"], ["SILBON_globaldomain_public", "preconfigured_execution"], ["SFERABASICMAN_globaldomain_public", "preconfigured_execution"], ["SPORTSEMOTION_globaldomain_public", "preconfigured_execution"], ["SPORTSTREET_globaldomain_public", "preconfigured_execution"], ["SUAREZ_globaldomain_public", "preconfigured_execution"], ["TERRANOVA_globaldomain_public", "preconfigured_execution"], ["TVOE_globaldomain_public", "preconfigured_execution"], ["VALEXTRA_globaldomain_public", "preconfigured_execution"], ["VILET_globaldomain_public", "preconfigured_execution"], ["WHITESTUFF_globaldomain_public", "preconfigured_execution"], ["WOOLRICH_globaldomain_public", "preconfigured_execution"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.engine_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "engine_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/engine_executions.sql", "original_file_path": "models/internal/internal_staging/engine_executions.sql", "unique_id": "model.nextail.engine_executions", "fqn": ["nextail", "internal", "internal_staging", "engine_executions"], "alias": "engine_executions", "checksum": {"name": "sha256", "checksum": "229b05c1f0cfb47ad3be2ecb5c4825223a8fc1d134cdb97b10b63efc1f6d5a88"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["request_id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["request_id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.786997, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.engine_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['request_id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'engine_executions') }}\n\n{% if is_incremental() %}\n    where executed_at > (select max(executed_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "engine_executions"], ["BIMANI_globaldomain_public", "engine_executions"], ["BZB_globaldomain_public", "engine_executions"], ["CALLIOPE_globaldomain_public", "engine_executions"], ["DCK_globaldomain_public", "engine_executions"], ["DUB_globaldomain_public", "engine_executions"], ["ECIBOLSOSMMEE_globaldomain_public", "engine_executions"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "engine_executions"], ["ECIEASYWEARELLA_globaldomain_public", "engine_executions"], ["ECIGAP_globaldomain_public", "engine_executions"], ["ECIKIDS_globaldomain_public", "engine_executions"], ["ECILLOYDSMEN_globaldomain_public", "engine_executions"], ["ECIZAPATERIASENORAS_globaldomain_public", "engine_executions"], ["ECRU_globaldomain_public", "engine_executions"], ["ETHNICITY_globaldomain_public", "engine_executions"], ["FLYINGTIGER_globaldomain_public", "engine_executions"], ["FOOTGEAR_globaldomain_public", "engine_executions"], ["FOREVERNEW_globaldomain_public", "engine_executions"], ["GINATRICOT_globaldomain_public", "engine_executions"], ["GSTARRETAIL_globaldomain_public", "engine_executions"], ["GSTAR_globaldomain_public", "engine_executions"], ["GUESSEMEA_globaldomain_public", "engine_executions"], ["GUESSUS_globaldomain_public", "engine_executions"], ["HACKETT_globaldomain_public", "engine_executions"], ["JOTT_globaldomain_public", "engine_executions"], ["JULES_globaldomain_public", "engine_executions"], ["MAAG_globaldomain_public", "engine_executions"], ["MERKAL_globaldomain_public", "engine_executions"], ["METROBRANDS_globaldomain_public", "engine_executions"], ["MFG_globaldomain_public", "engine_executions"], ["MOUNTAINWAREHOUSE_globaldomain_public", "engine_executions"], ["PEPE_globaldomain_public", "engine_executions"], ["RIVERISLAND_globaldomain_public", "engine_executions"], ["SCOTTA_globaldomain_public", "engine_executions"], ["SILBON_globaldomain_public", "engine_executions"], ["SFERABASICMAN_globaldomain_public", "engine_executions"], ["SPORTSEMOTION_globaldomain_public", "engine_executions"], ["SPORTSTREET_globaldomain_public", "engine_executions"], ["SUAREZ_globaldomain_public", "engine_executions"], ["TERRANOVA_globaldomain_public", "engine_executions"], ["TVOE_globaldomain_public", "engine_executions"], ["VALEXTRA_globaldomain_public", "engine_executions"], ["VILET_globaldomain_public", "engine_executions"], ["WHITESTUFF_globaldomain_public", "engine_executions"], ["WOOLRICH_globaldomain_public", "engine_executions"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.scenario": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "scenario", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/scenario.sql", "original_file_path": "models/internal/internal_staging/scenario.sql", "unique_id": "model.nextail.scenario", "fqn": ["nextail", "internal", "internal_staging", "scenario"], "alias": "scenario", "checksum": {"name": "sha256", "checksum": "6499aa14faa5d69b9830df023eb5093b22f4584448d78b25c99846d5b365579f"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.7933109, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.scenario", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'scenario') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "scenario"], ["BIMANI_globaldomain_public", "scenario"], ["BZB_globaldomain_public", "scenario"], ["CALLIOPE_globaldomain_public", "scenario"], ["DCK_globaldomain_public", "scenario"], ["DUB_globaldomain_public", "scenario"], ["ECIBOLSOSMMEE_globaldomain_public", "scenario"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "scenario"], ["ECIEASYWEARELLA_globaldomain_public", "scenario"], ["ECIGAP_globaldomain_public", "scenario"], ["ECIKIDS_globaldomain_public", "scenario"], ["ECILLOYDSMEN_globaldomain_public", "scenario"], ["ECIZAPATERIASENORAS_globaldomain_public", "scenario"], ["ECRU_globaldomain_public", "scenario"], ["ETHNICITY_globaldomain_public", "scenario"], ["FLYINGTIGER_globaldomain_public", "scenario"], ["FOOTGEAR_globaldomain_public", "scenario"], ["FOREVERNEW_globaldomain_public", "scenario"], ["GINATRICOT_globaldomain_public", "scenario"], ["GSTARRETAIL_globaldomain_public", "scenario"], ["GSTAR_globaldomain_public", "scenario"], ["GUESSEMEA_globaldomain_public", "scenario"], ["GUESSUS_globaldomain_public", "scenario"], ["HACKETT_globaldomain_public", "scenario"], ["JOTT_globaldomain_public", "scenario"], ["JULES_globaldomain_public", "scenario"], ["MAAG_globaldomain_public", "scenario"], ["MERKAL_globaldomain_public", "scenario"], ["METROBRANDS_globaldomain_public", "scenario"], ["MFG_globaldomain_public", "scenario"], ["MOUNTAINWAREHOUSE_globaldomain_public", "scenario"], ["PEPE_globaldomain_public", "scenario"], ["RIVERISLAND_globaldomain_public", "scenario"], ["SCOTTA_globaldomain_public", "scenario"], ["SILBON_globaldomain_public", "scenario"], ["SFERABASICMAN_globaldomain_public", "scenario"], ["SPORTSEMOTION_globaldomain_public", "scenario"], ["SPORTSTREET_globaldomain_public", "scenario"], ["SUAREZ_globaldomain_public", "scenario"], ["TERRANOVA_globaldomain_public", "scenario"], ["TVOE_globaldomain_public", "scenario"], ["VALEXTRA_globaldomain_public", "scenario"], ["VILET_globaldomain_public", "scenario"], ["WHITESTUFF_globaldomain_public", "scenario"], ["WOOLRICH_globaldomain_public", "scenario"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.dio_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "dio_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/dio_executions.sql", "original_file_path": "models/internal/internal_staging/dio_executions.sql", "unique_id": "model.nextail.dio_executions", "fqn": ["nextail", "internal", "internal_staging", "dio_executions"], "alias": "dio_executions", "checksum": {"name": "sha256", "checksum": "2f1beb1b945bf221edd3c3c70a0bbab0c1664bbed56695c2fb37d81668a81094"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "cluster_by": ["tenant"]}, "created_at": 1754287421.799432, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.dio_executions", "raw_code": "{{\n    config(\n        materialized = 'table',\n        unique_key = ['id', 'tenant'],\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant\nfrom {{ source(tenant + '_globaldomain_public', 'dio_execution_selected') }}\n\n-- can't use incremental logic here because the dio_execution_selected table does not use a timestamp to track changes\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "dio_execution_selected"], ["BIMANI_globaldomain_public", "dio_execution_selected"], ["BZB_globaldomain_public", "dio_execution_selected"], ["CALLIOPE_globaldomain_public", "dio_execution_selected"], ["DCK_globaldomain_public", "dio_execution_selected"], ["DUB_globaldomain_public", "dio_execution_selected"], ["ECIBOLSOSMMEE_globaldomain_public", "dio_execution_selected"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "dio_execution_selected"], ["ECIEASYWEARELLA_globaldomain_public", "dio_execution_selected"], ["ECIGAP_globaldomain_public", "dio_execution_selected"], ["ECIKIDS_globaldomain_public", "dio_execution_selected"], ["ECILLOYDSMEN_globaldomain_public", "dio_execution_selected"], ["ECIZAPATERIASENORAS_globaldomain_public", "dio_execution_selected"], ["ECRU_globaldomain_public", "dio_execution_selected"], ["ETHNICITY_globaldomain_public", "dio_execution_selected"], ["FLYINGTIGER_globaldomain_public", "dio_execution_selected"], ["FOOTGEAR_globaldomain_public", "dio_execution_selected"], ["FOREVERNEW_globaldomain_public", "dio_execution_selected"], ["GINATRICOT_globaldomain_public", "dio_execution_selected"], ["GSTARRETAIL_globaldomain_public", "dio_execution_selected"], ["GSTAR_globaldomain_public", "dio_execution_selected"], ["GUESSEMEA_globaldomain_public", "dio_execution_selected"], ["GUESSUS_globaldomain_public", "dio_execution_selected"], ["HACKETT_globaldomain_public", "dio_execution_selected"], ["JOTT_globaldomain_public", "dio_execution_selected"], ["JULES_globaldomain_public", "dio_execution_selected"], ["MAAG_globaldomain_public", "dio_execution_selected"], ["MERKAL_globaldomain_public", "dio_execution_selected"], ["METROBRANDS_globaldomain_public", "dio_execution_selected"], ["MFG_globaldomain_public", "dio_execution_selected"], ["MOUNTAINWAREHOUSE_globaldomain_public", "dio_execution_selected"], ["PEPE_globaldomain_public", "dio_execution_selected"], ["RIVERISLAND_globaldomain_public", "dio_execution_selected"], ["SCOTTA_globaldomain_public", "dio_execution_selected"], ["SILBON_globaldomain_public", "dio_execution_selected"], ["SFERABASICMAN_globaldomain_public", "dio_execution_selected"], ["SPORTSEMOTION_globaldomain_public", "dio_execution_selected"], ["SPORTSTREET_globaldomain_public", "dio_execution_selected"], ["SUAREZ_globaldomain_public", "dio_execution_selected"], ["TERRANOVA_globaldomain_public", "dio_execution_selected"], ["TVOE_globaldomain_public", "dio_execution_selected"], ["VALEXTRA_globaldomain_public", "dio_execution_selected"], ["VILET_globaldomain_public", "dio_execution_selected"], ["WHITESTUFF_globaldomain_public", "dio_execution_selected"], ["WOOLRICH_globaldomain_public", "dio_execution_selected"]], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.store_transfers_executions": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "store_transfers_executions", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/store_transfers_executions.sql", "original_file_path": "models/internal/internal_staging/store_transfers_executions.sql", "unique_id": "model.nextail.store_transfers_executions", "fqn": ["nextail", "internal", "internal_staging", "store_transfers_executions"], "alias": "store_transfers_executions", "checksum": {"name": "sha256", "checksum": "e922a78c2e20f4f5a1c90a45707abe1ae2afad109e4c32f9c2bc141ef5b442b9"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.804, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.store_transfers_executions", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant\nfrom {{ source(tenant + '_globaldomain_public', 'store_transfers_executions') }}\n\n{% if is_incremental() %}\n    where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n{% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "store_transfers_executions"], ["BIMANI_globaldomain_public", "store_transfers_executions"], ["BZB_globaldomain_public", "store_transfers_executions"], ["CALLIOPE_globaldomain_public", "store_transfers_executions"], ["DCK_globaldomain_public", "store_transfers_executions"], ["DUB_globaldomain_public", "store_transfers_executions"], ["ECIBOLSOSMMEE_globaldomain_public", "store_transfers_executions"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "store_transfers_executions"], ["ECIEASYWEARELLA_globaldomain_public", "store_transfers_executions"], ["ECIGAP_globaldomain_public", "store_transfers_executions"], ["ECIKIDS_globaldomain_public", "store_transfers_executions"], ["ECILLOYDSMEN_globaldomain_public", "store_transfers_executions"], ["ECIZAPATERIASENORAS_globaldomain_public", "store_transfers_executions"], ["ECRU_globaldomain_public", "store_transfers_executions"], ["ETHNICITY_globaldomain_public", "store_transfers_executions"], ["FLYINGTIGER_globaldomain_public", "store_transfers_executions"], ["FOOTGEAR_globaldomain_public", "store_transfers_executions"], ["FOREVERNEW_globaldomain_public", "store_transfers_executions"], ["GINATRICOT_globaldomain_public", "store_transfers_executions"], ["GSTARRETAIL_globaldomain_public", "store_transfers_executions"], ["GSTAR_globaldomain_public", "store_transfers_executions"], ["GUESSEMEA_globaldomain_public", "store_transfers_executions"], ["GUESSUS_globaldomain_public", "store_transfers_executions"], ["HACKETT_globaldomain_public", "store_transfers_executions"], ["JOTT_globaldomain_public", "store_transfers_executions"], ["JULES_globaldomain_public", "store_transfers_executions"], ["MAAG_globaldomain_public", "store_transfers_executions"], ["MERKAL_globaldomain_public", "store_transfers_executions"], ["METROBRANDS_globaldomain_public", "store_transfers_executions"], ["MFG_globaldomain_public", "store_transfers_executions"], ["MOUNTAINWAREHOUSE_globaldomain_public", "store_transfers_executions"], ["PEPE_globaldomain_public", "store_transfers_executions"], ["RIVERISLAND_globaldomain_public", "store_transfers_executions"], ["SCOTTA_globaldomain_public", "store_transfers_executions"], ["SILBON_globaldomain_public", "store_transfers_executions"], ["SFERABASICMAN_globaldomain_public", "store_transfers_executions"], ["SPORTSEMOTION_globaldomain_public", "store_transfers_executions"], ["SPORTSTREET_globaldomain_public", "store_transfers_executions"], ["SUAREZ_globaldomain_public", "store_transfers_executions"], ["TERRANOVA_globaldomain_public", "store_transfers_executions"], ["TVOE_globaldomain_public", "store_transfers_executions"], ["VALEXTRA_globaldomain_public", "store_transfers_executions"], ["VILET_globaldomain_public", "store_transfers_executions"], ["WHITESTUFF_globaldomain_public", "store_transfers_executions"], ["WOOLRICH_globaldomain_public", "store_transfers_executions"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.families": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_bronze", "name": "families", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_staging/families.sql", "original_file_path": "models/internal/internal_staging/families.sql", "unique_id": "model.nextail.families", "fqn": ["nextail", "internal", "internal_staging", "families"], "alias": "families", "checksum": {"name": "sha256", "checksum": "01a8defe4a5269cf5d3c2a2419a24b7e4f0346d5e0aa23e7f9c913f60c6385d7"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": "merge", "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["id", "tenant"], "on_schema_change": "sync_all_columns", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "cluster_by": ["tenant"]}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_bronze", "unique_key": ["id", "tenant"], "incremental_strategy": "merge", "on_schema_change": "sync_all_columns", "cluster_by": ["tenant"]}, "created_at": 1754287421.8094878, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_bronze.families", "raw_code": "{{\n    config(\n        materialized = 'incremental',\n        unique_key = ['id', 'tenant'],\n        incremental_strategy = 'merge',\n        on_schema_change = 'sync_all_columns',\n        cluster_by = ['tenant']\n    )\n}}\n-- database names: aristocrazy_main_prod_db, suarez_main_prod_db\n\n{% for tenant in var('all_tenants') %}\n\nselect\n    *,\n    '{{ tenant }}' as tenant,\nfrom {{ source(tenant + '_globaldomain_public', 'families') }}\n\n    {% if is_incremental() %}\n        where updated_at > (select max(updated_at) from {{ this }}) and tenant = '{{ tenant }}'\n    {% endif %}\n\n    {% if not loop.last and var('all_tenants') | length > 1 %}\n    -- will append the next tenant if there are more than one tenant\n    union all\n    {% endif %}\n\n{% endfor %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["ARISTOCRAZY_globaldomain_public", "families"], ["BIMANI_globaldomain_public", "families"], ["BZB_globaldomain_public", "families"], ["CALLIOPE_globaldomain_public", "families"], ["DCK_globaldomain_public", "families"], ["DUB_globaldomain_public", "families"], ["ECIBOLSOSMMEE_globaldomain_public", "families"], ["ECICAMISERIACABALLEROMMEE_globaldomain_public", "families"], ["ECIEASYWEARELLA_globaldomain_public", "families"], ["ECIGAP_globaldomain_public", "families"], ["ECIKIDS_globaldomain_public", "families"], ["ECILLOYDSMEN_globaldomain_public", "families"], ["ECIZAPATERIASENORAS_globaldomain_public", "families"], ["ECRU_globaldomain_public", "families"], ["ETHNICITY_globaldomain_public", "families"], ["FLYINGTIGER_globaldomain_public", "families"], ["FOOTGEAR_globaldomain_public", "families"], ["FOREVERNEW_globaldomain_public", "families"], ["GINATRICOT_globaldomain_public", "families"], ["GSTARRETAIL_globaldomain_public", "families"], ["GSTAR_globaldomain_public", "families"], ["GUESSEMEA_globaldomain_public", "families"], ["GUESSUS_globaldomain_public", "families"], ["HACKETT_globaldomain_public", "families"], ["JOTT_globaldomain_public", "families"], ["JULES_globaldomain_public", "families"], ["MAAG_globaldomain_public", "families"], ["MERKAL_globaldomain_public", "families"], ["METROBRANDS_globaldomain_public", "families"], ["MFG_globaldomain_public", "families"], ["MOUNTAINWAREHOUSE_globaldomain_public", "families"], ["PEPE_globaldomain_public", "families"], ["RIVERISLAND_globaldomain_public", "families"], ["SCOTTA_globaldomain_public", "families"], ["SILBON_globaldomain_public", "families"], ["SFERABASICMAN_globaldomain_public", "families"], ["SPORTSEMOTION_globaldomain_public", "families"], ["SPORTSTREET_globaldomain_public", "families"], ["SUAREZ_globaldomain_public", "families"], ["TERRANOVA_globaldomain_public", "families"], ["TVOE_globaldomain_public", "families"], ["VALEXTRA_globaldomain_public", "families"], ["VILET_globaldomain_public", "families"], ["WHITESTUFF_globaldomain_public", "families"], ["WOOLRICH_globaldomain_public", "families"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.users_unique": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_internals_silver", "name": "users_unique", "resource_type": "model", "package_name": "nextail", "path": "internal/internal_silver/users_unique.sql", "original_file_path": "models/internal/internal_silver/users_unique.sql", "unique_id": "model.nextail.users_unique", "fqn": ["nextail", "internal", "internal_silver", "users_unique"], "alias": "users_unique", "checksum": {"name": "sha256", "checksum": "e5ed5aed4049549fc642f2e7db5321ef5cd387645fe4d7a872aa96d6bb3e6e17"}, "config": {"enabled": false, "alias": null, "schema": "nx_internals_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_internals_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "created_at": 1754287421.815352, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_internals_silver.users_unique", "raw_code": "{{\n    config(\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n    )\n}}\n\nselect\n    email,\n    tenant,\n    sum(sign_in_count) as sum_sign_in_count,\n    min(created_at) as min_created_at,\n    max(last_sign_in_at) as max_sign_in_at,\n    max(updated_at) as max_updated_at,\n    BOOLOR_AGG(super_admin) as is_super_admin,\n    BOOLOR_AGG(can_change_store) as can_change_store,\n    BOOLOR_AGG(is_active) as is_active,\n    BOOLOR_AGG(staff) as is_staff,\n    BOOLOR_AGG(support) as is_support,\n    BOOLOR_AGG(infrastructure) as is_infrastructure,\nfrom {{ ref('admin_users') }}\ngroup by email, tenant", "doc_blocks": [], "language": "sql", "refs": [{"name": "admin_users", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.silver_okta_join_nx_data": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_okta_silver", "name": "silver_okta_join_nx_data", "resource_type": "model", "package_name": "nextail", "path": "okta/okta_silver/silver_okta_join_nx_data.sql", "original_file_path": "models/okta/okta_silver/silver_okta_join_nx_data.sql", "unique_id": "model.nextail.silver_okta_join_nx_data", "fqn": ["nextail", "okta", "okta_silver", "silver_okta_join_nx_data"], "alias": "silver_okta_join_nx_data", "checksum": {"name": "sha256", "checksum": "9af0c26f1cc4e8cd85994991c1369df61007f09a53bc7358e75ece96e99eff49"}, "config": {"enabled": false, "alias": null, "schema": "okta_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["email"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "okta_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["email"]}, "created_at": 1754287421.8190029, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_okta_silver.silver_okta_join_nx_data", "raw_code": "{{\n    config(\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=['email'],\n    )\n}}\n\nselect\n    split(split(email, '@')[1], '.')[0]::TEXT as domain_name,\n    *,\nfrom {{ ref('silver_okta_first_last_logins') }}\nleft join {{ ref('users_unique') }} using (email)", "doc_blocks": [], "language": "sql", "refs": [{"name": "silver_okta_first_last_logins", "package": null, "version": null}, {"name": "users_unique", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.silver_okta_login_events": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_okta_silver", "name": "silver_okta_login_events", "resource_type": "model", "package_name": "nextail", "path": "okta/okta_silver/silver_okta_login_events.sql", "original_file_path": "models/okta/okta_silver/silver_okta_login_events.sql", "unique_id": "model.nextail.silver_okta_login_events", "fqn": ["nextail", "okta", "okta_silver", "silver_okta_login_events"], "alias": "silver_okta_login_events", "checksum": {"name": "sha256", "checksum": "ffeed0624e987a8e0b4ba5ae33888eeae01f1c7223a01e2825d13cd3ac681df4"}, "config": {"enabled": false, "alias": null, "schema": "okta_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["email", "datetime"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "okta_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["email", "datetime"]}, "created_at": 1754287421.8242319, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_okta_silver.silver_okta_login_events", "raw_code": "{{\n    config(\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n        \n        unique_key=['email', 'datetime'],\n    )\n}}\n\nselect \n    *,\n    row_number() over (partition by email order by datetime desc) as login_event_number\nfrom {{ ref('stg_okta_login_events') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_okta_login_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.silver_okta_first_last_logins": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_okta_silver", "name": "silver_okta_first_last_logins", "resource_type": "model", "package_name": "nextail", "path": "okta/okta_silver/silver_okta_first_last_logins.sql", "original_file_path": "models/okta/okta_silver/silver_okta_first_last_logins.sql", "unique_id": "model.nextail.silver_okta_first_last_logins", "fqn": ["nextail", "okta", "okta_silver", "silver_okta_first_last_logins"], "alias": "silver_okta_first_last_logins", "checksum": {"name": "sha256", "checksum": "fd9cf0909f39c205c75f6b8c461f05deb775dc3c6f3119686e5978082a07f9c7"}, "config": {"enabled": false, "alias": null, "schema": "okta_silver", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["user"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "downstream", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "okta_silver", "on_configuration_change": "apply", "target_lag": "downstream", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["user"]}, "created_at": 1754287421.827768, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_okta_silver.silver_okta_first_last_logins", "raw_code": "{{\n    config(\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='downstream',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n        \n        unique_key=['user'],\n    )\n}}\n\nselect \n    email,\n    user_name,\n    count(distinct ip) as unique_ip_count,\n    array_agg(distinct country) as countries,\n    array_agg(distinct device) as devices,\n    min(datetime) as first_login_datetime,\n    max(datetime) as last_login_datetime,\n    count(distinct datetime) as login_count,\n    array_agg(user_agent) within group (order by datetime desc)[0]::TEXT as last_user_agent\nfrom {{ ref('stg_okta_login_events') }}\ngroup by email, user_name", "doc_blocks": [], "language": "sql", "refs": [{"name": "stg_okta_login_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.stg_okta_login_events": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_okta_bronze", "name": "stg_okta_login_events", "resource_type": "model", "package_name": "nextail", "path": "okta/okta_bronze/stg_okta_login_events.sql", "original_file_path": "models/okta/okta_bronze/stg_okta_login_events.sql", "unique_id": "model.nextail.stg_okta_login_events", "fqn": ["nextail", "okta", "okta_bronze", "stg_okta_login_events"], "alias": "stg_okta_login_events", "checksum": {"name": "sha256", "checksum": "4517232302c72ac4fd3c5d04409ac3418a60dd836199408df2b0486635072edb"}, "config": {"enabled": false, "alias": null, "schema": "okta_bronze", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["email", "datetime"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "incremental", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "okta_bronze", "unique_key": ["email", "datetime"]}, "created_at": 1754287421.831244, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_okta_bronze.stg_okta_login_events", "raw_code": "{{\n    config(\n        materialized='incremental',\n        unique_key=['email', 'datetime']\n    )\n}}\n\nselect \n    lower(user) as email,\n    split(email, '@')[0]::TEXT as user_name,\n    split(email, '@')[1]::TEXT as user_domain,\n    ip,\n    country,\n    device_type,\n    case \n        when upper(device_type) in ('UNKNOWN', 'COMPUTER') then 'WEB'\n        when upper(device_type) = 'MOBILE' then 'MOBILE'\n        when upper(device_type) = 'TABLET' then 'TABLET'\n        else 'OTHER'\n    end as device,\n    datetime,\n    integration,\n    event_type,\n    nullif(redirect_uri, 'null') as redirect_uri,\n    user_agent,\nfrom {{ source('okta_public', 'login_event') }}\n\n{% if is_incremental() %}\n    where datetime > (select max(datetime) from {{ this }})\n{% endif %}", "doc_blocks": [], "language": "sql", "refs": [], "sources": [["okta_public", "login_event"]], "metrics": [], "depends_on": {"macros": ["macro.dbt.is_incremental"], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}], "model.nextail.okta_login_events": [{"database": "NEXTAIL_INTERNALS_SANDBOX_DB", "schema": "DBT_nx_gold", "name": "okta_login_events", "resource_type": "model", "package_name": "nextail", "path": "okta/okta_gold/okta_login_events.sql", "original_file_path": "models/okta/okta_gold/okta_login_events.sql", "unique_id": "model.nextail.okta_login_events", "fqn": ["nextail", "okta", "okta_gold", "okta_login_events"], "alias": "okta_login_events", "checksum": {"name": "sha256", "checksum": "8889638f94f920e1afd61b0cc595088b76db7d3329623ac7d90c168568fb538b"}, "config": {"enabled": false, "alias": null, "schema": "nx_gold", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "dynamic_table", "incremental_strategy": null, "batch_size": null, "lookback": 1, "begin": null, "persist_docs": {"relation": true}, "post-hook": [], "pre-hook": [], "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": ["user", "datetime"], "on_schema_change": "ignore", "on_configuration_change": "apply", "grants": {"select": ["BI_READER_SANDBOX_RL"]}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false, "alias_types": true}, "event_time": null, "concurrent_batches": null, "access": "protected", "freshness": null, "transient": true, "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "target_lag": "24 hours", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "unrendered_config": {"materialized": "dynamic_table", "transient": true, "persist_docs": {"relation": true}, "grants": {"select": ["BI_READER_{{ 'PROD' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'PRODUCTION' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'SANDBOX' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'TEST' else 'SANDBOX' if env_var('NX_ENVIRONMENT', 'NX_ENVIRONMENT_NOT_SET') | upper == 'DEV' else 'NX_ENVIRONMENT_NOT_SET' }}_RL"]}, "enabled": false, "schema": "nx_gold", "on_configuration_change": "apply", "target_lag": "24 hours", "snowflake_warehouse": "DATAPLATFORM_INTERNAL_WH", "refresh_mode": "INCREMENTAL", "initialize": "ON_CREATE", "unique_key": ["user", "datetime"]}, "created_at": 1754287421.833983, "relation_name": "NEXTAIL_INTERNALS_SANDBOX_DB.DBT_nx_gold.okta_login_events", "raw_code": "{{\n    config(\n        materialized=\"dynamic_table\",\n        on_configuration_change=\"apply\",\n        target_lag='24 hours',\n        snowflake_warehouse=var(\"DBT_WAREHOUSE\"),\n        refresh_mode=\"INCREMENTAL\",\n        initialize=\"ON_CREATE\",\n\n        unique_key=['user', 'datetime'],\n    )\n}}\n\nselect\n    *\nfrom {{ ref('silver_okta_login_events') }}", "doc_blocks": [], "language": "sql", "refs": [{"name": "silver_okta_login_events", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": null, "contract": {"enforced": false, "alias_types": true, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null, "deprecation_date": null, "primary_key": [], "time_spine": null}]}, "parent_map": {"model.nextail.k8s_grouped_labels_per_date": ["model.nextail.stg_k8s_costs"], "model.nextail.stg_snowflake_costs": ["model.nextail.stg_query_attribution_history"], "model.nextail.stg_k8s_costs": ["model.nextail.stg_k8s_completed_jobs_all", "model.nextail.stg_k8s_kubecost_all"], "model.nextail.snowflake_grouped_labels_per_date": ["model.nextail.stg_snowflake_costs"], "model.nextail.stg_k8s_completed_jobs_all": ["model.nextail.stg_k8s_completed_jobs_prod", "model.nextail.stg_k8s_completed_jobs_sandbox"], "model.nextail.stg_k8s_kubecost_all": ["model.nextail.stg_k8s_kubecost_prod", "model.nextail.stg_k8s_kubecost_sandbox"], "model.nextail.stg_k8s_kubecost_sandbox": ["source.nextail.kubecost.kubecost_cumulative_cost_by_pod_sandbox"], "model.nextail.stg_k8s_completed_jobs_sandbox": ["source.nextail.completed_jobs.completed_jobs_sandbox"], "model.nextail.stg_k8s_completed_jobs_prod": ["source.nextail.completed_jobs.completed_jobs_prod"], "model.nextail.stg_k8s_kubecost_prod": ["source.nextail.kubecost.kubecost_cumulative_cost_by_pod_pro"], "model.nextail.stg_query_attribution_history": ["source.nextail.snowflake.query_attribution_history"], "model.nextail.k8s_snowflake_costs_by_date_label": ["model.nextail.k8s_grouped_labels_per_date", "model.nextail.snowflake_grouped_labels_per_date"], "test.nextail.not_null_snowflake_warehouse_idle_costs_warehouse_name.6ae96ac80c": [], "test.nextail.unique_snowflake_warehouse_idle_costs_warehouse_name.8eedb62dca": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_query_date.7c912a9dd6": [], "test.nextail.dbt_utils_is_timestamp_snowflake_warehouse_idle_costs_query_date.e7daf3c65d": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_running_seconds.e5fa89892e": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_running_seconds.d0f262baf3": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_idle_seconds.02f129c450": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_idle_seconds.8927ae522a": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_on_seconds.9ed34125ec": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_on_seconds.2b39e8530d": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_off_seconds.93a8f6ebae": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_off_seconds.250a8266ee": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_total_time_hours.05fde74cb2": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_total_time_hours.4e0c3c7013": [], "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_total_time_hours__24_1__23_9.57bc3c67b6": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_running_ratio.c9c1163b9d": [], "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_running_ratio__100__0.a4d09babed": [], "test.nextail.dbt_utils_equal_rowcount_snowflake_warehouse_idle_costs_ref_snowflake_warehouse_idle_costs_.7e751a4c5a": [], "test.nextail.dbt_utils_recency_snowflake_warehouse_idle_costs_day__query_date__2.1cb89f0209": [], "test.nextail.unique_stg_snowflake_costs_query_id.3018f27853": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_query_id.77194f6ad3": ["model.nextail.stg_snowflake_costs"], "test.nextail.relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_.189502f054": ["model.nextail.stg_query_attribution_history", "model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_warehouse_name.97229effc9": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_user_name.7953967e57": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_start_date.762083caad": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_start_time.869f616796": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_end_time.b0c218e633": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_query_duration_ms.1985b89106": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_snowflake_costs_credits_attributed_compute.8980094661": ["model.nextail.stg_snowflake_costs"], "test.nextail.not_null_stg_k8s_costs_pod_id.23ee443c94": ["model.nextail.stg_k8s_costs"], "test.nextail.accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX.0ad4ada3b1": ["model.nextail.stg_k8s_costs"], "test.nextail.not_null_stg_k8s_costs_start_date.32232e0ea0": ["model.nextail.stg_k8s_costs"], "test.nextail.not_null_stg_k8s_costs_start_time_utc.cbedd77659": ["model.nextail.stg_k8s_costs"], "test.nextail.not_null_stg_k8s_costs_end_time_utc.e1e0a722a6": ["model.nextail.stg_k8s_costs"], "test.nextail.not_null_stg_k8s_costs_pod_duration_seconds.e36234c5d7": ["model.nextail.stg_k8s_costs"], "test.nextail.not_null_stg_k8s_costs_image.30b0e5159e": ["model.nextail.stg_k8s_costs"], "test.nextail.dbt_utils_recency_stg_k8s_costs_days__start_date__2.56a3c6e1b9": ["model.nextail.stg_k8s_costs"], "test.nextail.accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD.30f6edce27": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_pod_id.16a61b502b": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_cpu.c3043fcd61": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_gpu.36e416435d": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_ram.cc81d75d71": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_pv.6b1217a9c5": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_network.43e8c50f41": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_loadbalancer.4533ab992b": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_external.7314091066": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_shared.e96ff4a37e": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_avg_efficiency.cb2ef16bb6": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_sum_total_cost.8ba4c0f777": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_start_date.9131e81ce8": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_kubecost_all_end_date.d4810f4f50": ["model.nextail.stg_k8s_kubecost_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_id.73b68f6b77": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD.f729a774f0": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_start_date.10d25e196c": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_start_time_utc.aceaead16f": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_end_time_utc.67e3186403": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_duration_seconds.ef0b5f7d6d": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_image.c80796fb5c": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_termination_reason.341ceebe4b": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError.6cc01b057e": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation.a29772cf7e": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting.b62849f9df": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp.0bd9bada41": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production.4573fdfa76": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_controller_uid.cbf0680a73": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name.cac80ce68a": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_job_name.bbad8c6ee0": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid.1c19f8fc25": ["model.nextail.stg_k8s_completed_jobs_all"], "test.nextail.unique_stg_query_history_query_id.74ccf61b82": [], "test.nextail.not_null_stg_query_history_query_id.a5f2833a4b": [], "test.nextail.not_null_stg_query_history_start_time.4a08e6a4d1": [], "test.nextail.not_null_stg_query_history_credits_attributed_compute.c359bf819d": [], "test.nextail.dbt_utils_recency_stg_query_history_minutes__start_time__30.1e16695958": [], "test.nextail.unique_stg_query_attribution_history_query_id.f3327a751a": ["model.nextail.stg_query_attribution_history"], "test.nextail.not_null_stg_query_attribution_history_query_id.be90035352": ["model.nextail.stg_query_attribution_history"], "test.nextail.not_null_stg_query_attribution_history_start_time.a470d62126": ["model.nextail.stg_query_attribution_history"], "test.nextail.not_null_stg_query_attribution_history_credits_attributed_compute.b22075fe48": ["model.nextail.stg_query_attribution_history"], "test.nextail.dbt_utils_recency_stg_query_attribution_history_hour__start_time__36.6dfcb209e4": ["model.nextail.stg_query_attribution_history"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_start_date.44a7a0c588": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_service.6e2f9c90b2": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1.cdac12762d": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_module.579a56c03a": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_submodule.a7e8baa0ca": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_operation.e59575f31a": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_tenant.bd227e2e47": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_environment.bdaa6b6090": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development.8448bb726d": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_correlation_id.0a0887e973": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0.1119874e61": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0.b9fa177dd4": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0.0966e3543f": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0.df81e301fb": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0.1dc32dd315": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0.ffbc7c7b6d": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0.abf569b70e": ["model.nextail.k8s_snowflake_costs_by_date_label"], "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0.d5f5dad5d0": ["model.nextail.k8s_snowflake_costs_by_date_label"], "source.nextail.snowflake.query_history": [], "source.nextail.snowflake.query_attribution_history": [], "source.nextail.completed_jobs.completed_jobs_prod": [], "source.nextail.completed_jobs.completed_jobs_sandbox": [], "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_pro": [], "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_sandbox": [], "source.nextail.ARISTOCRAZY_globaldomain_public.admin_users": [], "source.nextail.ARISTOCRAZY_globaldomain_public.first_allocation_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.category": [], "source.nextail.ARISTOCRAZY_globaldomain_public.category_item_included": [], "source.nextail.ARISTOCRAZY_globaldomain_public.products": [], "source.nextail.ARISTOCRAZY_globaldomain_public.product_history": [], "source.nextail.ARISTOCRAZY_globaldomain_public.stores": [], "source.nextail.ARISTOCRAZY_globaldomain_public.families": [], "source.nextail.ARISTOCRAZY_globaldomain_public.cron": [], "source.nextail.ARISTOCRAZY_globaldomain_public.buy_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.dio_execution_selected": [], "source.nextail.ARISTOCRAZY_globaldomain_public.engine_executions": [], "source.nextail.ARISTOCRAZY_globaldomain_public.preconfigured_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.reorder_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.replenishment_executions": [], "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_executions": [], "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ARISTOCRAZY_globaldomain_public.store_stock_items": [], "source.nextail.ARISTOCRAZY_globaldomain_public.scenario": [], "source.nextail.ARISTOCRAZY_globaldomain_public.warehouses": [], "source.nextail.ARISTOCRAZY_globaldomain_public.skus": [], "source.nextail.ARISTOCRAZY_globaldomain_public.seasons": [], "source.nextail.ARISTOCRAZY_globaldomain_public.sales": [], "source.nextail.ARISTOCRAZY_globaldomain_public.warehouse_stock_items": [], "source.nextail.ARISTOCRAZY_globaldomain_public.databasechangelog": [], "source.nextail.BIMANI_globaldomain_public.admin_users": [], "source.nextail.BIMANI_globaldomain_public.first_allocation_execution": [], "source.nextail.BIMANI_globaldomain_public.category": [], "source.nextail.BIMANI_globaldomain_public.category_item_included": [], "source.nextail.BIMANI_globaldomain_public.products": [], "source.nextail.BIMANI_globaldomain_public.product_history": [], "source.nextail.BIMANI_globaldomain_public.stores": [], "source.nextail.BIMANI_globaldomain_public.families": [], "source.nextail.BIMANI_globaldomain_public.cron": [], "source.nextail.BIMANI_globaldomain_public.buy_execution": [], "source.nextail.BIMANI_globaldomain_public.dio_execution_selected": [], "source.nextail.BIMANI_globaldomain_public.engine_executions": [], "source.nextail.BIMANI_globaldomain_public.preconfigured_execution": [], "source.nextail.BIMANI_globaldomain_public.reorder_execution": [], "source.nextail.BIMANI_globaldomain_public.replenishment_executions": [], "source.nextail.BIMANI_globaldomain_public.store_transfers_executions": [], "source.nextail.BIMANI_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.BIMANI_globaldomain_public.store_stock_items": [], "source.nextail.BIMANI_globaldomain_public.scenario": [], "source.nextail.BIMANI_globaldomain_public.warehouses": [], "source.nextail.BIMANI_globaldomain_public.skus": [], "source.nextail.BIMANI_globaldomain_public.seasons": [], "source.nextail.BIMANI_globaldomain_public.sales": [], "source.nextail.BIMANI_globaldomain_public.warehouse_stock_items": [], "source.nextail.BIMANI_globaldomain_public.databasechangelog": [], "source.nextail.BZB_globaldomain_public.admin_users": [], "source.nextail.BZB_globaldomain_public.first_allocation_execution": [], "source.nextail.BZB_globaldomain_public.category": [], "source.nextail.BZB_globaldomain_public.category_item_included": [], "source.nextail.BZB_globaldomain_public.products": [], "source.nextail.BZB_globaldomain_public.product_history": [], "source.nextail.BZB_globaldomain_public.stores": [], "source.nextail.BZB_globaldomain_public.families": [], "source.nextail.BZB_globaldomain_public.cron": [], "source.nextail.BZB_globaldomain_public.buy_execution": [], "source.nextail.BZB_globaldomain_public.dio_execution_selected": [], "source.nextail.BZB_globaldomain_public.engine_executions": [], "source.nextail.BZB_globaldomain_public.preconfigured_execution": [], "source.nextail.BZB_globaldomain_public.reorder_execution": [], "source.nextail.BZB_globaldomain_public.replenishment_executions": [], "source.nextail.BZB_globaldomain_public.store_transfers_executions": [], "source.nextail.BZB_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.BZB_globaldomain_public.store_stock_items": [], "source.nextail.BZB_globaldomain_public.scenario": [], "source.nextail.BZB_globaldomain_public.warehouses": [], "source.nextail.BZB_globaldomain_public.skus": [], "source.nextail.BZB_globaldomain_public.seasons": [], "source.nextail.BZB_globaldomain_public.sales": [], "source.nextail.BZB_globaldomain_public.warehouse_stock_items": [], "source.nextail.BZB_globaldomain_public.databasechangelog": [], "source.nextail.CALLIOPE_globaldomain_public.admin_users": [], "source.nextail.CALLIOPE_globaldomain_public.first_allocation_execution": [], "source.nextail.CALLIOPE_globaldomain_public.category": [], "source.nextail.CALLIOPE_globaldomain_public.category_item_included": [], "source.nextail.CALLIOPE_globaldomain_public.products": [], "source.nextail.CALLIOPE_globaldomain_public.product_history": [], "source.nextail.CALLIOPE_globaldomain_public.stores": [], "source.nextail.CALLIOPE_globaldomain_public.families": [], "source.nextail.CALLIOPE_globaldomain_public.cron": [], "source.nextail.CALLIOPE_globaldomain_public.buy_execution": [], "source.nextail.CALLIOPE_globaldomain_public.dio_execution_selected": [], "source.nextail.CALLIOPE_globaldomain_public.engine_executions": [], "source.nextail.CALLIOPE_globaldomain_public.preconfigured_execution": [], "source.nextail.CALLIOPE_globaldomain_public.reorder_execution": [], "source.nextail.CALLIOPE_globaldomain_public.replenishment_executions": [], "source.nextail.CALLIOPE_globaldomain_public.store_transfers_executions": [], "source.nextail.CALLIOPE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.CALLIOPE_globaldomain_public.store_stock_items": [], "source.nextail.CALLIOPE_globaldomain_public.scenario": [], "source.nextail.CALLIOPE_globaldomain_public.warehouses": [], "source.nextail.CALLIOPE_globaldomain_public.skus": [], "source.nextail.CALLIOPE_globaldomain_public.seasons": [], "source.nextail.CALLIOPE_globaldomain_public.sales": [], "source.nextail.CALLIOPE_globaldomain_public.warehouse_stock_items": [], "source.nextail.CALLIOPE_globaldomain_public.databasechangelog": [], "source.nextail.DCK_globaldomain_public.admin_users": [], "source.nextail.DCK_globaldomain_public.first_allocation_execution": [], "source.nextail.DCK_globaldomain_public.category": [], "source.nextail.DCK_globaldomain_public.category_item_included": [], "source.nextail.DCK_globaldomain_public.products": [], "source.nextail.DCK_globaldomain_public.product_history": [], "source.nextail.DCK_globaldomain_public.stores": [], "source.nextail.DCK_globaldomain_public.families": [], "source.nextail.DCK_globaldomain_public.cron": [], "source.nextail.DCK_globaldomain_public.buy_execution": [], "source.nextail.DCK_globaldomain_public.dio_execution_selected": [], "source.nextail.DCK_globaldomain_public.engine_executions": [], "source.nextail.DCK_globaldomain_public.preconfigured_execution": [], "source.nextail.DCK_globaldomain_public.reorder_execution": [], "source.nextail.DCK_globaldomain_public.replenishment_executions": [], "source.nextail.DCK_globaldomain_public.store_transfers_executions": [], "source.nextail.DCK_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.DCK_globaldomain_public.store_stock_items": [], "source.nextail.DCK_globaldomain_public.scenario": [], "source.nextail.DCK_globaldomain_public.warehouses": [], "source.nextail.DCK_globaldomain_public.skus": [], "source.nextail.DCK_globaldomain_public.seasons": [], "source.nextail.DCK_globaldomain_public.sales": [], "source.nextail.DCK_globaldomain_public.warehouse_stock_items": [], "source.nextail.DCK_globaldomain_public.databasechangelog": [], "source.nextail.DUB_globaldomain_public.admin_users": [], "source.nextail.DUB_globaldomain_public.first_allocation_execution": [], "source.nextail.DUB_globaldomain_public.category": [], "source.nextail.DUB_globaldomain_public.category_item_included": [], "source.nextail.DUB_globaldomain_public.products": [], "source.nextail.DUB_globaldomain_public.product_history": [], "source.nextail.DUB_globaldomain_public.stores": [], "source.nextail.DUB_globaldomain_public.families": [], "source.nextail.DUB_globaldomain_public.cron": [], "source.nextail.DUB_globaldomain_public.buy_execution": [], "source.nextail.DUB_globaldomain_public.dio_execution_selected": [], "source.nextail.DUB_globaldomain_public.engine_executions": [], "source.nextail.DUB_globaldomain_public.preconfigured_execution": [], "source.nextail.DUB_globaldomain_public.reorder_execution": [], "source.nextail.DUB_globaldomain_public.replenishment_executions": [], "source.nextail.DUB_globaldomain_public.store_transfers_executions": [], "source.nextail.DUB_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.DUB_globaldomain_public.store_stock_items": [], "source.nextail.DUB_globaldomain_public.scenario": [], "source.nextail.DUB_globaldomain_public.warehouses": [], "source.nextail.DUB_globaldomain_public.skus": [], "source.nextail.DUB_globaldomain_public.seasons": [], "source.nextail.DUB_globaldomain_public.sales": [], "source.nextail.DUB_globaldomain_public.warehouse_stock_items": [], "source.nextail.DUB_globaldomain_public.databasechangelog": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.admin_users": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category_item_included": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.products": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.product_history": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.stores": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.families": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.cron": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.buy_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.engine_executions": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.reorder_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.replenishment_executions": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_stock_items": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.scenario": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouses": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.skus": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.seasons": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.sales": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.databasechangelog": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.admin_users": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.first_allocation_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category_item_included": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.products": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.product_history": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.stores": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.families": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.cron": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.buy_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.dio_execution_selected": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.engine_executions": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.preconfigured_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.reorder_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.replenishment_executions": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_executions": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_stock_items": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.scenario": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouses": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.skus": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.seasons": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.sales": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.databasechangelog": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.admin_users": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.category": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.category_item_included": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.products": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.product_history": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.stores": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.families": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.cron": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.buy_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.engine_executions": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.reorder_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.replenishment_executions": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_stock_items": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.scenario": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouses": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.skus": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.seasons": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.sales": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.databasechangelog": [], "source.nextail.ECIGAP_globaldomain_public.admin_users": [], "source.nextail.ECIGAP_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIGAP_globaldomain_public.category": [], "source.nextail.ECIGAP_globaldomain_public.category_item_included": [], "source.nextail.ECIGAP_globaldomain_public.products": [], "source.nextail.ECIGAP_globaldomain_public.product_history": [], "source.nextail.ECIGAP_globaldomain_public.stores": [], "source.nextail.ECIGAP_globaldomain_public.families": [], "source.nextail.ECIGAP_globaldomain_public.cron": [], "source.nextail.ECIGAP_globaldomain_public.buy_execution": [], "source.nextail.ECIGAP_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIGAP_globaldomain_public.engine_executions": [], "source.nextail.ECIGAP_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIGAP_globaldomain_public.reorder_execution": [], "source.nextail.ECIGAP_globaldomain_public.replenishment_executions": [], "source.nextail.ECIGAP_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIGAP_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIGAP_globaldomain_public.store_stock_items": [], "source.nextail.ECIGAP_globaldomain_public.scenario": [], "source.nextail.ECIGAP_globaldomain_public.warehouses": [], "source.nextail.ECIGAP_globaldomain_public.skus": [], "source.nextail.ECIGAP_globaldomain_public.seasons": [], "source.nextail.ECIGAP_globaldomain_public.sales": [], "source.nextail.ECIGAP_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIGAP_globaldomain_public.databasechangelog": [], "source.nextail.ECIKIDS_globaldomain_public.admin_users": [], "source.nextail.ECIKIDS_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIKIDS_globaldomain_public.category": [], "source.nextail.ECIKIDS_globaldomain_public.category_item_included": [], "source.nextail.ECIKIDS_globaldomain_public.products": [], "source.nextail.ECIKIDS_globaldomain_public.product_history": [], "source.nextail.ECIKIDS_globaldomain_public.stores": [], "source.nextail.ECIKIDS_globaldomain_public.families": [], "source.nextail.ECIKIDS_globaldomain_public.cron": [], "source.nextail.ECIKIDS_globaldomain_public.buy_execution": [], "source.nextail.ECIKIDS_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIKIDS_globaldomain_public.engine_executions": [], "source.nextail.ECIKIDS_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIKIDS_globaldomain_public.reorder_execution": [], "source.nextail.ECIKIDS_globaldomain_public.replenishment_executions": [], "source.nextail.ECIKIDS_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIKIDS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIKIDS_globaldomain_public.store_stock_items": [], "source.nextail.ECIKIDS_globaldomain_public.scenario": [], "source.nextail.ECIKIDS_globaldomain_public.warehouses": [], "source.nextail.ECIKIDS_globaldomain_public.skus": [], "source.nextail.ECIKIDS_globaldomain_public.seasons": [], "source.nextail.ECIKIDS_globaldomain_public.sales": [], "source.nextail.ECIKIDS_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIKIDS_globaldomain_public.databasechangelog": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.admin_users": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.first_allocation_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.category": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.category_item_included": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.products": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.product_history": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.stores": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.families": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.cron": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.buy_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.dio_execution_selected": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.engine_executions": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.preconfigured_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.reorder_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.replenishment_executions": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_executions": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.store_stock_items": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.scenario": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouses": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.skus": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.seasons": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.sales": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.databasechangelog": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.admin_users": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category_item_included": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.products": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.product_history": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.stores": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.families": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.cron": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.buy_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.engine_executions": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.reorder_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.replenishment_executions": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_stock_items": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.scenario": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouses": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.skus": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.seasons": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.sales": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.databasechangelog": [], "source.nextail.ECRU_globaldomain_public.admin_users": [], "source.nextail.ECRU_globaldomain_public.first_allocation_execution": [], "source.nextail.ECRU_globaldomain_public.category": [], "source.nextail.ECRU_globaldomain_public.category_item_included": [], "source.nextail.ECRU_globaldomain_public.products": [], "source.nextail.ECRU_globaldomain_public.product_history": [], "source.nextail.ECRU_globaldomain_public.stores": [], "source.nextail.ECRU_globaldomain_public.families": [], "source.nextail.ECRU_globaldomain_public.cron": [], "source.nextail.ECRU_globaldomain_public.buy_execution": [], "source.nextail.ECRU_globaldomain_public.dio_execution_selected": [], "source.nextail.ECRU_globaldomain_public.engine_executions": [], "source.nextail.ECRU_globaldomain_public.preconfigured_execution": [], "source.nextail.ECRU_globaldomain_public.reorder_execution": [], "source.nextail.ECRU_globaldomain_public.replenishment_executions": [], "source.nextail.ECRU_globaldomain_public.store_transfers_executions": [], "source.nextail.ECRU_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECRU_globaldomain_public.store_stock_items": [], "source.nextail.ECRU_globaldomain_public.scenario": [], "source.nextail.ECRU_globaldomain_public.warehouses": [], "source.nextail.ECRU_globaldomain_public.skus": [], "source.nextail.ECRU_globaldomain_public.seasons": [], "source.nextail.ECRU_globaldomain_public.sales": [], "source.nextail.ECRU_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECRU_globaldomain_public.databasechangelog": [], "source.nextail.ETHNICITY_globaldomain_public.admin_users": [], "source.nextail.ETHNICITY_globaldomain_public.first_allocation_execution": [], "source.nextail.ETHNICITY_globaldomain_public.category": [], "source.nextail.ETHNICITY_globaldomain_public.category_item_included": [], "source.nextail.ETHNICITY_globaldomain_public.products": [], "source.nextail.ETHNICITY_globaldomain_public.product_history": [], "source.nextail.ETHNICITY_globaldomain_public.stores": [], "source.nextail.ETHNICITY_globaldomain_public.families": [], "source.nextail.ETHNICITY_globaldomain_public.cron": [], "source.nextail.ETHNICITY_globaldomain_public.buy_execution": [], "source.nextail.ETHNICITY_globaldomain_public.dio_execution_selected": [], "source.nextail.ETHNICITY_globaldomain_public.engine_executions": [], "source.nextail.ETHNICITY_globaldomain_public.preconfigured_execution": [], "source.nextail.ETHNICITY_globaldomain_public.reorder_execution": [], "source.nextail.ETHNICITY_globaldomain_public.replenishment_executions": [], "source.nextail.ETHNICITY_globaldomain_public.store_transfers_executions": [], "source.nextail.ETHNICITY_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ETHNICITY_globaldomain_public.store_stock_items": [], "source.nextail.ETHNICITY_globaldomain_public.scenario": [], "source.nextail.ETHNICITY_globaldomain_public.warehouses": [], "source.nextail.ETHNICITY_globaldomain_public.skus": [], "source.nextail.ETHNICITY_globaldomain_public.seasons": [], "source.nextail.ETHNICITY_globaldomain_public.sales": [], "source.nextail.ETHNICITY_globaldomain_public.warehouse_stock_items": [], "source.nextail.ETHNICITY_globaldomain_public.databasechangelog": [], "source.nextail.FLYINGTIGER_globaldomain_public.admin_users": [], "source.nextail.FLYINGTIGER_globaldomain_public.first_allocation_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.category": [], "source.nextail.FLYINGTIGER_globaldomain_public.category_item_included": [], "source.nextail.FLYINGTIGER_globaldomain_public.products": [], "source.nextail.FLYINGTIGER_globaldomain_public.product_history": [], "source.nextail.FLYINGTIGER_globaldomain_public.stores": [], "source.nextail.FLYINGTIGER_globaldomain_public.families": [], "source.nextail.FLYINGTIGER_globaldomain_public.cron": [], "source.nextail.FLYINGTIGER_globaldomain_public.buy_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.dio_execution_selected": [], "source.nextail.FLYINGTIGER_globaldomain_public.engine_executions": [], "source.nextail.FLYINGTIGER_globaldomain_public.preconfigured_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.reorder_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.replenishment_executions": [], "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_executions": [], "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.FLYINGTIGER_globaldomain_public.store_stock_items": [], "source.nextail.FLYINGTIGER_globaldomain_public.scenario": [], "source.nextail.FLYINGTIGER_globaldomain_public.warehouses": [], "source.nextail.FLYINGTIGER_globaldomain_public.skus": [], "source.nextail.FLYINGTIGER_globaldomain_public.seasons": [], "source.nextail.FLYINGTIGER_globaldomain_public.sales": [], "source.nextail.FLYINGTIGER_globaldomain_public.warehouse_stock_items": [], "source.nextail.FLYINGTIGER_globaldomain_public.databasechangelog": [], "source.nextail.FOOTGEAR_globaldomain_public.admin_users": [], "source.nextail.FOOTGEAR_globaldomain_public.first_allocation_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.category": [], "source.nextail.FOOTGEAR_globaldomain_public.category_item_included": [], "source.nextail.FOOTGEAR_globaldomain_public.products": [], "source.nextail.FOOTGEAR_globaldomain_public.product_history": [], "source.nextail.FOOTGEAR_globaldomain_public.stores": [], "source.nextail.FOOTGEAR_globaldomain_public.families": [], "source.nextail.FOOTGEAR_globaldomain_public.cron": [], "source.nextail.FOOTGEAR_globaldomain_public.buy_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.dio_execution_selected": [], "source.nextail.FOOTGEAR_globaldomain_public.engine_executions": [], "source.nextail.FOOTGEAR_globaldomain_public.preconfigured_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.reorder_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.replenishment_executions": [], "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_executions": [], "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.FOOTGEAR_globaldomain_public.store_stock_items": [], "source.nextail.FOOTGEAR_globaldomain_public.scenario": [], "source.nextail.FOOTGEAR_globaldomain_public.warehouses": [], "source.nextail.FOOTGEAR_globaldomain_public.skus": [], "source.nextail.FOOTGEAR_globaldomain_public.seasons": [], "source.nextail.FOOTGEAR_globaldomain_public.sales": [], "source.nextail.FOOTGEAR_globaldomain_public.warehouse_stock_items": [], "source.nextail.FOOTGEAR_globaldomain_public.databasechangelog": [], "source.nextail.FOREVERNEW_globaldomain_public.admin_users": [], "source.nextail.FOREVERNEW_globaldomain_public.first_allocation_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.category": [], "source.nextail.FOREVERNEW_globaldomain_public.category_item_included": [], "source.nextail.FOREVERNEW_globaldomain_public.products": [], "source.nextail.FOREVERNEW_globaldomain_public.product_history": [], "source.nextail.FOREVERNEW_globaldomain_public.stores": [], "source.nextail.FOREVERNEW_globaldomain_public.families": [], "source.nextail.FOREVERNEW_globaldomain_public.cron": [], "source.nextail.FOREVERNEW_globaldomain_public.buy_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.dio_execution_selected": [], "source.nextail.FOREVERNEW_globaldomain_public.engine_executions": [], "source.nextail.FOREVERNEW_globaldomain_public.preconfigured_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.reorder_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.replenishment_executions": [], "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_executions": [], "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.FOREVERNEW_globaldomain_public.store_stock_items": [], "source.nextail.FOREVERNEW_globaldomain_public.scenario": [], "source.nextail.FOREVERNEW_globaldomain_public.warehouses": [], "source.nextail.FOREVERNEW_globaldomain_public.skus": [], "source.nextail.FOREVERNEW_globaldomain_public.seasons": [], "source.nextail.FOREVERNEW_globaldomain_public.sales": [], "source.nextail.FOREVERNEW_globaldomain_public.warehouse_stock_items": [], "source.nextail.FOREVERNEW_globaldomain_public.databasechangelog": [], "source.nextail.GINATRICOT_globaldomain_public.admin_users": [], "source.nextail.GINATRICOT_globaldomain_public.first_allocation_execution": [], "source.nextail.GINATRICOT_globaldomain_public.category": [], "source.nextail.GINATRICOT_globaldomain_public.category_item_included": [], "source.nextail.GINATRICOT_globaldomain_public.products": [], "source.nextail.GINATRICOT_globaldomain_public.product_history": [], "source.nextail.GINATRICOT_globaldomain_public.stores": [], "source.nextail.GINATRICOT_globaldomain_public.families": [], "source.nextail.GINATRICOT_globaldomain_public.cron": [], "source.nextail.GINATRICOT_globaldomain_public.buy_execution": [], "source.nextail.GINATRICOT_globaldomain_public.dio_execution_selected": [], "source.nextail.GINATRICOT_globaldomain_public.engine_executions": [], "source.nextail.GINATRICOT_globaldomain_public.preconfigured_execution": [], "source.nextail.GINATRICOT_globaldomain_public.reorder_execution": [], "source.nextail.GINATRICOT_globaldomain_public.replenishment_executions": [], "source.nextail.GINATRICOT_globaldomain_public.store_transfers_executions": [], "source.nextail.GINATRICOT_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GINATRICOT_globaldomain_public.store_stock_items": [], "source.nextail.GINATRICOT_globaldomain_public.scenario": [], "source.nextail.GINATRICOT_globaldomain_public.warehouses": [], "source.nextail.GINATRICOT_globaldomain_public.skus": [], "source.nextail.GINATRICOT_globaldomain_public.seasons": [], "source.nextail.GINATRICOT_globaldomain_public.sales": [], "source.nextail.GINATRICOT_globaldomain_public.warehouse_stock_items": [], "source.nextail.GINATRICOT_globaldomain_public.databasechangelog": [], "source.nextail.GSTARRETAIL_globaldomain_public.admin_users": [], "source.nextail.GSTARRETAIL_globaldomain_public.first_allocation_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.category": [], "source.nextail.GSTARRETAIL_globaldomain_public.category_item_included": [], "source.nextail.GSTARRETAIL_globaldomain_public.products": [], "source.nextail.GSTARRETAIL_globaldomain_public.product_history": [], "source.nextail.GSTARRETAIL_globaldomain_public.stores": [], "source.nextail.GSTARRETAIL_globaldomain_public.families": [], "source.nextail.GSTARRETAIL_globaldomain_public.cron": [], "source.nextail.GSTARRETAIL_globaldomain_public.buy_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.dio_execution_selected": [], "source.nextail.GSTARRETAIL_globaldomain_public.engine_executions": [], "source.nextail.GSTARRETAIL_globaldomain_public.preconfigured_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.reorder_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.replenishment_executions": [], "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_executions": [], "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GSTARRETAIL_globaldomain_public.store_stock_items": [], "source.nextail.GSTARRETAIL_globaldomain_public.scenario": [], "source.nextail.GSTARRETAIL_globaldomain_public.warehouses": [], "source.nextail.GSTARRETAIL_globaldomain_public.skus": [], "source.nextail.GSTARRETAIL_globaldomain_public.seasons": [], "source.nextail.GSTARRETAIL_globaldomain_public.sales": [], "source.nextail.GSTARRETAIL_globaldomain_public.warehouse_stock_items": [], "source.nextail.GSTARRETAIL_globaldomain_public.databasechangelog": [], "source.nextail.GSTAR_globaldomain_public.admin_users": [], "source.nextail.GSTAR_globaldomain_public.first_allocation_execution": [], "source.nextail.GSTAR_globaldomain_public.category": [], "source.nextail.GSTAR_globaldomain_public.category_item_included": [], "source.nextail.GSTAR_globaldomain_public.products": [], "source.nextail.GSTAR_globaldomain_public.product_history": [], "source.nextail.GSTAR_globaldomain_public.stores": [], "source.nextail.GSTAR_globaldomain_public.families": [], "source.nextail.GSTAR_globaldomain_public.cron": [], "source.nextail.GSTAR_globaldomain_public.buy_execution": [], "source.nextail.GSTAR_globaldomain_public.dio_execution_selected": [], "source.nextail.GSTAR_globaldomain_public.engine_executions": [], "source.nextail.GSTAR_globaldomain_public.preconfigured_execution": [], "source.nextail.GSTAR_globaldomain_public.reorder_execution": [], "source.nextail.GSTAR_globaldomain_public.replenishment_executions": [], "source.nextail.GSTAR_globaldomain_public.store_transfers_executions": [], "source.nextail.GSTAR_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GSTAR_globaldomain_public.store_stock_items": [], "source.nextail.GSTAR_globaldomain_public.scenario": [], "source.nextail.GSTAR_globaldomain_public.warehouses": [], "source.nextail.GSTAR_globaldomain_public.skus": [], "source.nextail.GSTAR_globaldomain_public.seasons": [], "source.nextail.GSTAR_globaldomain_public.sales": [], "source.nextail.GSTAR_globaldomain_public.warehouse_stock_items": [], "source.nextail.GSTAR_globaldomain_public.databasechangelog": [], "source.nextail.GUESSEMEA_globaldomain_public.admin_users": [], "source.nextail.GUESSEMEA_globaldomain_public.first_allocation_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.category": [], "source.nextail.GUESSEMEA_globaldomain_public.category_item_included": [], "source.nextail.GUESSEMEA_globaldomain_public.products": [], "source.nextail.GUESSEMEA_globaldomain_public.product_history": [], "source.nextail.GUESSEMEA_globaldomain_public.stores": [], "source.nextail.GUESSEMEA_globaldomain_public.families": [], "source.nextail.GUESSEMEA_globaldomain_public.cron": [], "source.nextail.GUESSEMEA_globaldomain_public.buy_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.dio_execution_selected": [], "source.nextail.GUESSEMEA_globaldomain_public.engine_executions": [], "source.nextail.GUESSEMEA_globaldomain_public.preconfigured_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.reorder_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.replenishment_executions": [], "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_executions": [], "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GUESSEMEA_globaldomain_public.store_stock_items": [], "source.nextail.GUESSEMEA_globaldomain_public.scenario": [], "source.nextail.GUESSEMEA_globaldomain_public.warehouses": [], "source.nextail.GUESSEMEA_globaldomain_public.skus": [], "source.nextail.GUESSEMEA_globaldomain_public.seasons": [], "source.nextail.GUESSEMEA_globaldomain_public.sales": [], "source.nextail.GUESSEMEA_globaldomain_public.warehouse_stock_items": [], "source.nextail.GUESSEMEA_globaldomain_public.databasechangelog": [], "source.nextail.GUESSUS_globaldomain_public.admin_users": [], "source.nextail.GUESSUS_globaldomain_public.first_allocation_execution": [], "source.nextail.GUESSUS_globaldomain_public.category": [], "source.nextail.GUESSUS_globaldomain_public.category_item_included": [], "source.nextail.GUESSUS_globaldomain_public.products": [], "source.nextail.GUESSUS_globaldomain_public.product_history": [], "source.nextail.GUESSUS_globaldomain_public.stores": [], "source.nextail.GUESSUS_globaldomain_public.families": [], "source.nextail.GUESSUS_globaldomain_public.cron": [], "source.nextail.GUESSUS_globaldomain_public.buy_execution": [], "source.nextail.GUESSUS_globaldomain_public.dio_execution_selected": [], "source.nextail.GUESSUS_globaldomain_public.engine_executions": [], "source.nextail.GUESSUS_globaldomain_public.preconfigured_execution": [], "source.nextail.GUESSUS_globaldomain_public.reorder_execution": [], "source.nextail.GUESSUS_globaldomain_public.replenishment_executions": [], "source.nextail.GUESSUS_globaldomain_public.store_transfers_executions": [], "source.nextail.GUESSUS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GUESSUS_globaldomain_public.store_stock_items": [], "source.nextail.GUESSUS_globaldomain_public.scenario": [], "source.nextail.GUESSUS_globaldomain_public.warehouses": [], "source.nextail.GUESSUS_globaldomain_public.skus": [], "source.nextail.GUESSUS_globaldomain_public.seasons": [], "source.nextail.GUESSUS_globaldomain_public.sales": [], "source.nextail.GUESSUS_globaldomain_public.warehouse_stock_items": [], "source.nextail.GUESSUS_globaldomain_public.databasechangelog": [], "source.nextail.HACKETT_globaldomain_public.admin_users": [], "source.nextail.HACKETT_globaldomain_public.first_allocation_execution": [], "source.nextail.HACKETT_globaldomain_public.category": [], "source.nextail.HACKETT_globaldomain_public.category_item_included": [], "source.nextail.HACKETT_globaldomain_public.products": [], "source.nextail.HACKETT_globaldomain_public.product_history": [], "source.nextail.HACKETT_globaldomain_public.stores": [], "source.nextail.HACKETT_globaldomain_public.families": [], "source.nextail.HACKETT_globaldomain_public.cron": [], "source.nextail.HACKETT_globaldomain_public.buy_execution": [], "source.nextail.HACKETT_globaldomain_public.dio_execution_selected": [], "source.nextail.HACKETT_globaldomain_public.engine_executions": [], "source.nextail.HACKETT_globaldomain_public.preconfigured_execution": [], "source.nextail.HACKETT_globaldomain_public.reorder_execution": [], "source.nextail.HACKETT_globaldomain_public.replenishment_executions": [], "source.nextail.HACKETT_globaldomain_public.store_transfers_executions": [], "source.nextail.HACKETT_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.HACKETT_globaldomain_public.store_stock_items": [], "source.nextail.HACKETT_globaldomain_public.scenario": [], "source.nextail.HACKETT_globaldomain_public.warehouses": [], "source.nextail.HACKETT_globaldomain_public.skus": [], "source.nextail.HACKETT_globaldomain_public.seasons": [], "source.nextail.HACKETT_globaldomain_public.sales": [], "source.nextail.HACKETT_globaldomain_public.warehouse_stock_items": [], "source.nextail.HACKETT_globaldomain_public.databasechangelog": [], "source.nextail.JOTT_globaldomain_public.admin_users": [], "source.nextail.JOTT_globaldomain_public.first_allocation_execution": [], "source.nextail.JOTT_globaldomain_public.category": [], "source.nextail.JOTT_globaldomain_public.category_item_included": [], "source.nextail.JOTT_globaldomain_public.products": [], "source.nextail.JOTT_globaldomain_public.product_history": [], "source.nextail.JOTT_globaldomain_public.stores": [], "source.nextail.JOTT_globaldomain_public.families": [], "source.nextail.JOTT_globaldomain_public.cron": [], "source.nextail.JOTT_globaldomain_public.buy_execution": [], "source.nextail.JOTT_globaldomain_public.dio_execution_selected": [], "source.nextail.JOTT_globaldomain_public.engine_executions": [], "source.nextail.JOTT_globaldomain_public.preconfigured_execution": [], "source.nextail.JOTT_globaldomain_public.reorder_execution": [], "source.nextail.JOTT_globaldomain_public.replenishment_executions": [], "source.nextail.JOTT_globaldomain_public.store_transfers_executions": [], "source.nextail.JOTT_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.JOTT_globaldomain_public.store_stock_items": [], "source.nextail.JOTT_globaldomain_public.scenario": [], "source.nextail.JOTT_globaldomain_public.warehouses": [], "source.nextail.JOTT_globaldomain_public.skus": [], "source.nextail.JOTT_globaldomain_public.seasons": [], "source.nextail.JOTT_globaldomain_public.sales": [], "source.nextail.JOTT_globaldomain_public.warehouse_stock_items": [], "source.nextail.JOTT_globaldomain_public.databasechangelog": [], "source.nextail.JULES_globaldomain_public.admin_users": [], "source.nextail.JULES_globaldomain_public.first_allocation_execution": [], "source.nextail.JULES_globaldomain_public.category": [], "source.nextail.JULES_globaldomain_public.category_item_included": [], "source.nextail.JULES_globaldomain_public.products": [], "source.nextail.JULES_globaldomain_public.product_history": [], "source.nextail.JULES_globaldomain_public.stores": [], "source.nextail.JULES_globaldomain_public.families": [], "source.nextail.JULES_globaldomain_public.cron": [], "source.nextail.JULES_globaldomain_public.buy_execution": [], "source.nextail.JULES_globaldomain_public.dio_execution_selected": [], "source.nextail.JULES_globaldomain_public.engine_executions": [], "source.nextail.JULES_globaldomain_public.preconfigured_execution": [], "source.nextail.JULES_globaldomain_public.reorder_execution": [], "source.nextail.JULES_globaldomain_public.replenishment_executions": [], "source.nextail.JULES_globaldomain_public.store_transfers_executions": [], "source.nextail.JULES_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.JULES_globaldomain_public.store_stock_items": [], "source.nextail.JULES_globaldomain_public.scenario": [], "source.nextail.JULES_globaldomain_public.warehouses": [], "source.nextail.JULES_globaldomain_public.skus": [], "source.nextail.JULES_globaldomain_public.seasons": [], "source.nextail.JULES_globaldomain_public.sales": [], "source.nextail.JULES_globaldomain_public.warehouse_stock_items": [], "source.nextail.JULES_globaldomain_public.databasechangelog": [], "source.nextail.MAAG_globaldomain_public.admin_users": [], "source.nextail.MAAG_globaldomain_public.first_allocation_execution": [], "source.nextail.MAAG_globaldomain_public.category": [], "source.nextail.MAAG_globaldomain_public.category_item_included": [], "source.nextail.MAAG_globaldomain_public.products": [], "source.nextail.MAAG_globaldomain_public.product_history": [], "source.nextail.MAAG_globaldomain_public.stores": [], "source.nextail.MAAG_globaldomain_public.families": [], "source.nextail.MAAG_globaldomain_public.cron": [], "source.nextail.MAAG_globaldomain_public.buy_execution": [], "source.nextail.MAAG_globaldomain_public.dio_execution_selected": [], "source.nextail.MAAG_globaldomain_public.engine_executions": [], "source.nextail.MAAG_globaldomain_public.preconfigured_execution": [], "source.nextail.MAAG_globaldomain_public.reorder_execution": [], "source.nextail.MAAG_globaldomain_public.replenishment_executions": [], "source.nextail.MAAG_globaldomain_public.store_transfers_executions": [], "source.nextail.MAAG_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MAAG_globaldomain_public.store_stock_items": [], "source.nextail.MAAG_globaldomain_public.scenario": [], "source.nextail.MAAG_globaldomain_public.warehouses": [], "source.nextail.MAAG_globaldomain_public.skus": [], "source.nextail.MAAG_globaldomain_public.seasons": [], "source.nextail.MAAG_globaldomain_public.sales": [], "source.nextail.MAAG_globaldomain_public.warehouse_stock_items": [], "source.nextail.MAAG_globaldomain_public.databasechangelog": [], "source.nextail.MERKAL_globaldomain_public.admin_users": [], "source.nextail.MERKAL_globaldomain_public.first_allocation_execution": [], "source.nextail.MERKAL_globaldomain_public.category": [], "source.nextail.MERKAL_globaldomain_public.category_item_included": [], "source.nextail.MERKAL_globaldomain_public.products": [], "source.nextail.MERKAL_globaldomain_public.product_history": [], "source.nextail.MERKAL_globaldomain_public.stores": [], "source.nextail.MERKAL_globaldomain_public.families": [], "source.nextail.MERKAL_globaldomain_public.cron": [], "source.nextail.MERKAL_globaldomain_public.buy_execution": [], "source.nextail.MERKAL_globaldomain_public.dio_execution_selected": [], "source.nextail.MERKAL_globaldomain_public.engine_executions": [], "source.nextail.MERKAL_globaldomain_public.preconfigured_execution": [], "source.nextail.MERKAL_globaldomain_public.reorder_execution": [], "source.nextail.MERKAL_globaldomain_public.replenishment_executions": [], "source.nextail.MERKAL_globaldomain_public.store_transfers_executions": [], "source.nextail.MERKAL_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MERKAL_globaldomain_public.store_stock_items": [], "source.nextail.MERKAL_globaldomain_public.scenario": [], "source.nextail.MERKAL_globaldomain_public.warehouses": [], "source.nextail.MERKAL_globaldomain_public.skus": [], "source.nextail.MERKAL_globaldomain_public.seasons": [], "source.nextail.MERKAL_globaldomain_public.sales": [], "source.nextail.MERKAL_globaldomain_public.warehouse_stock_items": [], "source.nextail.MERKAL_globaldomain_public.databasechangelog": [], "source.nextail.METROBRANDS_globaldomain_public.admin_users": [], "source.nextail.METROBRANDS_globaldomain_public.first_allocation_execution": [], "source.nextail.METROBRANDS_globaldomain_public.category": [], "source.nextail.METROBRANDS_globaldomain_public.category_item_included": [], "source.nextail.METROBRANDS_globaldomain_public.products": [], "source.nextail.METROBRANDS_globaldomain_public.product_history": [], "source.nextail.METROBRANDS_globaldomain_public.stores": [], "source.nextail.METROBRANDS_globaldomain_public.families": [], "source.nextail.METROBRANDS_globaldomain_public.cron": [], "source.nextail.METROBRANDS_globaldomain_public.buy_execution": [], "source.nextail.METROBRANDS_globaldomain_public.dio_execution_selected": [], "source.nextail.METROBRANDS_globaldomain_public.engine_executions": [], "source.nextail.METROBRANDS_globaldomain_public.preconfigured_execution": [], "source.nextail.METROBRANDS_globaldomain_public.reorder_execution": [], "source.nextail.METROBRANDS_globaldomain_public.replenishment_executions": [], "source.nextail.METROBRANDS_globaldomain_public.store_transfers_executions": [], "source.nextail.METROBRANDS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.METROBRANDS_globaldomain_public.store_stock_items": [], "source.nextail.METROBRANDS_globaldomain_public.scenario": [], "source.nextail.METROBRANDS_globaldomain_public.warehouses": [], "source.nextail.METROBRANDS_globaldomain_public.skus": [], "source.nextail.METROBRANDS_globaldomain_public.seasons": [], "source.nextail.METROBRANDS_globaldomain_public.sales": [], "source.nextail.METROBRANDS_globaldomain_public.warehouse_stock_items": [], "source.nextail.METROBRANDS_globaldomain_public.databasechangelog": [], "source.nextail.MFG_globaldomain_public.admin_users": [], "source.nextail.MFG_globaldomain_public.first_allocation_execution": [], "source.nextail.MFG_globaldomain_public.category": [], "source.nextail.MFG_globaldomain_public.category_item_included": [], "source.nextail.MFG_globaldomain_public.products": [], "source.nextail.MFG_globaldomain_public.product_history": [], "source.nextail.MFG_globaldomain_public.stores": [], "source.nextail.MFG_globaldomain_public.families": [], "source.nextail.MFG_globaldomain_public.cron": [], "source.nextail.MFG_globaldomain_public.buy_execution": [], "source.nextail.MFG_globaldomain_public.dio_execution_selected": [], "source.nextail.MFG_globaldomain_public.engine_executions": [], "source.nextail.MFG_globaldomain_public.preconfigured_execution": [], "source.nextail.MFG_globaldomain_public.reorder_execution": [], "source.nextail.MFG_globaldomain_public.replenishment_executions": [], "source.nextail.MFG_globaldomain_public.store_transfers_executions": [], "source.nextail.MFG_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MFG_globaldomain_public.store_stock_items": [], "source.nextail.MFG_globaldomain_public.scenario": [], "source.nextail.MFG_globaldomain_public.warehouses": [], "source.nextail.MFG_globaldomain_public.skus": [], "source.nextail.MFG_globaldomain_public.seasons": [], "source.nextail.MFG_globaldomain_public.sales": [], "source.nextail.MFG_globaldomain_public.warehouse_stock_items": [], "source.nextail.MFG_globaldomain_public.databasechangelog": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.admin_users": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.first_allocation_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category_item_included": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.products": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.product_history": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.stores": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.families": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.cron": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.buy_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.dio_execution_selected": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.engine_executions": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.preconfigured_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.reorder_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.replenishment_executions": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_executions": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_stock_items": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.scenario": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouses": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.skus": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.seasons": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.sales": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouse_stock_items": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.databasechangelog": [], "source.nextail.PEPE_globaldomain_public.admin_users": [], "source.nextail.PEPE_globaldomain_public.first_allocation_execution": [], "source.nextail.PEPE_globaldomain_public.category": [], "source.nextail.PEPE_globaldomain_public.category_item_included": [], "source.nextail.PEPE_globaldomain_public.products": [], "source.nextail.PEPE_globaldomain_public.product_history": [], "source.nextail.PEPE_globaldomain_public.stores": [], "source.nextail.PEPE_globaldomain_public.families": [], "source.nextail.PEPE_globaldomain_public.cron": [], "source.nextail.PEPE_globaldomain_public.buy_execution": [], "source.nextail.PEPE_globaldomain_public.dio_execution_selected": [], "source.nextail.PEPE_globaldomain_public.engine_executions": [], "source.nextail.PEPE_globaldomain_public.preconfigured_execution": [], "source.nextail.PEPE_globaldomain_public.reorder_execution": [], "source.nextail.PEPE_globaldomain_public.replenishment_executions": [], "source.nextail.PEPE_globaldomain_public.store_transfers_executions": [], "source.nextail.PEPE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.PEPE_globaldomain_public.store_stock_items": [], "source.nextail.PEPE_globaldomain_public.scenario": [], "source.nextail.PEPE_globaldomain_public.warehouses": [], "source.nextail.PEPE_globaldomain_public.skus": [], "source.nextail.PEPE_globaldomain_public.seasons": [], "source.nextail.PEPE_globaldomain_public.sales": [], "source.nextail.PEPE_globaldomain_public.warehouse_stock_items": [], "source.nextail.PEPE_globaldomain_public.databasechangelog": [], "source.nextail.RIVERISLAND_globaldomain_public.admin_users": [], "source.nextail.RIVERISLAND_globaldomain_public.first_allocation_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.category": [], "source.nextail.RIVERISLAND_globaldomain_public.category_item_included": [], "source.nextail.RIVERISLAND_globaldomain_public.products": [], "source.nextail.RIVERISLAND_globaldomain_public.product_history": [], "source.nextail.RIVERISLAND_globaldomain_public.stores": [], "source.nextail.RIVERISLAND_globaldomain_public.families": [], "source.nextail.RIVERISLAND_globaldomain_public.cron": [], "source.nextail.RIVERISLAND_globaldomain_public.buy_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.dio_execution_selected": [], "source.nextail.RIVERISLAND_globaldomain_public.engine_executions": [], "source.nextail.RIVERISLAND_globaldomain_public.preconfigured_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.reorder_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.replenishment_executions": [], "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_executions": [], "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.RIVERISLAND_globaldomain_public.store_stock_items": [], "source.nextail.RIVERISLAND_globaldomain_public.scenario": [], "source.nextail.RIVERISLAND_globaldomain_public.warehouses": [], "source.nextail.RIVERISLAND_globaldomain_public.skus": [], "source.nextail.RIVERISLAND_globaldomain_public.seasons": [], "source.nextail.RIVERISLAND_globaldomain_public.sales": [], "source.nextail.RIVERISLAND_globaldomain_public.warehouse_stock_items": [], "source.nextail.RIVERISLAND_globaldomain_public.databasechangelog": [], "source.nextail.SCOTTA_globaldomain_public.admin_users": [], "source.nextail.SCOTTA_globaldomain_public.first_allocation_execution": [], "source.nextail.SCOTTA_globaldomain_public.category": [], "source.nextail.SCOTTA_globaldomain_public.category_item_included": [], "source.nextail.SCOTTA_globaldomain_public.products": [], "source.nextail.SCOTTA_globaldomain_public.product_history": [], "source.nextail.SCOTTA_globaldomain_public.stores": [], "source.nextail.SCOTTA_globaldomain_public.families": [], "source.nextail.SCOTTA_globaldomain_public.cron": [], "source.nextail.SCOTTA_globaldomain_public.buy_execution": [], "source.nextail.SCOTTA_globaldomain_public.dio_execution_selected": [], "source.nextail.SCOTTA_globaldomain_public.engine_executions": [], "source.nextail.SCOTTA_globaldomain_public.preconfigured_execution": [], "source.nextail.SCOTTA_globaldomain_public.reorder_execution": [], "source.nextail.SCOTTA_globaldomain_public.replenishment_executions": [], "source.nextail.SCOTTA_globaldomain_public.store_transfers_executions": [], "source.nextail.SCOTTA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SCOTTA_globaldomain_public.store_stock_items": [], "source.nextail.SCOTTA_globaldomain_public.scenario": [], "source.nextail.SCOTTA_globaldomain_public.warehouses": [], "source.nextail.SCOTTA_globaldomain_public.skus": [], "source.nextail.SCOTTA_globaldomain_public.seasons": [], "source.nextail.SCOTTA_globaldomain_public.sales": [], "source.nextail.SCOTTA_globaldomain_public.warehouse_stock_items": [], "source.nextail.SCOTTA_globaldomain_public.databasechangelog": [], "source.nextail.SILBON_globaldomain_public.admin_users": [], "source.nextail.SILBON_globaldomain_public.first_allocation_execution": [], "source.nextail.SILBON_globaldomain_public.category": [], "source.nextail.SILBON_globaldomain_public.category_item_included": [], "source.nextail.SILBON_globaldomain_public.products": [], "source.nextail.SILBON_globaldomain_public.product_history": [], "source.nextail.SILBON_globaldomain_public.stores": [], "source.nextail.SILBON_globaldomain_public.families": [], "source.nextail.SILBON_globaldomain_public.cron": [], "source.nextail.SILBON_globaldomain_public.buy_execution": [], "source.nextail.SILBON_globaldomain_public.dio_execution_selected": [], "source.nextail.SILBON_globaldomain_public.engine_executions": [], "source.nextail.SILBON_globaldomain_public.preconfigured_execution": [], "source.nextail.SILBON_globaldomain_public.reorder_execution": [], "source.nextail.SILBON_globaldomain_public.replenishment_executions": [], "source.nextail.SILBON_globaldomain_public.store_transfers_executions": [], "source.nextail.SILBON_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SILBON_globaldomain_public.store_stock_items": [], "source.nextail.SILBON_globaldomain_public.scenario": [], "source.nextail.SILBON_globaldomain_public.warehouses": [], "source.nextail.SILBON_globaldomain_public.skus": [], "source.nextail.SILBON_globaldomain_public.seasons": [], "source.nextail.SILBON_globaldomain_public.sales": [], "source.nextail.SILBON_globaldomain_public.warehouse_stock_items": [], "source.nextail.SILBON_globaldomain_public.databasechangelog": [], "source.nextail.SFERABASICMAN_globaldomain_public.admin_users": [], "source.nextail.SFERABASICMAN_globaldomain_public.first_allocation_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.category": [], "source.nextail.SFERABASICMAN_globaldomain_public.category_item_included": [], "source.nextail.SFERABASICMAN_globaldomain_public.products": [], "source.nextail.SFERABASICMAN_globaldomain_public.product_history": [], "source.nextail.SFERABASICMAN_globaldomain_public.stores": [], "source.nextail.SFERABASICMAN_globaldomain_public.families": [], "source.nextail.SFERABASICMAN_globaldomain_public.cron": [], "source.nextail.SFERABASICMAN_globaldomain_public.buy_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.dio_execution_selected": [], "source.nextail.SFERABASICMAN_globaldomain_public.engine_executions": [], "source.nextail.SFERABASICMAN_globaldomain_public.preconfigured_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.reorder_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.replenishment_executions": [], "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_executions": [], "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SFERABASICMAN_globaldomain_public.store_stock_items": [], "source.nextail.SFERABASICMAN_globaldomain_public.scenario": [], "source.nextail.SFERABASICMAN_globaldomain_public.warehouses": [], "source.nextail.SFERABASICMAN_globaldomain_public.skus": [], "source.nextail.SFERABASICMAN_globaldomain_public.seasons": [], "source.nextail.SFERABASICMAN_globaldomain_public.sales": [], "source.nextail.SFERABASICMAN_globaldomain_public.warehouse_stock_items": [], "source.nextail.SFERABASICMAN_globaldomain_public.databasechangelog": [], "source.nextail.SPORTSEMOTION_globaldomain_public.admin_users": [], "source.nextail.SPORTSEMOTION_globaldomain_public.first_allocation_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.category": [], "source.nextail.SPORTSEMOTION_globaldomain_public.category_item_included": [], "source.nextail.SPORTSEMOTION_globaldomain_public.products": [], "source.nextail.SPORTSEMOTION_globaldomain_public.product_history": [], "source.nextail.SPORTSEMOTION_globaldomain_public.stores": [], "source.nextail.SPORTSEMOTION_globaldomain_public.families": [], "source.nextail.SPORTSEMOTION_globaldomain_public.cron": [], "source.nextail.SPORTSEMOTION_globaldomain_public.buy_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.dio_execution_selected": [], "source.nextail.SPORTSEMOTION_globaldomain_public.engine_executions": [], "source.nextail.SPORTSEMOTION_globaldomain_public.preconfigured_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.reorder_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.replenishment_executions": [], "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_executions": [], "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SPORTSEMOTION_globaldomain_public.store_stock_items": [], "source.nextail.SPORTSEMOTION_globaldomain_public.scenario": [], "source.nextail.SPORTSEMOTION_globaldomain_public.warehouses": [], "source.nextail.SPORTSEMOTION_globaldomain_public.skus": [], "source.nextail.SPORTSEMOTION_globaldomain_public.seasons": [], "source.nextail.SPORTSEMOTION_globaldomain_public.sales": [], "source.nextail.SPORTSEMOTION_globaldomain_public.warehouse_stock_items": [], "source.nextail.SPORTSEMOTION_globaldomain_public.databasechangelog": [], "source.nextail.SPORTSTREET_globaldomain_public.admin_users": [], "source.nextail.SPORTSTREET_globaldomain_public.first_allocation_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.category": [], "source.nextail.SPORTSTREET_globaldomain_public.category_item_included": [], "source.nextail.SPORTSTREET_globaldomain_public.products": [], "source.nextail.SPORTSTREET_globaldomain_public.product_history": [], "source.nextail.SPORTSTREET_globaldomain_public.stores": [], "source.nextail.SPORTSTREET_globaldomain_public.families": [], "source.nextail.SPORTSTREET_globaldomain_public.cron": [], "source.nextail.SPORTSTREET_globaldomain_public.buy_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.dio_execution_selected": [], "source.nextail.SPORTSTREET_globaldomain_public.engine_executions": [], "source.nextail.SPORTSTREET_globaldomain_public.preconfigured_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.reorder_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.replenishment_executions": [], "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_executions": [], "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SPORTSTREET_globaldomain_public.store_stock_items": [], "source.nextail.SPORTSTREET_globaldomain_public.scenario": [], "source.nextail.SPORTSTREET_globaldomain_public.warehouses": [], "source.nextail.SPORTSTREET_globaldomain_public.skus": [], "source.nextail.SPORTSTREET_globaldomain_public.seasons": [], "source.nextail.SPORTSTREET_globaldomain_public.sales": [], "source.nextail.SPORTSTREET_globaldomain_public.warehouse_stock_items": [], "source.nextail.SPORTSTREET_globaldomain_public.databasechangelog": [], "source.nextail.SUAREZ_globaldomain_public.admin_users": [], "source.nextail.SUAREZ_globaldomain_public.first_allocation_execution": [], "source.nextail.SUAREZ_globaldomain_public.category": [], "source.nextail.SUAREZ_globaldomain_public.category_item_included": [], "source.nextail.SUAREZ_globaldomain_public.products": [], "source.nextail.SUAREZ_globaldomain_public.product_history": [], "source.nextail.SUAREZ_globaldomain_public.stores": [], "source.nextail.SUAREZ_globaldomain_public.families": [], "source.nextail.SUAREZ_globaldomain_public.cron": [], "source.nextail.SUAREZ_globaldomain_public.buy_execution": [], "source.nextail.SUAREZ_globaldomain_public.dio_execution_selected": [], "source.nextail.SUAREZ_globaldomain_public.engine_executions": [], "source.nextail.SUAREZ_globaldomain_public.preconfigured_execution": [], "source.nextail.SUAREZ_globaldomain_public.reorder_execution": [], "source.nextail.SUAREZ_globaldomain_public.replenishment_executions": [], "source.nextail.SUAREZ_globaldomain_public.store_transfers_executions": [], "source.nextail.SUAREZ_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SUAREZ_globaldomain_public.store_stock_items": [], "source.nextail.SUAREZ_globaldomain_public.scenario": [], "source.nextail.SUAREZ_globaldomain_public.warehouses": [], "source.nextail.SUAREZ_globaldomain_public.skus": [], "source.nextail.SUAREZ_globaldomain_public.seasons": [], "source.nextail.SUAREZ_globaldomain_public.sales": [], "source.nextail.SUAREZ_globaldomain_public.warehouse_stock_items": [], "source.nextail.SUAREZ_globaldomain_public.databasechangelog": [], "source.nextail.TERRANOVA_globaldomain_public.admin_users": [], "source.nextail.TERRANOVA_globaldomain_public.first_allocation_execution": [], "source.nextail.TERRANOVA_globaldomain_public.category": [], "source.nextail.TERRANOVA_globaldomain_public.category_item_included": [], "source.nextail.TERRANOVA_globaldomain_public.products": [], "source.nextail.TERRANOVA_globaldomain_public.product_history": [], "source.nextail.TERRANOVA_globaldomain_public.stores": [], "source.nextail.TERRANOVA_globaldomain_public.families": [], "source.nextail.TERRANOVA_globaldomain_public.cron": [], "source.nextail.TERRANOVA_globaldomain_public.buy_execution": [], "source.nextail.TERRANOVA_globaldomain_public.dio_execution_selected": [], "source.nextail.TERRANOVA_globaldomain_public.engine_executions": [], "source.nextail.TERRANOVA_globaldomain_public.preconfigured_execution": [], "source.nextail.TERRANOVA_globaldomain_public.reorder_execution": [], "source.nextail.TERRANOVA_globaldomain_public.replenishment_executions": [], "source.nextail.TERRANOVA_globaldomain_public.store_transfers_executions": [], "source.nextail.TERRANOVA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.TERRANOVA_globaldomain_public.store_stock_items": [], "source.nextail.TERRANOVA_globaldomain_public.scenario": [], "source.nextail.TERRANOVA_globaldomain_public.warehouses": [], "source.nextail.TERRANOVA_globaldomain_public.skus": [], "source.nextail.TERRANOVA_globaldomain_public.seasons": [], "source.nextail.TERRANOVA_globaldomain_public.sales": [], "source.nextail.TERRANOVA_globaldomain_public.warehouse_stock_items": [], "source.nextail.TERRANOVA_globaldomain_public.databasechangelog": [], "source.nextail.TVOE_globaldomain_public.admin_users": [], "source.nextail.TVOE_globaldomain_public.first_allocation_execution": [], "source.nextail.TVOE_globaldomain_public.category": [], "source.nextail.TVOE_globaldomain_public.category_item_included": [], "source.nextail.TVOE_globaldomain_public.products": [], "source.nextail.TVOE_globaldomain_public.product_history": [], "source.nextail.TVOE_globaldomain_public.stores": [], "source.nextail.TVOE_globaldomain_public.families": [], "source.nextail.TVOE_globaldomain_public.cron": [], "source.nextail.TVOE_globaldomain_public.buy_execution": [], "source.nextail.TVOE_globaldomain_public.dio_execution_selected": [], "source.nextail.TVOE_globaldomain_public.engine_executions": [], "source.nextail.TVOE_globaldomain_public.preconfigured_execution": [], "source.nextail.TVOE_globaldomain_public.reorder_execution": [], "source.nextail.TVOE_globaldomain_public.replenishment_executions": [], "source.nextail.TVOE_globaldomain_public.store_transfers_executions": [], "source.nextail.TVOE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.TVOE_globaldomain_public.store_stock_items": [], "source.nextail.TVOE_globaldomain_public.scenario": [], "source.nextail.TVOE_globaldomain_public.warehouses": [], "source.nextail.TVOE_globaldomain_public.skus": [], "source.nextail.TVOE_globaldomain_public.seasons": [], "source.nextail.TVOE_globaldomain_public.sales": [], "source.nextail.TVOE_globaldomain_public.warehouse_stock_items": [], "source.nextail.TVOE_globaldomain_public.databasechangelog": [], "source.nextail.VALEXTRA_globaldomain_public.admin_users": [], "source.nextail.VALEXTRA_globaldomain_public.first_allocation_execution": [], "source.nextail.VALEXTRA_globaldomain_public.category": [], "source.nextail.VALEXTRA_globaldomain_public.category_item_included": [], "source.nextail.VALEXTRA_globaldomain_public.products": [], "source.nextail.VALEXTRA_globaldomain_public.product_history": [], "source.nextail.VALEXTRA_globaldomain_public.stores": [], "source.nextail.VALEXTRA_globaldomain_public.families": [], "source.nextail.VALEXTRA_globaldomain_public.cron": [], "source.nextail.VALEXTRA_globaldomain_public.buy_execution": [], "source.nextail.VALEXTRA_globaldomain_public.dio_execution_selected": [], "source.nextail.VALEXTRA_globaldomain_public.engine_executions": [], "source.nextail.VALEXTRA_globaldomain_public.preconfigured_execution": [], "source.nextail.VALEXTRA_globaldomain_public.reorder_execution": [], "source.nextail.VALEXTRA_globaldomain_public.replenishment_executions": [], "source.nextail.VALEXTRA_globaldomain_public.store_transfers_executions": [], "source.nextail.VALEXTRA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.VALEXTRA_globaldomain_public.store_stock_items": [], "source.nextail.VALEXTRA_globaldomain_public.scenario": [], "source.nextail.VALEXTRA_globaldomain_public.warehouses": [], "source.nextail.VALEXTRA_globaldomain_public.skus": [], "source.nextail.VALEXTRA_globaldomain_public.seasons": [], "source.nextail.VALEXTRA_globaldomain_public.sales": [], "source.nextail.VALEXTRA_globaldomain_public.warehouse_stock_items": [], "source.nextail.VALEXTRA_globaldomain_public.databasechangelog": [], "source.nextail.VILET_globaldomain_public.admin_users": [], "source.nextail.VILET_globaldomain_public.first_allocation_execution": [], "source.nextail.VILET_globaldomain_public.category": [], "source.nextail.VILET_globaldomain_public.category_item_included": [], "source.nextail.VILET_globaldomain_public.products": [], "source.nextail.VILET_globaldomain_public.product_history": [], "source.nextail.VILET_globaldomain_public.stores": [], "source.nextail.VILET_globaldomain_public.families": [], "source.nextail.VILET_globaldomain_public.cron": [], "source.nextail.VILET_globaldomain_public.buy_execution": [], "source.nextail.VILET_globaldomain_public.dio_execution_selected": [], "source.nextail.VILET_globaldomain_public.engine_executions": [], "source.nextail.VILET_globaldomain_public.preconfigured_execution": [], "source.nextail.VILET_globaldomain_public.reorder_execution": [], "source.nextail.VILET_globaldomain_public.replenishment_executions": [], "source.nextail.VILET_globaldomain_public.store_transfers_executions": [], "source.nextail.VILET_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.VILET_globaldomain_public.store_stock_items": [], "source.nextail.VILET_globaldomain_public.scenario": [], "source.nextail.VILET_globaldomain_public.warehouses": [], "source.nextail.VILET_globaldomain_public.skus": [], "source.nextail.VILET_globaldomain_public.seasons": [], "source.nextail.VILET_globaldomain_public.sales": [], "source.nextail.VILET_globaldomain_public.warehouse_stock_items": [], "source.nextail.VILET_globaldomain_public.databasechangelog": [], "source.nextail.WHITESTUFF_globaldomain_public.admin_users": [], "source.nextail.WHITESTUFF_globaldomain_public.first_allocation_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.category": [], "source.nextail.WHITESTUFF_globaldomain_public.category_item_included": [], "source.nextail.WHITESTUFF_globaldomain_public.products": [], "source.nextail.WHITESTUFF_globaldomain_public.product_history": [], "source.nextail.WHITESTUFF_globaldomain_public.stores": [], "source.nextail.WHITESTUFF_globaldomain_public.families": [], "source.nextail.WHITESTUFF_globaldomain_public.cron": [], "source.nextail.WHITESTUFF_globaldomain_public.buy_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.dio_execution_selected": [], "source.nextail.WHITESTUFF_globaldomain_public.engine_executions": [], "source.nextail.WHITESTUFF_globaldomain_public.preconfigured_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.reorder_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.replenishment_executions": [], "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_executions": [], "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.WHITESTUFF_globaldomain_public.store_stock_items": [], "source.nextail.WHITESTUFF_globaldomain_public.scenario": [], "source.nextail.WHITESTUFF_globaldomain_public.warehouses": [], "source.nextail.WHITESTUFF_globaldomain_public.skus": [], "source.nextail.WHITESTUFF_globaldomain_public.seasons": [], "source.nextail.WHITESTUFF_globaldomain_public.sales": [], "source.nextail.WHITESTUFF_globaldomain_public.warehouse_stock_items": [], "source.nextail.WHITESTUFF_globaldomain_public.databasechangelog": [], "source.nextail.WOOLRICH_globaldomain_public.admin_users": [], "source.nextail.WOOLRICH_globaldomain_public.first_allocation_execution": [], "source.nextail.WOOLRICH_globaldomain_public.category": [], "source.nextail.WOOLRICH_globaldomain_public.category_item_included": [], "source.nextail.WOOLRICH_globaldomain_public.products": [], "source.nextail.WOOLRICH_globaldomain_public.product_history": [], "source.nextail.WOOLRICH_globaldomain_public.stores": [], "source.nextail.WOOLRICH_globaldomain_public.families": [], "source.nextail.WOOLRICH_globaldomain_public.cron": [], "source.nextail.WOOLRICH_globaldomain_public.buy_execution": [], "source.nextail.WOOLRICH_globaldomain_public.dio_execution_selected": [], "source.nextail.WOOLRICH_globaldomain_public.engine_executions": [], "source.nextail.WOOLRICH_globaldomain_public.preconfigured_execution": [], "source.nextail.WOOLRICH_globaldomain_public.reorder_execution": [], "source.nextail.WOOLRICH_globaldomain_public.replenishment_executions": [], "source.nextail.WOOLRICH_globaldomain_public.store_transfers_executions": [], "source.nextail.WOOLRICH_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.WOOLRICH_globaldomain_public.store_stock_items": [], "source.nextail.WOOLRICH_globaldomain_public.scenario": [], "source.nextail.WOOLRICH_globaldomain_public.warehouses": [], "source.nextail.WOOLRICH_globaldomain_public.skus": [], "source.nextail.WOOLRICH_globaldomain_public.seasons": [], "source.nextail.WOOLRICH_globaldomain_public.sales": [], "source.nextail.WOOLRICH_globaldomain_public.warehouse_stock_items": [], "source.nextail.WOOLRICH_globaldomain_public.databasechangelog": [], "source.nextail.okta_public.login_event": []}, "child_map": {"model.nextail.k8s_grouped_labels_per_date": ["model.nextail.k8s_snowflake_costs_by_date_label"], "model.nextail.stg_snowflake_costs": ["model.nextail.snowflake_grouped_labels_per_date", "test.nextail.not_null_stg_snowflake_costs_credits_attributed_compute.8980094661", "test.nextail.not_null_stg_snowflake_costs_end_time.b0c218e633", "test.nextail.not_null_stg_snowflake_costs_query_duration_ms.1985b89106", "test.nextail.not_null_stg_snowflake_costs_query_id.77194f6ad3", "test.nextail.not_null_stg_snowflake_costs_start_date.762083caad", "test.nextail.not_null_stg_snowflake_costs_start_time.869f616796", "test.nextail.not_null_stg_snowflake_costs_user_name.7953967e57", "test.nextail.not_null_stg_snowflake_costs_warehouse_name.97229effc9", "test.nextail.relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_.189502f054", "test.nextail.unique_stg_snowflake_costs_query_id.3018f27853"], "model.nextail.stg_k8s_costs": ["model.nextail.k8s_grouped_labels_per_date", "test.nextail.accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX.0ad4ada3b1", "test.nextail.dbt_utils_recency_stg_k8s_costs_days__start_date__2.56a3c6e1b9", "test.nextail.not_null_stg_k8s_costs_end_time_utc.e1e0a722a6", "test.nextail.not_null_stg_k8s_costs_image.30b0e5159e", "test.nextail.not_null_stg_k8s_costs_pod_duration_seconds.e36234c5d7", "test.nextail.not_null_stg_k8s_costs_pod_id.23ee443c94", "test.nextail.not_null_stg_k8s_costs_start_date.32232e0ea0", "test.nextail.not_null_stg_k8s_costs_start_time_utc.cbedd77659"], "model.nextail.snowflake_grouped_labels_per_date": ["model.nextail.k8s_snowflake_costs_by_date_label"], "model.nextail.stg_k8s_completed_jobs_all": ["model.nextail.stg_k8s_costs", "test.nextail.accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD.f729a774f0", "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production.4573fdfa76", "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting.b62849f9df", "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation.a29772cf7e", "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp.0bd9bada41", "test.nextail.accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError.6cc01b057e", "test.nextail.not_null_stg_k8s_completed_jobs_all_end_time_utc.67e3186403", "test.nextail.not_null_stg_k8s_completed_jobs_all_image.c80796fb5c", "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid.1c19f8fc25", "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name.cac80ce68a", "test.nextail.not_null_stg_k8s_completed_jobs_all_label_controller_uid.cbf0680a73", "test.nextail.not_null_stg_k8s_completed_jobs_all_label_job_name.bbad8c6ee0", "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_duration_seconds.ef0b5f7d6d", "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_id.73b68f6b77", "test.nextail.not_null_stg_k8s_completed_jobs_all_start_date.10d25e196c", "test.nextail.not_null_stg_k8s_completed_jobs_all_start_time_utc.aceaead16f", "test.nextail.not_null_stg_k8s_completed_jobs_all_termination_reason.341ceebe4b"], "model.nextail.stg_k8s_kubecost_all": ["model.nextail.stg_k8s_costs", "test.nextail.accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD.30f6edce27", "test.nextail.not_null_stg_k8s_kubecost_all_avg_cpu.c3043fcd61", "test.nextail.not_null_stg_k8s_kubecost_all_avg_efficiency.cb2ef16bb6", "test.nextail.not_null_stg_k8s_kubecost_all_avg_external.7314091066", "test.nextail.not_null_stg_k8s_kubecost_all_avg_gpu.36e416435d", "test.nextail.not_null_stg_k8s_kubecost_all_avg_loadbalancer.4533ab992b", "test.nextail.not_null_stg_k8s_kubecost_all_avg_network.43e8c50f41", "test.nextail.not_null_stg_k8s_kubecost_all_avg_pv.6b1217a9c5", "test.nextail.not_null_stg_k8s_kubecost_all_avg_ram.cc81d75d71", "test.nextail.not_null_stg_k8s_kubecost_all_avg_shared.e96ff4a37e", "test.nextail.not_null_stg_k8s_kubecost_all_end_date.d4810f4f50", "test.nextail.not_null_stg_k8s_kubecost_all_pod_id.16a61b502b", "test.nextail.not_null_stg_k8s_kubecost_all_start_date.9131e81ce8", "test.nextail.not_null_stg_k8s_kubecost_all_sum_total_cost.8ba4c0f777"], "model.nextail.stg_k8s_kubecost_sandbox": ["model.nextail.stg_k8s_kubecost_all"], "model.nextail.stg_k8s_completed_jobs_sandbox": ["model.nextail.stg_k8s_completed_jobs_all"], "model.nextail.stg_k8s_completed_jobs_prod": ["model.nextail.stg_k8s_completed_jobs_all"], "model.nextail.stg_k8s_kubecost_prod": ["model.nextail.stg_k8s_kubecost_all"], "model.nextail.stg_query_attribution_history": ["model.nextail.stg_snowflake_costs", "test.nextail.dbt_utils_recency_stg_query_attribution_history_hour__start_time__36.6dfcb209e4", "test.nextail.not_null_stg_query_attribution_history_credits_attributed_compute.b22075fe48", "test.nextail.not_null_stg_query_attribution_history_query_id.be90035352", "test.nextail.not_null_stg_query_attribution_history_start_time.a470d62126", "test.nextail.relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_.189502f054", "test.nextail.unique_stg_query_attribution_history_query_id.f3327a751a"], "model.nextail.k8s_snowflake_costs_by_date_label": ["test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development.8448bb726d", "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1.cdac12762d", "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0.d5f5dad5d0", "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0.df81e301fb", "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0.1dc32dd315", "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0.abf569b70e", "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0.ffbc7c7b6d", "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0.1119874e61", "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0.0966e3543f", "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0.b9fa177dd4", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_correlation_id.0a0887e973", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_environment.bdaa6b6090", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_module.579a56c03a", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_operation.e59575f31a", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_service.6e2f9c90b2", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_start_date.44a7a0c588", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_submodule.a7e8baa0ca", "test.nextail.not_null_k8s_snowflake_costs_by_date_label_tenant.bd227e2e47"], "test.nextail.not_null_snowflake_warehouse_idle_costs_warehouse_name.6ae96ac80c": [], "test.nextail.unique_snowflake_warehouse_idle_costs_warehouse_name.8eedb62dca": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_query_date.7c912a9dd6": [], "test.nextail.dbt_utils_is_timestamp_snowflake_warehouse_idle_costs_query_date.e7daf3c65d": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_running_seconds.e5fa89892e": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_running_seconds.d0f262baf3": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_idle_seconds.02f129c450": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_idle_seconds.8927ae522a": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_on_seconds.9ed34125ec": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_on_seconds.2b39e8530d": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_turned_off_seconds.93a8f6ebae": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_turned_off_seconds.250a8266ee": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_total_time_hours.05fde74cb2": [], "test.nextail.dbt_utils_positive_value_snowflake_warehouse_idle_costs_total_time_hours.4e0c3c7013": [], "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_total_time_hours__24_1__23_9.57bc3c67b6": [], "test.nextail.not_null_snowflake_warehouse_idle_costs_running_ratio.c9c1163b9d": [], "test.nextail.dbt_utils_accepted_range_snowflake_warehouse_idle_costs_running_ratio__100__0.a4d09babed": [], "test.nextail.dbt_utils_equal_rowcount_snowflake_warehouse_idle_costs_ref_snowflake_warehouse_idle_costs_.7e751a4c5a": [], "test.nextail.dbt_utils_recency_snowflake_warehouse_idle_costs_day__query_date__2.1cb89f0209": [], "test.nextail.unique_stg_snowflake_costs_query_id.3018f27853": [], "test.nextail.not_null_stg_snowflake_costs_query_id.77194f6ad3": [], "test.nextail.relationships_stg_snowflake_costs_query_id__query_id__ref_stg_query_attribution_history_.189502f054": [], "test.nextail.not_null_stg_snowflake_costs_warehouse_name.97229effc9": [], "test.nextail.not_null_stg_snowflake_costs_user_name.7953967e57": [], "test.nextail.not_null_stg_snowflake_costs_start_date.762083caad": [], "test.nextail.not_null_stg_snowflake_costs_start_time.869f616796": [], "test.nextail.not_null_stg_snowflake_costs_end_time.b0c218e633": [], "test.nextail.not_null_stg_snowflake_costs_query_duration_ms.1985b89106": [], "test.nextail.not_null_stg_snowflake_costs_credits_attributed_compute.8980094661": [], "test.nextail.not_null_stg_k8s_costs_pod_id.23ee443c94": [], "test.nextail.accepted_values_stg_k8s_costs_k8s_environment__PROD__SANDBOX.0ad4ada3b1": [], "test.nextail.not_null_stg_k8s_costs_start_date.32232e0ea0": [], "test.nextail.not_null_stg_k8s_costs_start_time_utc.cbedd77659": [], "test.nextail.not_null_stg_k8s_costs_end_time_utc.e1e0a722a6": [], "test.nextail.not_null_stg_k8s_costs_pod_duration_seconds.e36234c5d7": [], "test.nextail.not_null_stg_k8s_costs_image.30b0e5159e": [], "test.nextail.dbt_utils_recency_stg_k8s_costs_days__start_date__2.56a3c6e1b9": [], "test.nextail.accepted_values_stg_k8s_kubecost_all_k8s_environment__SANDBOX__PROD.30f6edce27": [], "test.nextail.not_null_stg_k8s_kubecost_all_pod_id.16a61b502b": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_cpu.c3043fcd61": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_gpu.36e416435d": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_ram.cc81d75d71": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_pv.6b1217a9c5": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_network.43e8c50f41": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_loadbalancer.4533ab992b": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_external.7314091066": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_shared.e96ff4a37e": [], "test.nextail.not_null_stg_k8s_kubecost_all_avg_efficiency.cb2ef16bb6": [], "test.nextail.not_null_stg_k8s_kubecost_all_sum_total_cost.8ba4c0f777": [], "test.nextail.not_null_stg_k8s_kubecost_all_start_date.9131e81ce8": [], "test.nextail.not_null_stg_k8s_kubecost_all_end_date.d4810f4f50": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_id.73b68f6b77": [], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_k8s_environment__SANDBOX__PROD.f729a774f0": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_start_date.10d25e196c": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_start_time_utc.aceaead16f": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_end_time_utc.67e3186403": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_pod_duration_seconds.ef0b5f7d6d": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_image.c80796fb5c": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_termination_reason.341ceebe4b": [], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_termination_reason__Completed__OOMKilled__Error__StartError.6cc01b057e": [], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_service__NA__advanced_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__explainability__firstallocation.a29772cf7e": [], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_module__storetransfer__optimization__integrations__replenishment__my_module__storetransfers__forecast_store_product__okta__module_name__nxops__k8s_usage_reports__kron__engineering_portal__size_curves__internal_tools__forecast_validation__forecast__backend__firstallocation__internal_reporting.b62849f9df": [], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_submodule__my_submodule__replenishment__engine__dio_daily__optimization_pipelines__scheduled_tools__replenishment_data_pieplines__storetransfers_data_pipelines__kron__reports__replenishment_data_pipelines__auth_updater__docusaurus__export_job__customization__backtests__model_train__store_product_inference__training__traning__pylarms__features__others__fact_table__inferece__validation__size_curves__nx_job_orchestraptor__nx_job_orchestrator__inference__firstallocation_data_pipelines__firstallocation__dbt_execution__msoapp.0bd9bada41": [], "test.nextail.accepted_values_stg_k8s_completed_jobs_all_label_environment__env_sbx__sandbox__production.4573fdfa76": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_controller_uid.cbf0680a73": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_job_name.cac80ce68a": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_job_name.bbad8c6ee0": [], "test.nextail.not_null_stg_k8s_completed_jobs_all_label_batch_kubernetes_io_controller_uid.1c19f8fc25": [], "test.nextail.unique_stg_query_history_query_id.74ccf61b82": [], "test.nextail.not_null_stg_query_history_query_id.a5f2833a4b": [], "test.nextail.not_null_stg_query_history_start_time.4a08e6a4d1": [], "test.nextail.not_null_stg_query_history_credits_attributed_compute.c359bf819d": [], "test.nextail.dbt_utils_recency_stg_query_history_minutes__start_time__30.1e16695958": [], "test.nextail.unique_stg_query_attribution_history_query_id.f3327a751a": [], "test.nextail.not_null_stg_query_attribution_history_query_id.be90035352": [], "test.nextail.not_null_stg_query_attribution_history_start_time.a470d62126": [], "test.nextail.not_null_stg_query_attribution_history_credits_attributed_compute.b22075fe48": [], "test.nextail.dbt_utils_recency_stg_query_attribution_history_hour__start_time__36.6dfcb209e4": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_start_date.44a7a0c588": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_service.6e2f9c90b2": [], "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_service__advanced_analytics__advance_analytics__dagster_poc_default__data_integration__data_platform__first_allocation__internal__NA__optimization__platform__replenishment__store_transfers__storetransfer__storetransfers__forecast__monitoring__size_curves__mobileapp__replenishments__desktopapp__app__data_services__textil__explainability__dbt__firstallocation__service1.cdac12762d": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_module.579a56c03a": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_submodule.a7e8baa0ca": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_operation.e59575f31a": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_tenant.bd227e2e47": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_environment.bdaa6b6090": [], "test.nextail.accepted_values_k8s_snowflake_costs_by_date_label_environment__sandbox__NA__production__test__env_sbx__dev__development.8448bb726d": [], "test.nextail.not_null_k8s_snowflake_costs_by_date_label_correlation_id.0a0887e973": [], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_no_queries___0.1119874e61": [], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_query_duration_ms___0.b9fa177dd4": [], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_snowflake_total_credits___0.0966e3543f": [], "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_snowflake_total_credits__1000__0.df81e301fb": [], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_no_pod_ids___0.1dc32dd315": [], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_pods_duration_s___0.ffbc7c7b6d": [], "test.nextail.dbt_utils_expression_is_true_k8s_snowflake_costs_by_date_label_k8s_total_cost___0.abf569b70e": [], "test.nextail.dbt_utils_accepted_range_k8s_snowflake_costs_by_date_label_k8s_total_cost__10000__0.d5f5dad5d0": [], "source.nextail.snowflake.query_history": [], "source.nextail.snowflake.query_attribution_history": ["model.nextail.stg_query_attribution_history"], "source.nextail.completed_jobs.completed_jobs_prod": ["model.nextail.stg_k8s_completed_jobs_prod"], "source.nextail.completed_jobs.completed_jobs_sandbox": ["model.nextail.stg_k8s_completed_jobs_sandbox"], "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_pro": ["model.nextail.stg_k8s_kubecost_prod"], "source.nextail.kubecost.kubecost_cumulative_cost_by_pod_sandbox": ["model.nextail.stg_k8s_kubecost_sandbox"], "source.nextail.ARISTOCRAZY_globaldomain_public.admin_users": [], "source.nextail.ARISTOCRAZY_globaldomain_public.first_allocation_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.category": [], "source.nextail.ARISTOCRAZY_globaldomain_public.category_item_included": [], "source.nextail.ARISTOCRAZY_globaldomain_public.products": [], "source.nextail.ARISTOCRAZY_globaldomain_public.product_history": [], "source.nextail.ARISTOCRAZY_globaldomain_public.stores": [], "source.nextail.ARISTOCRAZY_globaldomain_public.families": [], "source.nextail.ARISTOCRAZY_globaldomain_public.cron": [], "source.nextail.ARISTOCRAZY_globaldomain_public.buy_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.dio_execution_selected": [], "source.nextail.ARISTOCRAZY_globaldomain_public.engine_executions": [], "source.nextail.ARISTOCRAZY_globaldomain_public.preconfigured_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.reorder_execution": [], "source.nextail.ARISTOCRAZY_globaldomain_public.replenishment_executions": [], "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_executions": [], "source.nextail.ARISTOCRAZY_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ARISTOCRAZY_globaldomain_public.store_stock_items": [], "source.nextail.ARISTOCRAZY_globaldomain_public.scenario": [], "source.nextail.ARISTOCRAZY_globaldomain_public.warehouses": [], "source.nextail.ARISTOCRAZY_globaldomain_public.skus": [], "source.nextail.ARISTOCRAZY_globaldomain_public.seasons": [], "source.nextail.ARISTOCRAZY_globaldomain_public.sales": [], "source.nextail.ARISTOCRAZY_globaldomain_public.warehouse_stock_items": [], "source.nextail.ARISTOCRAZY_globaldomain_public.databasechangelog": [], "source.nextail.BIMANI_globaldomain_public.admin_users": [], "source.nextail.BIMANI_globaldomain_public.first_allocation_execution": [], "source.nextail.BIMANI_globaldomain_public.category": [], "source.nextail.BIMANI_globaldomain_public.category_item_included": [], "source.nextail.BIMANI_globaldomain_public.products": [], "source.nextail.BIMANI_globaldomain_public.product_history": [], "source.nextail.BIMANI_globaldomain_public.stores": [], "source.nextail.BIMANI_globaldomain_public.families": [], "source.nextail.BIMANI_globaldomain_public.cron": [], "source.nextail.BIMANI_globaldomain_public.buy_execution": [], "source.nextail.BIMANI_globaldomain_public.dio_execution_selected": [], "source.nextail.BIMANI_globaldomain_public.engine_executions": [], "source.nextail.BIMANI_globaldomain_public.preconfigured_execution": [], "source.nextail.BIMANI_globaldomain_public.reorder_execution": [], "source.nextail.BIMANI_globaldomain_public.replenishment_executions": [], "source.nextail.BIMANI_globaldomain_public.store_transfers_executions": [], "source.nextail.BIMANI_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.BIMANI_globaldomain_public.store_stock_items": [], "source.nextail.BIMANI_globaldomain_public.scenario": [], "source.nextail.BIMANI_globaldomain_public.warehouses": [], "source.nextail.BIMANI_globaldomain_public.skus": [], "source.nextail.BIMANI_globaldomain_public.seasons": [], "source.nextail.BIMANI_globaldomain_public.sales": [], "source.nextail.BIMANI_globaldomain_public.warehouse_stock_items": [], "source.nextail.BIMANI_globaldomain_public.databasechangelog": [], "source.nextail.BZB_globaldomain_public.admin_users": [], "source.nextail.BZB_globaldomain_public.first_allocation_execution": [], "source.nextail.BZB_globaldomain_public.category": [], "source.nextail.BZB_globaldomain_public.category_item_included": [], "source.nextail.BZB_globaldomain_public.products": [], "source.nextail.BZB_globaldomain_public.product_history": [], "source.nextail.BZB_globaldomain_public.stores": [], "source.nextail.BZB_globaldomain_public.families": [], "source.nextail.BZB_globaldomain_public.cron": [], "source.nextail.BZB_globaldomain_public.buy_execution": [], "source.nextail.BZB_globaldomain_public.dio_execution_selected": [], "source.nextail.BZB_globaldomain_public.engine_executions": [], "source.nextail.BZB_globaldomain_public.preconfigured_execution": [], "source.nextail.BZB_globaldomain_public.reorder_execution": [], "source.nextail.BZB_globaldomain_public.replenishment_executions": [], "source.nextail.BZB_globaldomain_public.store_transfers_executions": [], "source.nextail.BZB_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.BZB_globaldomain_public.store_stock_items": [], "source.nextail.BZB_globaldomain_public.scenario": [], "source.nextail.BZB_globaldomain_public.warehouses": [], "source.nextail.BZB_globaldomain_public.skus": [], "source.nextail.BZB_globaldomain_public.seasons": [], "source.nextail.BZB_globaldomain_public.sales": [], "source.nextail.BZB_globaldomain_public.warehouse_stock_items": [], "source.nextail.BZB_globaldomain_public.databasechangelog": [], "source.nextail.CALLIOPE_globaldomain_public.admin_users": [], "source.nextail.CALLIOPE_globaldomain_public.first_allocation_execution": [], "source.nextail.CALLIOPE_globaldomain_public.category": [], "source.nextail.CALLIOPE_globaldomain_public.category_item_included": [], "source.nextail.CALLIOPE_globaldomain_public.products": [], "source.nextail.CALLIOPE_globaldomain_public.product_history": [], "source.nextail.CALLIOPE_globaldomain_public.stores": [], "source.nextail.CALLIOPE_globaldomain_public.families": [], "source.nextail.CALLIOPE_globaldomain_public.cron": [], "source.nextail.CALLIOPE_globaldomain_public.buy_execution": [], "source.nextail.CALLIOPE_globaldomain_public.dio_execution_selected": [], "source.nextail.CALLIOPE_globaldomain_public.engine_executions": [], "source.nextail.CALLIOPE_globaldomain_public.preconfigured_execution": [], "source.nextail.CALLIOPE_globaldomain_public.reorder_execution": [], "source.nextail.CALLIOPE_globaldomain_public.replenishment_executions": [], "source.nextail.CALLIOPE_globaldomain_public.store_transfers_executions": [], "source.nextail.CALLIOPE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.CALLIOPE_globaldomain_public.store_stock_items": [], "source.nextail.CALLIOPE_globaldomain_public.scenario": [], "source.nextail.CALLIOPE_globaldomain_public.warehouses": [], "source.nextail.CALLIOPE_globaldomain_public.skus": [], "source.nextail.CALLIOPE_globaldomain_public.seasons": [], "source.nextail.CALLIOPE_globaldomain_public.sales": [], "source.nextail.CALLIOPE_globaldomain_public.warehouse_stock_items": [], "source.nextail.CALLIOPE_globaldomain_public.databasechangelog": [], "source.nextail.DCK_globaldomain_public.admin_users": [], "source.nextail.DCK_globaldomain_public.first_allocation_execution": [], "source.nextail.DCK_globaldomain_public.category": [], "source.nextail.DCK_globaldomain_public.category_item_included": [], "source.nextail.DCK_globaldomain_public.products": [], "source.nextail.DCK_globaldomain_public.product_history": [], "source.nextail.DCK_globaldomain_public.stores": [], "source.nextail.DCK_globaldomain_public.families": [], "source.nextail.DCK_globaldomain_public.cron": [], "source.nextail.DCK_globaldomain_public.buy_execution": [], "source.nextail.DCK_globaldomain_public.dio_execution_selected": [], "source.nextail.DCK_globaldomain_public.engine_executions": [], "source.nextail.DCK_globaldomain_public.preconfigured_execution": [], "source.nextail.DCK_globaldomain_public.reorder_execution": [], "source.nextail.DCK_globaldomain_public.replenishment_executions": [], "source.nextail.DCK_globaldomain_public.store_transfers_executions": [], "source.nextail.DCK_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.DCK_globaldomain_public.store_stock_items": [], "source.nextail.DCK_globaldomain_public.scenario": [], "source.nextail.DCK_globaldomain_public.warehouses": [], "source.nextail.DCK_globaldomain_public.skus": [], "source.nextail.DCK_globaldomain_public.seasons": [], "source.nextail.DCK_globaldomain_public.sales": [], "source.nextail.DCK_globaldomain_public.warehouse_stock_items": [], "source.nextail.DCK_globaldomain_public.databasechangelog": [], "source.nextail.DUB_globaldomain_public.admin_users": [], "source.nextail.DUB_globaldomain_public.first_allocation_execution": [], "source.nextail.DUB_globaldomain_public.category": [], "source.nextail.DUB_globaldomain_public.category_item_included": [], "source.nextail.DUB_globaldomain_public.products": [], "source.nextail.DUB_globaldomain_public.product_history": [], "source.nextail.DUB_globaldomain_public.stores": [], "source.nextail.DUB_globaldomain_public.families": [], "source.nextail.DUB_globaldomain_public.cron": [], "source.nextail.DUB_globaldomain_public.buy_execution": [], "source.nextail.DUB_globaldomain_public.dio_execution_selected": [], "source.nextail.DUB_globaldomain_public.engine_executions": [], "source.nextail.DUB_globaldomain_public.preconfigured_execution": [], "source.nextail.DUB_globaldomain_public.reorder_execution": [], "source.nextail.DUB_globaldomain_public.replenishment_executions": [], "source.nextail.DUB_globaldomain_public.store_transfers_executions": [], "source.nextail.DUB_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.DUB_globaldomain_public.store_stock_items": [], "source.nextail.DUB_globaldomain_public.scenario": [], "source.nextail.DUB_globaldomain_public.warehouses": [], "source.nextail.DUB_globaldomain_public.skus": [], "source.nextail.DUB_globaldomain_public.seasons": [], "source.nextail.DUB_globaldomain_public.sales": [], "source.nextail.DUB_globaldomain_public.warehouse_stock_items": [], "source.nextail.DUB_globaldomain_public.databasechangelog": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.admin_users": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.category_item_included": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.products": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.product_history": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.stores": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.families": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.cron": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.buy_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.engine_executions": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.reorder_execution": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.replenishment_executions": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.store_stock_items": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.scenario": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouses": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.skus": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.seasons": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.sales": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIBOLSOSMMEE_globaldomain_public.databasechangelog": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.admin_users": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.first_allocation_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.category_item_included": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.products": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.product_history": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.stores": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.families": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.cron": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.buy_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.dio_execution_selected": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.engine_executions": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.preconfigured_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.reorder_execution": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.replenishment_executions": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_executions": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.store_stock_items": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.scenario": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouses": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.skus": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.seasons": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.sales": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECICAMISERIACABALLEROMMEE_globaldomain_public.databasechangelog": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.admin_users": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.category": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.category_item_included": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.products": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.product_history": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.stores": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.families": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.cron": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.buy_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.engine_executions": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.reorder_execution": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.replenishment_executions": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.store_stock_items": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.scenario": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouses": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.skus": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.seasons": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.sales": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIEASYWEARELLA_globaldomain_public.databasechangelog": [], "source.nextail.ECIGAP_globaldomain_public.admin_users": [], "source.nextail.ECIGAP_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIGAP_globaldomain_public.category": [], "source.nextail.ECIGAP_globaldomain_public.category_item_included": [], "source.nextail.ECIGAP_globaldomain_public.products": [], "source.nextail.ECIGAP_globaldomain_public.product_history": [], "source.nextail.ECIGAP_globaldomain_public.stores": [], "source.nextail.ECIGAP_globaldomain_public.families": [], "source.nextail.ECIGAP_globaldomain_public.cron": [], "source.nextail.ECIGAP_globaldomain_public.buy_execution": [], "source.nextail.ECIGAP_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIGAP_globaldomain_public.engine_executions": [], "source.nextail.ECIGAP_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIGAP_globaldomain_public.reorder_execution": [], "source.nextail.ECIGAP_globaldomain_public.replenishment_executions": [], "source.nextail.ECIGAP_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIGAP_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIGAP_globaldomain_public.store_stock_items": [], "source.nextail.ECIGAP_globaldomain_public.scenario": [], "source.nextail.ECIGAP_globaldomain_public.warehouses": [], "source.nextail.ECIGAP_globaldomain_public.skus": [], "source.nextail.ECIGAP_globaldomain_public.seasons": [], "source.nextail.ECIGAP_globaldomain_public.sales": [], "source.nextail.ECIGAP_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIGAP_globaldomain_public.databasechangelog": [], "source.nextail.ECIKIDS_globaldomain_public.admin_users": [], "source.nextail.ECIKIDS_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIKIDS_globaldomain_public.category": [], "source.nextail.ECIKIDS_globaldomain_public.category_item_included": [], "source.nextail.ECIKIDS_globaldomain_public.products": [], "source.nextail.ECIKIDS_globaldomain_public.product_history": [], "source.nextail.ECIKIDS_globaldomain_public.stores": [], "source.nextail.ECIKIDS_globaldomain_public.families": [], "source.nextail.ECIKIDS_globaldomain_public.cron": [], "source.nextail.ECIKIDS_globaldomain_public.buy_execution": [], "source.nextail.ECIKIDS_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIKIDS_globaldomain_public.engine_executions": [], "source.nextail.ECIKIDS_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIKIDS_globaldomain_public.reorder_execution": [], "source.nextail.ECIKIDS_globaldomain_public.replenishment_executions": [], "source.nextail.ECIKIDS_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIKIDS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIKIDS_globaldomain_public.store_stock_items": [], "source.nextail.ECIKIDS_globaldomain_public.scenario": [], "source.nextail.ECIKIDS_globaldomain_public.warehouses": [], "source.nextail.ECIKIDS_globaldomain_public.skus": [], "source.nextail.ECIKIDS_globaldomain_public.seasons": [], "source.nextail.ECIKIDS_globaldomain_public.sales": [], "source.nextail.ECIKIDS_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIKIDS_globaldomain_public.databasechangelog": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.admin_users": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.first_allocation_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.category": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.category_item_included": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.products": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.product_history": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.stores": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.families": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.cron": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.buy_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.dio_execution_selected": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.engine_executions": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.preconfigured_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.reorder_execution": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.replenishment_executions": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_executions": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.store_stock_items": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.scenario": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouses": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.skus": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.seasons": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.sales": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECILLOYDSMEN_globaldomain_public.databasechangelog": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.admin_users": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.first_allocation_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.category_item_included": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.products": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.product_history": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.stores": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.families": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.cron": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.buy_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.dio_execution_selected": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.engine_executions": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.preconfigured_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.reorder_execution": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.replenishment_executions": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_executions": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.store_stock_items": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.scenario": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouses": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.skus": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.seasons": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.sales": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECIZAPATERIASENORAS_globaldomain_public.databasechangelog": [], "source.nextail.ECRU_globaldomain_public.admin_users": [], "source.nextail.ECRU_globaldomain_public.first_allocation_execution": [], "source.nextail.ECRU_globaldomain_public.category": [], "source.nextail.ECRU_globaldomain_public.category_item_included": [], "source.nextail.ECRU_globaldomain_public.products": [], "source.nextail.ECRU_globaldomain_public.product_history": [], "source.nextail.ECRU_globaldomain_public.stores": [], "source.nextail.ECRU_globaldomain_public.families": [], "source.nextail.ECRU_globaldomain_public.cron": [], "source.nextail.ECRU_globaldomain_public.buy_execution": [], "source.nextail.ECRU_globaldomain_public.dio_execution_selected": [], "source.nextail.ECRU_globaldomain_public.engine_executions": [], "source.nextail.ECRU_globaldomain_public.preconfigured_execution": [], "source.nextail.ECRU_globaldomain_public.reorder_execution": [], "source.nextail.ECRU_globaldomain_public.replenishment_executions": [], "source.nextail.ECRU_globaldomain_public.store_transfers_executions": [], "source.nextail.ECRU_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ECRU_globaldomain_public.store_stock_items": [], "source.nextail.ECRU_globaldomain_public.scenario": [], "source.nextail.ECRU_globaldomain_public.warehouses": [], "source.nextail.ECRU_globaldomain_public.skus": [], "source.nextail.ECRU_globaldomain_public.seasons": [], "source.nextail.ECRU_globaldomain_public.sales": [], "source.nextail.ECRU_globaldomain_public.warehouse_stock_items": [], "source.nextail.ECRU_globaldomain_public.databasechangelog": [], "source.nextail.ETHNICITY_globaldomain_public.admin_users": [], "source.nextail.ETHNICITY_globaldomain_public.first_allocation_execution": [], "source.nextail.ETHNICITY_globaldomain_public.category": [], "source.nextail.ETHNICITY_globaldomain_public.category_item_included": [], "source.nextail.ETHNICITY_globaldomain_public.products": [], "source.nextail.ETHNICITY_globaldomain_public.product_history": [], "source.nextail.ETHNICITY_globaldomain_public.stores": [], "source.nextail.ETHNICITY_globaldomain_public.families": [], "source.nextail.ETHNICITY_globaldomain_public.cron": [], "source.nextail.ETHNICITY_globaldomain_public.buy_execution": [], "source.nextail.ETHNICITY_globaldomain_public.dio_execution_selected": [], "source.nextail.ETHNICITY_globaldomain_public.engine_executions": [], "source.nextail.ETHNICITY_globaldomain_public.preconfigured_execution": [], "source.nextail.ETHNICITY_globaldomain_public.reorder_execution": [], "source.nextail.ETHNICITY_globaldomain_public.replenishment_executions": [], "source.nextail.ETHNICITY_globaldomain_public.store_transfers_executions": [], "source.nextail.ETHNICITY_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.ETHNICITY_globaldomain_public.store_stock_items": [], "source.nextail.ETHNICITY_globaldomain_public.scenario": [], "source.nextail.ETHNICITY_globaldomain_public.warehouses": [], "source.nextail.ETHNICITY_globaldomain_public.skus": [], "source.nextail.ETHNICITY_globaldomain_public.seasons": [], "source.nextail.ETHNICITY_globaldomain_public.sales": [], "source.nextail.ETHNICITY_globaldomain_public.warehouse_stock_items": [], "source.nextail.ETHNICITY_globaldomain_public.databasechangelog": [], "source.nextail.FLYINGTIGER_globaldomain_public.admin_users": [], "source.nextail.FLYINGTIGER_globaldomain_public.first_allocation_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.category": [], "source.nextail.FLYINGTIGER_globaldomain_public.category_item_included": [], "source.nextail.FLYINGTIGER_globaldomain_public.products": [], "source.nextail.FLYINGTIGER_globaldomain_public.product_history": [], "source.nextail.FLYINGTIGER_globaldomain_public.stores": [], "source.nextail.FLYINGTIGER_globaldomain_public.families": [], "source.nextail.FLYINGTIGER_globaldomain_public.cron": [], "source.nextail.FLYINGTIGER_globaldomain_public.buy_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.dio_execution_selected": [], "source.nextail.FLYINGTIGER_globaldomain_public.engine_executions": [], "source.nextail.FLYINGTIGER_globaldomain_public.preconfigured_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.reorder_execution": [], "source.nextail.FLYINGTIGER_globaldomain_public.replenishment_executions": [], "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_executions": [], "source.nextail.FLYINGTIGER_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.FLYINGTIGER_globaldomain_public.store_stock_items": [], "source.nextail.FLYINGTIGER_globaldomain_public.scenario": [], "source.nextail.FLYINGTIGER_globaldomain_public.warehouses": [], "source.nextail.FLYINGTIGER_globaldomain_public.skus": [], "source.nextail.FLYINGTIGER_globaldomain_public.seasons": [], "source.nextail.FLYINGTIGER_globaldomain_public.sales": [], "source.nextail.FLYINGTIGER_globaldomain_public.warehouse_stock_items": [], "source.nextail.FLYINGTIGER_globaldomain_public.databasechangelog": [], "source.nextail.FOOTGEAR_globaldomain_public.admin_users": [], "source.nextail.FOOTGEAR_globaldomain_public.first_allocation_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.category": [], "source.nextail.FOOTGEAR_globaldomain_public.category_item_included": [], "source.nextail.FOOTGEAR_globaldomain_public.products": [], "source.nextail.FOOTGEAR_globaldomain_public.product_history": [], "source.nextail.FOOTGEAR_globaldomain_public.stores": [], "source.nextail.FOOTGEAR_globaldomain_public.families": [], "source.nextail.FOOTGEAR_globaldomain_public.cron": [], "source.nextail.FOOTGEAR_globaldomain_public.buy_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.dio_execution_selected": [], "source.nextail.FOOTGEAR_globaldomain_public.engine_executions": [], "source.nextail.FOOTGEAR_globaldomain_public.preconfigured_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.reorder_execution": [], "source.nextail.FOOTGEAR_globaldomain_public.replenishment_executions": [], "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_executions": [], "source.nextail.FOOTGEAR_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.FOOTGEAR_globaldomain_public.store_stock_items": [], "source.nextail.FOOTGEAR_globaldomain_public.scenario": [], "source.nextail.FOOTGEAR_globaldomain_public.warehouses": [], "source.nextail.FOOTGEAR_globaldomain_public.skus": [], "source.nextail.FOOTGEAR_globaldomain_public.seasons": [], "source.nextail.FOOTGEAR_globaldomain_public.sales": [], "source.nextail.FOOTGEAR_globaldomain_public.warehouse_stock_items": [], "source.nextail.FOOTGEAR_globaldomain_public.databasechangelog": [], "source.nextail.FOREVERNEW_globaldomain_public.admin_users": [], "source.nextail.FOREVERNEW_globaldomain_public.first_allocation_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.category": [], "source.nextail.FOREVERNEW_globaldomain_public.category_item_included": [], "source.nextail.FOREVERNEW_globaldomain_public.products": [], "source.nextail.FOREVERNEW_globaldomain_public.product_history": [], "source.nextail.FOREVERNEW_globaldomain_public.stores": [], "source.nextail.FOREVERNEW_globaldomain_public.families": [], "source.nextail.FOREVERNEW_globaldomain_public.cron": [], "source.nextail.FOREVERNEW_globaldomain_public.buy_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.dio_execution_selected": [], "source.nextail.FOREVERNEW_globaldomain_public.engine_executions": [], "source.nextail.FOREVERNEW_globaldomain_public.preconfigured_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.reorder_execution": [], "source.nextail.FOREVERNEW_globaldomain_public.replenishment_executions": [], "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_executions": [], "source.nextail.FOREVERNEW_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.FOREVERNEW_globaldomain_public.store_stock_items": [], "source.nextail.FOREVERNEW_globaldomain_public.scenario": [], "source.nextail.FOREVERNEW_globaldomain_public.warehouses": [], "source.nextail.FOREVERNEW_globaldomain_public.skus": [], "source.nextail.FOREVERNEW_globaldomain_public.seasons": [], "source.nextail.FOREVERNEW_globaldomain_public.sales": [], "source.nextail.FOREVERNEW_globaldomain_public.warehouse_stock_items": [], "source.nextail.FOREVERNEW_globaldomain_public.databasechangelog": [], "source.nextail.GINATRICOT_globaldomain_public.admin_users": [], "source.nextail.GINATRICOT_globaldomain_public.first_allocation_execution": [], "source.nextail.GINATRICOT_globaldomain_public.category": [], "source.nextail.GINATRICOT_globaldomain_public.category_item_included": [], "source.nextail.GINATRICOT_globaldomain_public.products": [], "source.nextail.GINATRICOT_globaldomain_public.product_history": [], "source.nextail.GINATRICOT_globaldomain_public.stores": [], "source.nextail.GINATRICOT_globaldomain_public.families": [], "source.nextail.GINATRICOT_globaldomain_public.cron": [], "source.nextail.GINATRICOT_globaldomain_public.buy_execution": [], "source.nextail.GINATRICOT_globaldomain_public.dio_execution_selected": [], "source.nextail.GINATRICOT_globaldomain_public.engine_executions": [], "source.nextail.GINATRICOT_globaldomain_public.preconfigured_execution": [], "source.nextail.GINATRICOT_globaldomain_public.reorder_execution": [], "source.nextail.GINATRICOT_globaldomain_public.replenishment_executions": [], "source.nextail.GINATRICOT_globaldomain_public.store_transfers_executions": [], "source.nextail.GINATRICOT_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GINATRICOT_globaldomain_public.store_stock_items": [], "source.nextail.GINATRICOT_globaldomain_public.scenario": [], "source.nextail.GINATRICOT_globaldomain_public.warehouses": [], "source.nextail.GINATRICOT_globaldomain_public.skus": [], "source.nextail.GINATRICOT_globaldomain_public.seasons": [], "source.nextail.GINATRICOT_globaldomain_public.sales": [], "source.nextail.GINATRICOT_globaldomain_public.warehouse_stock_items": [], "source.nextail.GINATRICOT_globaldomain_public.databasechangelog": [], "source.nextail.GSTARRETAIL_globaldomain_public.admin_users": [], "source.nextail.GSTARRETAIL_globaldomain_public.first_allocation_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.category": [], "source.nextail.GSTARRETAIL_globaldomain_public.category_item_included": [], "source.nextail.GSTARRETAIL_globaldomain_public.products": [], "source.nextail.GSTARRETAIL_globaldomain_public.product_history": [], "source.nextail.GSTARRETAIL_globaldomain_public.stores": [], "source.nextail.GSTARRETAIL_globaldomain_public.families": [], "source.nextail.GSTARRETAIL_globaldomain_public.cron": [], "source.nextail.GSTARRETAIL_globaldomain_public.buy_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.dio_execution_selected": [], "source.nextail.GSTARRETAIL_globaldomain_public.engine_executions": [], "source.nextail.GSTARRETAIL_globaldomain_public.preconfigured_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.reorder_execution": [], "source.nextail.GSTARRETAIL_globaldomain_public.replenishment_executions": [], "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_executions": [], "source.nextail.GSTARRETAIL_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GSTARRETAIL_globaldomain_public.store_stock_items": [], "source.nextail.GSTARRETAIL_globaldomain_public.scenario": [], "source.nextail.GSTARRETAIL_globaldomain_public.warehouses": [], "source.nextail.GSTARRETAIL_globaldomain_public.skus": [], "source.nextail.GSTARRETAIL_globaldomain_public.seasons": [], "source.nextail.GSTARRETAIL_globaldomain_public.sales": [], "source.nextail.GSTARRETAIL_globaldomain_public.warehouse_stock_items": [], "source.nextail.GSTARRETAIL_globaldomain_public.databasechangelog": [], "source.nextail.GSTAR_globaldomain_public.admin_users": [], "source.nextail.GSTAR_globaldomain_public.first_allocation_execution": [], "source.nextail.GSTAR_globaldomain_public.category": [], "source.nextail.GSTAR_globaldomain_public.category_item_included": [], "source.nextail.GSTAR_globaldomain_public.products": [], "source.nextail.GSTAR_globaldomain_public.product_history": [], "source.nextail.GSTAR_globaldomain_public.stores": [], "source.nextail.GSTAR_globaldomain_public.families": [], "source.nextail.GSTAR_globaldomain_public.cron": [], "source.nextail.GSTAR_globaldomain_public.buy_execution": [], "source.nextail.GSTAR_globaldomain_public.dio_execution_selected": [], "source.nextail.GSTAR_globaldomain_public.engine_executions": [], "source.nextail.GSTAR_globaldomain_public.preconfigured_execution": [], "source.nextail.GSTAR_globaldomain_public.reorder_execution": [], "source.nextail.GSTAR_globaldomain_public.replenishment_executions": [], "source.nextail.GSTAR_globaldomain_public.store_transfers_executions": [], "source.nextail.GSTAR_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GSTAR_globaldomain_public.store_stock_items": [], "source.nextail.GSTAR_globaldomain_public.scenario": [], "source.nextail.GSTAR_globaldomain_public.warehouses": [], "source.nextail.GSTAR_globaldomain_public.skus": [], "source.nextail.GSTAR_globaldomain_public.seasons": [], "source.nextail.GSTAR_globaldomain_public.sales": [], "source.nextail.GSTAR_globaldomain_public.warehouse_stock_items": [], "source.nextail.GSTAR_globaldomain_public.databasechangelog": [], "source.nextail.GUESSEMEA_globaldomain_public.admin_users": [], "source.nextail.GUESSEMEA_globaldomain_public.first_allocation_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.category": [], "source.nextail.GUESSEMEA_globaldomain_public.category_item_included": [], "source.nextail.GUESSEMEA_globaldomain_public.products": [], "source.nextail.GUESSEMEA_globaldomain_public.product_history": [], "source.nextail.GUESSEMEA_globaldomain_public.stores": [], "source.nextail.GUESSEMEA_globaldomain_public.families": [], "source.nextail.GUESSEMEA_globaldomain_public.cron": [], "source.nextail.GUESSEMEA_globaldomain_public.buy_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.dio_execution_selected": [], "source.nextail.GUESSEMEA_globaldomain_public.engine_executions": [], "source.nextail.GUESSEMEA_globaldomain_public.preconfigured_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.reorder_execution": [], "source.nextail.GUESSEMEA_globaldomain_public.replenishment_executions": [], "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_executions": [], "source.nextail.GUESSEMEA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GUESSEMEA_globaldomain_public.store_stock_items": [], "source.nextail.GUESSEMEA_globaldomain_public.scenario": [], "source.nextail.GUESSEMEA_globaldomain_public.warehouses": [], "source.nextail.GUESSEMEA_globaldomain_public.skus": [], "source.nextail.GUESSEMEA_globaldomain_public.seasons": [], "source.nextail.GUESSEMEA_globaldomain_public.sales": [], "source.nextail.GUESSEMEA_globaldomain_public.warehouse_stock_items": [], "source.nextail.GUESSEMEA_globaldomain_public.databasechangelog": [], "source.nextail.GUESSUS_globaldomain_public.admin_users": [], "source.nextail.GUESSUS_globaldomain_public.first_allocation_execution": [], "source.nextail.GUESSUS_globaldomain_public.category": [], "source.nextail.GUESSUS_globaldomain_public.category_item_included": [], "source.nextail.GUESSUS_globaldomain_public.products": [], "source.nextail.GUESSUS_globaldomain_public.product_history": [], "source.nextail.GUESSUS_globaldomain_public.stores": [], "source.nextail.GUESSUS_globaldomain_public.families": [], "source.nextail.GUESSUS_globaldomain_public.cron": [], "source.nextail.GUESSUS_globaldomain_public.buy_execution": [], "source.nextail.GUESSUS_globaldomain_public.dio_execution_selected": [], "source.nextail.GUESSUS_globaldomain_public.engine_executions": [], "source.nextail.GUESSUS_globaldomain_public.preconfigured_execution": [], "source.nextail.GUESSUS_globaldomain_public.reorder_execution": [], "source.nextail.GUESSUS_globaldomain_public.replenishment_executions": [], "source.nextail.GUESSUS_globaldomain_public.store_transfers_executions": [], "source.nextail.GUESSUS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.GUESSUS_globaldomain_public.store_stock_items": [], "source.nextail.GUESSUS_globaldomain_public.scenario": [], "source.nextail.GUESSUS_globaldomain_public.warehouses": [], "source.nextail.GUESSUS_globaldomain_public.skus": [], "source.nextail.GUESSUS_globaldomain_public.seasons": [], "source.nextail.GUESSUS_globaldomain_public.sales": [], "source.nextail.GUESSUS_globaldomain_public.warehouse_stock_items": [], "source.nextail.GUESSUS_globaldomain_public.databasechangelog": [], "source.nextail.HACKETT_globaldomain_public.admin_users": [], "source.nextail.HACKETT_globaldomain_public.first_allocation_execution": [], "source.nextail.HACKETT_globaldomain_public.category": [], "source.nextail.HACKETT_globaldomain_public.category_item_included": [], "source.nextail.HACKETT_globaldomain_public.products": [], "source.nextail.HACKETT_globaldomain_public.product_history": [], "source.nextail.HACKETT_globaldomain_public.stores": [], "source.nextail.HACKETT_globaldomain_public.families": [], "source.nextail.HACKETT_globaldomain_public.cron": [], "source.nextail.HACKETT_globaldomain_public.buy_execution": [], "source.nextail.HACKETT_globaldomain_public.dio_execution_selected": [], "source.nextail.HACKETT_globaldomain_public.engine_executions": [], "source.nextail.HACKETT_globaldomain_public.preconfigured_execution": [], "source.nextail.HACKETT_globaldomain_public.reorder_execution": [], "source.nextail.HACKETT_globaldomain_public.replenishment_executions": [], "source.nextail.HACKETT_globaldomain_public.store_transfers_executions": [], "source.nextail.HACKETT_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.HACKETT_globaldomain_public.store_stock_items": [], "source.nextail.HACKETT_globaldomain_public.scenario": [], "source.nextail.HACKETT_globaldomain_public.warehouses": [], "source.nextail.HACKETT_globaldomain_public.skus": [], "source.nextail.HACKETT_globaldomain_public.seasons": [], "source.nextail.HACKETT_globaldomain_public.sales": [], "source.nextail.HACKETT_globaldomain_public.warehouse_stock_items": [], "source.nextail.HACKETT_globaldomain_public.databasechangelog": [], "source.nextail.JOTT_globaldomain_public.admin_users": [], "source.nextail.JOTT_globaldomain_public.first_allocation_execution": [], "source.nextail.JOTT_globaldomain_public.category": [], "source.nextail.JOTT_globaldomain_public.category_item_included": [], "source.nextail.JOTT_globaldomain_public.products": [], "source.nextail.JOTT_globaldomain_public.product_history": [], "source.nextail.JOTT_globaldomain_public.stores": [], "source.nextail.JOTT_globaldomain_public.families": [], "source.nextail.JOTT_globaldomain_public.cron": [], "source.nextail.JOTT_globaldomain_public.buy_execution": [], "source.nextail.JOTT_globaldomain_public.dio_execution_selected": [], "source.nextail.JOTT_globaldomain_public.engine_executions": [], "source.nextail.JOTT_globaldomain_public.preconfigured_execution": [], "source.nextail.JOTT_globaldomain_public.reorder_execution": [], "source.nextail.JOTT_globaldomain_public.replenishment_executions": [], "source.nextail.JOTT_globaldomain_public.store_transfers_executions": [], "source.nextail.JOTT_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.JOTT_globaldomain_public.store_stock_items": [], "source.nextail.JOTT_globaldomain_public.scenario": [], "source.nextail.JOTT_globaldomain_public.warehouses": [], "source.nextail.JOTT_globaldomain_public.skus": [], "source.nextail.JOTT_globaldomain_public.seasons": [], "source.nextail.JOTT_globaldomain_public.sales": [], "source.nextail.JOTT_globaldomain_public.warehouse_stock_items": [], "source.nextail.JOTT_globaldomain_public.databasechangelog": [], "source.nextail.JULES_globaldomain_public.admin_users": [], "source.nextail.JULES_globaldomain_public.first_allocation_execution": [], "source.nextail.JULES_globaldomain_public.category": [], "source.nextail.JULES_globaldomain_public.category_item_included": [], "source.nextail.JULES_globaldomain_public.products": [], "source.nextail.JULES_globaldomain_public.product_history": [], "source.nextail.JULES_globaldomain_public.stores": [], "source.nextail.JULES_globaldomain_public.families": [], "source.nextail.JULES_globaldomain_public.cron": [], "source.nextail.JULES_globaldomain_public.buy_execution": [], "source.nextail.JULES_globaldomain_public.dio_execution_selected": [], "source.nextail.JULES_globaldomain_public.engine_executions": [], "source.nextail.JULES_globaldomain_public.preconfigured_execution": [], "source.nextail.JULES_globaldomain_public.reorder_execution": [], "source.nextail.JULES_globaldomain_public.replenishment_executions": [], "source.nextail.JULES_globaldomain_public.store_transfers_executions": [], "source.nextail.JULES_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.JULES_globaldomain_public.store_stock_items": [], "source.nextail.JULES_globaldomain_public.scenario": [], "source.nextail.JULES_globaldomain_public.warehouses": [], "source.nextail.JULES_globaldomain_public.skus": [], "source.nextail.JULES_globaldomain_public.seasons": [], "source.nextail.JULES_globaldomain_public.sales": [], "source.nextail.JULES_globaldomain_public.warehouse_stock_items": [], "source.nextail.JULES_globaldomain_public.databasechangelog": [], "source.nextail.MAAG_globaldomain_public.admin_users": [], "source.nextail.MAAG_globaldomain_public.first_allocation_execution": [], "source.nextail.MAAG_globaldomain_public.category": [], "source.nextail.MAAG_globaldomain_public.category_item_included": [], "source.nextail.MAAG_globaldomain_public.products": [], "source.nextail.MAAG_globaldomain_public.product_history": [], "source.nextail.MAAG_globaldomain_public.stores": [], "source.nextail.MAAG_globaldomain_public.families": [], "source.nextail.MAAG_globaldomain_public.cron": [], "source.nextail.MAAG_globaldomain_public.buy_execution": [], "source.nextail.MAAG_globaldomain_public.dio_execution_selected": [], "source.nextail.MAAG_globaldomain_public.engine_executions": [], "source.nextail.MAAG_globaldomain_public.preconfigured_execution": [], "source.nextail.MAAG_globaldomain_public.reorder_execution": [], "source.nextail.MAAG_globaldomain_public.replenishment_executions": [], "source.nextail.MAAG_globaldomain_public.store_transfers_executions": [], "source.nextail.MAAG_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MAAG_globaldomain_public.store_stock_items": [], "source.nextail.MAAG_globaldomain_public.scenario": [], "source.nextail.MAAG_globaldomain_public.warehouses": [], "source.nextail.MAAG_globaldomain_public.skus": [], "source.nextail.MAAG_globaldomain_public.seasons": [], "source.nextail.MAAG_globaldomain_public.sales": [], "source.nextail.MAAG_globaldomain_public.warehouse_stock_items": [], "source.nextail.MAAG_globaldomain_public.databasechangelog": [], "source.nextail.MERKAL_globaldomain_public.admin_users": [], "source.nextail.MERKAL_globaldomain_public.first_allocation_execution": [], "source.nextail.MERKAL_globaldomain_public.category": [], "source.nextail.MERKAL_globaldomain_public.category_item_included": [], "source.nextail.MERKAL_globaldomain_public.products": [], "source.nextail.MERKAL_globaldomain_public.product_history": [], "source.nextail.MERKAL_globaldomain_public.stores": [], "source.nextail.MERKAL_globaldomain_public.families": [], "source.nextail.MERKAL_globaldomain_public.cron": [], "source.nextail.MERKAL_globaldomain_public.buy_execution": [], "source.nextail.MERKAL_globaldomain_public.dio_execution_selected": [], "source.nextail.MERKAL_globaldomain_public.engine_executions": [], "source.nextail.MERKAL_globaldomain_public.preconfigured_execution": [], "source.nextail.MERKAL_globaldomain_public.reorder_execution": [], "source.nextail.MERKAL_globaldomain_public.replenishment_executions": [], "source.nextail.MERKAL_globaldomain_public.store_transfers_executions": [], "source.nextail.MERKAL_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MERKAL_globaldomain_public.store_stock_items": [], "source.nextail.MERKAL_globaldomain_public.scenario": [], "source.nextail.MERKAL_globaldomain_public.warehouses": [], "source.nextail.MERKAL_globaldomain_public.skus": [], "source.nextail.MERKAL_globaldomain_public.seasons": [], "source.nextail.MERKAL_globaldomain_public.sales": [], "source.nextail.MERKAL_globaldomain_public.warehouse_stock_items": [], "source.nextail.MERKAL_globaldomain_public.databasechangelog": [], "source.nextail.METROBRANDS_globaldomain_public.admin_users": [], "source.nextail.METROBRANDS_globaldomain_public.first_allocation_execution": [], "source.nextail.METROBRANDS_globaldomain_public.category": [], "source.nextail.METROBRANDS_globaldomain_public.category_item_included": [], "source.nextail.METROBRANDS_globaldomain_public.products": [], "source.nextail.METROBRANDS_globaldomain_public.product_history": [], "source.nextail.METROBRANDS_globaldomain_public.stores": [], "source.nextail.METROBRANDS_globaldomain_public.families": [], "source.nextail.METROBRANDS_globaldomain_public.cron": [], "source.nextail.METROBRANDS_globaldomain_public.buy_execution": [], "source.nextail.METROBRANDS_globaldomain_public.dio_execution_selected": [], "source.nextail.METROBRANDS_globaldomain_public.engine_executions": [], "source.nextail.METROBRANDS_globaldomain_public.preconfigured_execution": [], "source.nextail.METROBRANDS_globaldomain_public.reorder_execution": [], "source.nextail.METROBRANDS_globaldomain_public.replenishment_executions": [], "source.nextail.METROBRANDS_globaldomain_public.store_transfers_executions": [], "source.nextail.METROBRANDS_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.METROBRANDS_globaldomain_public.store_stock_items": [], "source.nextail.METROBRANDS_globaldomain_public.scenario": [], "source.nextail.METROBRANDS_globaldomain_public.warehouses": [], "source.nextail.METROBRANDS_globaldomain_public.skus": [], "source.nextail.METROBRANDS_globaldomain_public.seasons": [], "source.nextail.METROBRANDS_globaldomain_public.sales": [], "source.nextail.METROBRANDS_globaldomain_public.warehouse_stock_items": [], "source.nextail.METROBRANDS_globaldomain_public.databasechangelog": [], "source.nextail.MFG_globaldomain_public.admin_users": [], "source.nextail.MFG_globaldomain_public.first_allocation_execution": [], "source.nextail.MFG_globaldomain_public.category": [], "source.nextail.MFG_globaldomain_public.category_item_included": [], "source.nextail.MFG_globaldomain_public.products": [], "source.nextail.MFG_globaldomain_public.product_history": [], "source.nextail.MFG_globaldomain_public.stores": [], "source.nextail.MFG_globaldomain_public.families": [], "source.nextail.MFG_globaldomain_public.cron": [], "source.nextail.MFG_globaldomain_public.buy_execution": [], "source.nextail.MFG_globaldomain_public.dio_execution_selected": [], "source.nextail.MFG_globaldomain_public.engine_executions": [], "source.nextail.MFG_globaldomain_public.preconfigured_execution": [], "source.nextail.MFG_globaldomain_public.reorder_execution": [], "source.nextail.MFG_globaldomain_public.replenishment_executions": [], "source.nextail.MFG_globaldomain_public.store_transfers_executions": [], "source.nextail.MFG_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MFG_globaldomain_public.store_stock_items": [], "source.nextail.MFG_globaldomain_public.scenario": [], "source.nextail.MFG_globaldomain_public.warehouses": [], "source.nextail.MFG_globaldomain_public.skus": [], "source.nextail.MFG_globaldomain_public.seasons": [], "source.nextail.MFG_globaldomain_public.sales": [], "source.nextail.MFG_globaldomain_public.warehouse_stock_items": [], "source.nextail.MFG_globaldomain_public.databasechangelog": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.admin_users": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.first_allocation_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.category_item_included": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.products": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.product_history": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.stores": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.families": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.cron": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.buy_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.dio_execution_selected": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.engine_executions": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.preconfigured_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.reorder_execution": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.replenishment_executions": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_executions": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.store_stock_items": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.scenario": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouses": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.skus": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.seasons": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.sales": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.warehouse_stock_items": [], "source.nextail.MOUNTAINWAREHOUSE_globaldomain_public.databasechangelog": [], "source.nextail.PEPE_globaldomain_public.admin_users": [], "source.nextail.PEPE_globaldomain_public.first_allocation_execution": [], "source.nextail.PEPE_globaldomain_public.category": [], "source.nextail.PEPE_globaldomain_public.category_item_included": [], "source.nextail.PEPE_globaldomain_public.products": [], "source.nextail.PEPE_globaldomain_public.product_history": [], "source.nextail.PEPE_globaldomain_public.stores": [], "source.nextail.PEPE_globaldomain_public.families": [], "source.nextail.PEPE_globaldomain_public.cron": [], "source.nextail.PEPE_globaldomain_public.buy_execution": [], "source.nextail.PEPE_globaldomain_public.dio_execution_selected": [], "source.nextail.PEPE_globaldomain_public.engine_executions": [], "source.nextail.PEPE_globaldomain_public.preconfigured_execution": [], "source.nextail.PEPE_globaldomain_public.reorder_execution": [], "source.nextail.PEPE_globaldomain_public.replenishment_executions": [], "source.nextail.PEPE_globaldomain_public.store_transfers_executions": [], "source.nextail.PEPE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.PEPE_globaldomain_public.store_stock_items": [], "source.nextail.PEPE_globaldomain_public.scenario": [], "source.nextail.PEPE_globaldomain_public.warehouses": [], "source.nextail.PEPE_globaldomain_public.skus": [], "source.nextail.PEPE_globaldomain_public.seasons": [], "source.nextail.PEPE_globaldomain_public.sales": [], "source.nextail.PEPE_globaldomain_public.warehouse_stock_items": [], "source.nextail.PEPE_globaldomain_public.databasechangelog": [], "source.nextail.RIVERISLAND_globaldomain_public.admin_users": [], "source.nextail.RIVERISLAND_globaldomain_public.first_allocation_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.category": [], "source.nextail.RIVERISLAND_globaldomain_public.category_item_included": [], "source.nextail.RIVERISLAND_globaldomain_public.products": [], "source.nextail.RIVERISLAND_globaldomain_public.product_history": [], "source.nextail.RIVERISLAND_globaldomain_public.stores": [], "source.nextail.RIVERISLAND_globaldomain_public.families": [], "source.nextail.RIVERISLAND_globaldomain_public.cron": [], "source.nextail.RIVERISLAND_globaldomain_public.buy_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.dio_execution_selected": [], "source.nextail.RIVERISLAND_globaldomain_public.engine_executions": [], "source.nextail.RIVERISLAND_globaldomain_public.preconfigured_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.reorder_execution": [], "source.nextail.RIVERISLAND_globaldomain_public.replenishment_executions": [], "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_executions": [], "source.nextail.RIVERISLAND_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.RIVERISLAND_globaldomain_public.store_stock_items": [], "source.nextail.RIVERISLAND_globaldomain_public.scenario": [], "source.nextail.RIVERISLAND_globaldomain_public.warehouses": [], "source.nextail.RIVERISLAND_globaldomain_public.skus": [], "source.nextail.RIVERISLAND_globaldomain_public.seasons": [], "source.nextail.RIVERISLAND_globaldomain_public.sales": [], "source.nextail.RIVERISLAND_globaldomain_public.warehouse_stock_items": [], "source.nextail.RIVERISLAND_globaldomain_public.databasechangelog": [], "source.nextail.SCOTTA_globaldomain_public.admin_users": [], "source.nextail.SCOTTA_globaldomain_public.first_allocation_execution": [], "source.nextail.SCOTTA_globaldomain_public.category": [], "source.nextail.SCOTTA_globaldomain_public.category_item_included": [], "source.nextail.SCOTTA_globaldomain_public.products": [], "source.nextail.SCOTTA_globaldomain_public.product_history": [], "source.nextail.SCOTTA_globaldomain_public.stores": [], "source.nextail.SCOTTA_globaldomain_public.families": [], "source.nextail.SCOTTA_globaldomain_public.cron": [], "source.nextail.SCOTTA_globaldomain_public.buy_execution": [], "source.nextail.SCOTTA_globaldomain_public.dio_execution_selected": [], "source.nextail.SCOTTA_globaldomain_public.engine_executions": [], "source.nextail.SCOTTA_globaldomain_public.preconfigured_execution": [], "source.nextail.SCOTTA_globaldomain_public.reorder_execution": [], "source.nextail.SCOTTA_globaldomain_public.replenishment_executions": [], "source.nextail.SCOTTA_globaldomain_public.store_transfers_executions": [], "source.nextail.SCOTTA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SCOTTA_globaldomain_public.store_stock_items": [], "source.nextail.SCOTTA_globaldomain_public.scenario": [], "source.nextail.SCOTTA_globaldomain_public.warehouses": [], "source.nextail.SCOTTA_globaldomain_public.skus": [], "source.nextail.SCOTTA_globaldomain_public.seasons": [], "source.nextail.SCOTTA_globaldomain_public.sales": [], "source.nextail.SCOTTA_globaldomain_public.warehouse_stock_items": [], "source.nextail.SCOTTA_globaldomain_public.databasechangelog": [], "source.nextail.SILBON_globaldomain_public.admin_users": [], "source.nextail.SILBON_globaldomain_public.first_allocation_execution": [], "source.nextail.SILBON_globaldomain_public.category": [], "source.nextail.SILBON_globaldomain_public.category_item_included": [], "source.nextail.SILBON_globaldomain_public.products": [], "source.nextail.SILBON_globaldomain_public.product_history": [], "source.nextail.SILBON_globaldomain_public.stores": [], "source.nextail.SILBON_globaldomain_public.families": [], "source.nextail.SILBON_globaldomain_public.cron": [], "source.nextail.SILBON_globaldomain_public.buy_execution": [], "source.nextail.SILBON_globaldomain_public.dio_execution_selected": [], "source.nextail.SILBON_globaldomain_public.engine_executions": [], "source.nextail.SILBON_globaldomain_public.preconfigured_execution": [], "source.nextail.SILBON_globaldomain_public.reorder_execution": [], "source.nextail.SILBON_globaldomain_public.replenishment_executions": [], "source.nextail.SILBON_globaldomain_public.store_transfers_executions": [], "source.nextail.SILBON_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SILBON_globaldomain_public.store_stock_items": [], "source.nextail.SILBON_globaldomain_public.scenario": [], "source.nextail.SILBON_globaldomain_public.warehouses": [], "source.nextail.SILBON_globaldomain_public.skus": [], "source.nextail.SILBON_globaldomain_public.seasons": [], "source.nextail.SILBON_globaldomain_public.sales": [], "source.nextail.SILBON_globaldomain_public.warehouse_stock_items": [], "source.nextail.SILBON_globaldomain_public.databasechangelog": [], "source.nextail.SFERABASICMAN_globaldomain_public.admin_users": [], "source.nextail.SFERABASICMAN_globaldomain_public.first_allocation_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.category": [], "source.nextail.SFERABASICMAN_globaldomain_public.category_item_included": [], "source.nextail.SFERABASICMAN_globaldomain_public.products": [], "source.nextail.SFERABASICMAN_globaldomain_public.product_history": [], "source.nextail.SFERABASICMAN_globaldomain_public.stores": [], "source.nextail.SFERABASICMAN_globaldomain_public.families": [], "source.nextail.SFERABASICMAN_globaldomain_public.cron": [], "source.nextail.SFERABASICMAN_globaldomain_public.buy_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.dio_execution_selected": [], "source.nextail.SFERABASICMAN_globaldomain_public.engine_executions": [], "source.nextail.SFERABASICMAN_globaldomain_public.preconfigured_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.reorder_execution": [], "source.nextail.SFERABASICMAN_globaldomain_public.replenishment_executions": [], "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_executions": [], "source.nextail.SFERABASICMAN_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SFERABASICMAN_globaldomain_public.store_stock_items": [], "source.nextail.SFERABASICMAN_globaldomain_public.scenario": [], "source.nextail.SFERABASICMAN_globaldomain_public.warehouses": [], "source.nextail.SFERABASICMAN_globaldomain_public.skus": [], "source.nextail.SFERABASICMAN_globaldomain_public.seasons": [], "source.nextail.SFERABASICMAN_globaldomain_public.sales": [], "source.nextail.SFERABASICMAN_globaldomain_public.warehouse_stock_items": [], "source.nextail.SFERABASICMAN_globaldomain_public.databasechangelog": [], "source.nextail.SPORTSEMOTION_globaldomain_public.admin_users": [], "source.nextail.SPORTSEMOTION_globaldomain_public.first_allocation_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.category": [], "source.nextail.SPORTSEMOTION_globaldomain_public.category_item_included": [], "source.nextail.SPORTSEMOTION_globaldomain_public.products": [], "source.nextail.SPORTSEMOTION_globaldomain_public.product_history": [], "source.nextail.SPORTSEMOTION_globaldomain_public.stores": [], "source.nextail.SPORTSEMOTION_globaldomain_public.families": [], "source.nextail.SPORTSEMOTION_globaldomain_public.cron": [], "source.nextail.SPORTSEMOTION_globaldomain_public.buy_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.dio_execution_selected": [], "source.nextail.SPORTSEMOTION_globaldomain_public.engine_executions": [], "source.nextail.SPORTSEMOTION_globaldomain_public.preconfigured_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.reorder_execution": [], "source.nextail.SPORTSEMOTION_globaldomain_public.replenishment_executions": [], "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_executions": [], "source.nextail.SPORTSEMOTION_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SPORTSEMOTION_globaldomain_public.store_stock_items": [], "source.nextail.SPORTSEMOTION_globaldomain_public.scenario": [], "source.nextail.SPORTSEMOTION_globaldomain_public.warehouses": [], "source.nextail.SPORTSEMOTION_globaldomain_public.skus": [], "source.nextail.SPORTSEMOTION_globaldomain_public.seasons": [], "source.nextail.SPORTSEMOTION_globaldomain_public.sales": [], "source.nextail.SPORTSEMOTION_globaldomain_public.warehouse_stock_items": [], "source.nextail.SPORTSEMOTION_globaldomain_public.databasechangelog": [], "source.nextail.SPORTSTREET_globaldomain_public.admin_users": [], "source.nextail.SPORTSTREET_globaldomain_public.first_allocation_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.category": [], "source.nextail.SPORTSTREET_globaldomain_public.category_item_included": [], "source.nextail.SPORTSTREET_globaldomain_public.products": [], "source.nextail.SPORTSTREET_globaldomain_public.product_history": [], "source.nextail.SPORTSTREET_globaldomain_public.stores": [], "source.nextail.SPORTSTREET_globaldomain_public.families": [], "source.nextail.SPORTSTREET_globaldomain_public.cron": [], "source.nextail.SPORTSTREET_globaldomain_public.buy_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.dio_execution_selected": [], "source.nextail.SPORTSTREET_globaldomain_public.engine_executions": [], "source.nextail.SPORTSTREET_globaldomain_public.preconfigured_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.reorder_execution": [], "source.nextail.SPORTSTREET_globaldomain_public.replenishment_executions": [], "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_executions": [], "source.nextail.SPORTSTREET_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SPORTSTREET_globaldomain_public.store_stock_items": [], "source.nextail.SPORTSTREET_globaldomain_public.scenario": [], "source.nextail.SPORTSTREET_globaldomain_public.warehouses": [], "source.nextail.SPORTSTREET_globaldomain_public.skus": [], "source.nextail.SPORTSTREET_globaldomain_public.seasons": [], "source.nextail.SPORTSTREET_globaldomain_public.sales": [], "source.nextail.SPORTSTREET_globaldomain_public.warehouse_stock_items": [], "source.nextail.SPORTSTREET_globaldomain_public.databasechangelog": [], "source.nextail.SUAREZ_globaldomain_public.admin_users": [], "source.nextail.SUAREZ_globaldomain_public.first_allocation_execution": [], "source.nextail.SUAREZ_globaldomain_public.category": [], "source.nextail.SUAREZ_globaldomain_public.category_item_included": [], "source.nextail.SUAREZ_globaldomain_public.products": [], "source.nextail.SUAREZ_globaldomain_public.product_history": [], "source.nextail.SUAREZ_globaldomain_public.stores": [], "source.nextail.SUAREZ_globaldomain_public.families": [], "source.nextail.SUAREZ_globaldomain_public.cron": [], "source.nextail.SUAREZ_globaldomain_public.buy_execution": [], "source.nextail.SUAREZ_globaldomain_public.dio_execution_selected": [], "source.nextail.SUAREZ_globaldomain_public.engine_executions": [], "source.nextail.SUAREZ_globaldomain_public.preconfigured_execution": [], "source.nextail.SUAREZ_globaldomain_public.reorder_execution": [], "source.nextail.SUAREZ_globaldomain_public.replenishment_executions": [], "source.nextail.SUAREZ_globaldomain_public.store_transfers_executions": [], "source.nextail.SUAREZ_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.SUAREZ_globaldomain_public.store_stock_items": [], "source.nextail.SUAREZ_globaldomain_public.scenario": [], "source.nextail.SUAREZ_globaldomain_public.warehouses": [], "source.nextail.SUAREZ_globaldomain_public.skus": [], "source.nextail.SUAREZ_globaldomain_public.seasons": [], "source.nextail.SUAREZ_globaldomain_public.sales": [], "source.nextail.SUAREZ_globaldomain_public.warehouse_stock_items": [], "source.nextail.SUAREZ_globaldomain_public.databasechangelog": [], "source.nextail.TERRANOVA_globaldomain_public.admin_users": [], "source.nextail.TERRANOVA_globaldomain_public.first_allocation_execution": [], "source.nextail.TERRANOVA_globaldomain_public.category": [], "source.nextail.TERRANOVA_globaldomain_public.category_item_included": [], "source.nextail.TERRANOVA_globaldomain_public.products": [], "source.nextail.TERRANOVA_globaldomain_public.product_history": [], "source.nextail.TERRANOVA_globaldomain_public.stores": [], "source.nextail.TERRANOVA_globaldomain_public.families": [], "source.nextail.TERRANOVA_globaldomain_public.cron": [], "source.nextail.TERRANOVA_globaldomain_public.buy_execution": [], "source.nextail.TERRANOVA_globaldomain_public.dio_execution_selected": [], "source.nextail.TERRANOVA_globaldomain_public.engine_executions": [], "source.nextail.TERRANOVA_globaldomain_public.preconfigured_execution": [], "source.nextail.TERRANOVA_globaldomain_public.reorder_execution": [], "source.nextail.TERRANOVA_globaldomain_public.replenishment_executions": [], "source.nextail.TERRANOVA_globaldomain_public.store_transfers_executions": [], "source.nextail.TERRANOVA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.TERRANOVA_globaldomain_public.store_stock_items": [], "source.nextail.TERRANOVA_globaldomain_public.scenario": [], "source.nextail.TERRANOVA_globaldomain_public.warehouses": [], "source.nextail.TERRANOVA_globaldomain_public.skus": [], "source.nextail.TERRANOVA_globaldomain_public.seasons": [], "source.nextail.TERRANOVA_globaldomain_public.sales": [], "source.nextail.TERRANOVA_globaldomain_public.warehouse_stock_items": [], "source.nextail.TERRANOVA_globaldomain_public.databasechangelog": [], "source.nextail.TVOE_globaldomain_public.admin_users": [], "source.nextail.TVOE_globaldomain_public.first_allocation_execution": [], "source.nextail.TVOE_globaldomain_public.category": [], "source.nextail.TVOE_globaldomain_public.category_item_included": [], "source.nextail.TVOE_globaldomain_public.products": [], "source.nextail.TVOE_globaldomain_public.product_history": [], "source.nextail.TVOE_globaldomain_public.stores": [], "source.nextail.TVOE_globaldomain_public.families": [], "source.nextail.TVOE_globaldomain_public.cron": [], "source.nextail.TVOE_globaldomain_public.buy_execution": [], "source.nextail.TVOE_globaldomain_public.dio_execution_selected": [], "source.nextail.TVOE_globaldomain_public.engine_executions": [], "source.nextail.TVOE_globaldomain_public.preconfigured_execution": [], "source.nextail.TVOE_globaldomain_public.reorder_execution": [], "source.nextail.TVOE_globaldomain_public.replenishment_executions": [], "source.nextail.TVOE_globaldomain_public.store_transfers_executions": [], "source.nextail.TVOE_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.TVOE_globaldomain_public.store_stock_items": [], "source.nextail.TVOE_globaldomain_public.scenario": [], "source.nextail.TVOE_globaldomain_public.warehouses": [], "source.nextail.TVOE_globaldomain_public.skus": [], "source.nextail.TVOE_globaldomain_public.seasons": [], "source.nextail.TVOE_globaldomain_public.sales": [], "source.nextail.TVOE_globaldomain_public.warehouse_stock_items": [], "source.nextail.TVOE_globaldomain_public.databasechangelog": [], "source.nextail.VALEXTRA_globaldomain_public.admin_users": [], "source.nextail.VALEXTRA_globaldomain_public.first_allocation_execution": [], "source.nextail.VALEXTRA_globaldomain_public.category": [], "source.nextail.VALEXTRA_globaldomain_public.category_item_included": [], "source.nextail.VALEXTRA_globaldomain_public.products": [], "source.nextail.VALEXTRA_globaldomain_public.product_history": [], "source.nextail.VALEXTRA_globaldomain_public.stores": [], "source.nextail.VALEXTRA_globaldomain_public.families": [], "source.nextail.VALEXTRA_globaldomain_public.cron": [], "source.nextail.VALEXTRA_globaldomain_public.buy_execution": [], "source.nextail.VALEXTRA_globaldomain_public.dio_execution_selected": [], "source.nextail.VALEXTRA_globaldomain_public.engine_executions": [], "source.nextail.VALEXTRA_globaldomain_public.preconfigured_execution": [], "source.nextail.VALEXTRA_globaldomain_public.reorder_execution": [], "source.nextail.VALEXTRA_globaldomain_public.replenishment_executions": [], "source.nextail.VALEXTRA_globaldomain_public.store_transfers_executions": [], "source.nextail.VALEXTRA_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.VALEXTRA_globaldomain_public.store_stock_items": [], "source.nextail.VALEXTRA_globaldomain_public.scenario": [], "source.nextail.VALEXTRA_globaldomain_public.warehouses": [], "source.nextail.VALEXTRA_globaldomain_public.skus": [], "source.nextail.VALEXTRA_globaldomain_public.seasons": [], "source.nextail.VALEXTRA_globaldomain_public.sales": [], "source.nextail.VALEXTRA_globaldomain_public.warehouse_stock_items": [], "source.nextail.VALEXTRA_globaldomain_public.databasechangelog": [], "source.nextail.VILET_globaldomain_public.admin_users": [], "source.nextail.VILET_globaldomain_public.first_allocation_execution": [], "source.nextail.VILET_globaldomain_public.category": [], "source.nextail.VILET_globaldomain_public.category_item_included": [], "source.nextail.VILET_globaldomain_public.products": [], "source.nextail.VILET_globaldomain_public.product_history": [], "source.nextail.VILET_globaldomain_public.stores": [], "source.nextail.VILET_globaldomain_public.families": [], "source.nextail.VILET_globaldomain_public.cron": [], "source.nextail.VILET_globaldomain_public.buy_execution": [], "source.nextail.VILET_globaldomain_public.dio_execution_selected": [], "source.nextail.VILET_globaldomain_public.engine_executions": [], "source.nextail.VILET_globaldomain_public.preconfigured_execution": [], "source.nextail.VILET_globaldomain_public.reorder_execution": [], "source.nextail.VILET_globaldomain_public.replenishment_executions": [], "source.nextail.VILET_globaldomain_public.store_transfers_executions": [], "source.nextail.VILET_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.VILET_globaldomain_public.store_stock_items": [], "source.nextail.VILET_globaldomain_public.scenario": [], "source.nextail.VILET_globaldomain_public.warehouses": [], "source.nextail.VILET_globaldomain_public.skus": [], "source.nextail.VILET_globaldomain_public.seasons": [], "source.nextail.VILET_globaldomain_public.sales": [], "source.nextail.VILET_globaldomain_public.warehouse_stock_items": [], "source.nextail.VILET_globaldomain_public.databasechangelog": [], "source.nextail.WHITESTUFF_globaldomain_public.admin_users": [], "source.nextail.WHITESTUFF_globaldomain_public.first_allocation_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.category": [], "source.nextail.WHITESTUFF_globaldomain_public.category_item_included": [], "source.nextail.WHITESTUFF_globaldomain_public.products": [], "source.nextail.WHITESTUFF_globaldomain_public.product_history": [], "source.nextail.WHITESTUFF_globaldomain_public.stores": [], "source.nextail.WHITESTUFF_globaldomain_public.families": [], "source.nextail.WHITESTUFF_globaldomain_public.cron": [], "source.nextail.WHITESTUFF_globaldomain_public.buy_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.dio_execution_selected": [], "source.nextail.WHITESTUFF_globaldomain_public.engine_executions": [], "source.nextail.WHITESTUFF_globaldomain_public.preconfigured_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.reorder_execution": [], "source.nextail.WHITESTUFF_globaldomain_public.replenishment_executions": [], "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_executions": [], "source.nextail.WHITESTUFF_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.WHITESTUFF_globaldomain_public.store_stock_items": [], "source.nextail.WHITESTUFF_globaldomain_public.scenario": [], "source.nextail.WHITESTUFF_globaldomain_public.warehouses": [], "source.nextail.WHITESTUFF_globaldomain_public.skus": [], "source.nextail.WHITESTUFF_globaldomain_public.seasons": [], "source.nextail.WHITESTUFF_globaldomain_public.sales": [], "source.nextail.WHITESTUFF_globaldomain_public.warehouse_stock_items": [], "source.nextail.WHITESTUFF_globaldomain_public.databasechangelog": [], "source.nextail.WOOLRICH_globaldomain_public.admin_users": [], "source.nextail.WOOLRICH_globaldomain_public.first_allocation_execution": [], "source.nextail.WOOLRICH_globaldomain_public.category": [], "source.nextail.WOOLRICH_globaldomain_public.category_item_included": [], "source.nextail.WOOLRICH_globaldomain_public.products": [], "source.nextail.WOOLRICH_globaldomain_public.product_history": [], "source.nextail.WOOLRICH_globaldomain_public.stores": [], "source.nextail.WOOLRICH_globaldomain_public.families": [], "source.nextail.WOOLRICH_globaldomain_public.cron": [], "source.nextail.WOOLRICH_globaldomain_public.buy_execution": [], "source.nextail.WOOLRICH_globaldomain_public.dio_execution_selected": [], "source.nextail.WOOLRICH_globaldomain_public.engine_executions": [], "source.nextail.WOOLRICH_globaldomain_public.preconfigured_execution": [], "source.nextail.WOOLRICH_globaldomain_public.reorder_execution": [], "source.nextail.WOOLRICH_globaldomain_public.replenishment_executions": [], "source.nextail.WOOLRICH_globaldomain_public.store_transfers_executions": [], "source.nextail.WOOLRICH_globaldomain_public.store_transfers_execution_aggregates": [], "source.nextail.WOOLRICH_globaldomain_public.store_stock_items": [], "source.nextail.WOOLRICH_globaldomain_public.scenario": [], "source.nextail.WOOLRICH_globaldomain_public.warehouses": [], "source.nextail.WOOLRICH_globaldomain_public.skus": [], "source.nextail.WOOLRICH_globaldomain_public.seasons": [], "source.nextail.WOOLRICH_globaldomain_public.sales": [], "source.nextail.WOOLRICH_globaldomain_public.warehouse_stock_items": [], "source.nextail.WOOLRICH_globaldomain_public.databasechangelog": [], "source.nextail.okta_public.login_event": []}, "group_map": {}, "saved_queries": {}, "semantic_models": {}, "unit_tests": {}}